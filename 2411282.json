[
  {
    "bookSourceComment": "仅支持网络小说（非文库本）\n酷安 @吉王义昊\nGitHub：https://github.com/jiwangyihao/source-j-legado\n# 关于许可的额外声明（在线版本参见 GitHub，以在线版本为准）\n- 当许可证与本声明冲突时，以本声明为准；\n- 对于本仓库中的任意代码片段：按照 `MPL 2.0` 中有关约定执行；\n- 对于本仓库中的某一完整书源的转载或二次开发，需满足以下全部条件：\n  - 在[本仓库](https://github.com/jiwangyihao/source-j-legado)的 `issue` 中提出请求并具体说明转载地址、二次开发后的书源开源地址以及其他必要信息；\n  - 等待原作者（即本仓库的初始所有者和初始代码贡献者 [@jiwangyihao](https://github.com/jiwangyihao)）查看并通过 `issue` 或依据原作者要求更改转载方式或补充更详细的信息。\n  - 考虑到本项目弃坑的可能，新 `issue` 开启后超过 20 个工作日原作者没有回复或者原作者回复要求更改的 `issue` 在更改后超过 20 个工作日原作者没有回复即视为原作者通过该 `issue`：\n    - 此处的 `issue` 仅包括在[本仓库](https://github.com/jiwangyihao/source-j-legado)开启的，处于「开启状态」的 issue。（也就是说，请不要在已经关闭的 issue 中回复）。\n    - 对于此种方式通过的 issue，转载/二次开发者仍应当遵守本声明中已经写明的相关约定。\n  - 不得上传至源仓库或整理至`非轻小说专用`的书源合集中并应当避免其他人将转载/二次开发版本上传至源仓库或整理至`非轻小说专用`的书源合集中：\n    - 关于轻小说的定义的额外说明：不包括国内的原创网络文学作品（如 `SF 轻小说` 中的原创轻小说以及`起点中文网`中标签包含轻小说的作品）。\n    - 轻小说专用的定义：有且仅有想看轻小说的人可能会添加。\n  - 必须在转载/二次开发地址的明显位置完整包含本声明的全部内容。\n  - 必须保留源注释中原有的更改记录。\n2024.4.10\n酷安 @吉王义昊\n处理目录中的卷名\n解决了章节中的引号导致加载目录失败的问题",
    "bookSourceGroup": "🌸轻文",
    "bookSourceName": "轻小说机翻",
    "bookSourceType": 0,
    "bookSourceUrl": "https://books.fishhawk.top/",
    "customOrder": 38,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nresult=[\n  {\n    'title': '>> 个人中心 <<',\n    'url': \"\",\n    'style':{\n      layout_flexGrow:1,\n      layout_flexBasisPercent:1\n    }\n  },\n  {\n    'title': \"阅读历史\",\n    'url': `/api/user/read-history?page={{page-1}}&pageSize=30`,\n    'style':{\n      layout_flexGrow:2,\n      layout_flexBasisPercent:0.25\n    \t}\n  }\n]\nfavored = String(java.ajax(source.bookSourceUrl + \"/api/user/favored\"))\nif (favored.match(\"Token不合法或者过期\")) {\n  result[0].title = '>> 个人中心 | 未登录 <<'\n} else {\n  favored = JSON.parse(java.ajax(source.bookSourceUrl + \"/api/user/favored\")).web\n  favored.forEach(favor => {\n    result.push({\n      'title': favor.title,\n      'url': `/api/user/favored-web/${favor.id}?page={{page-1}}&pageSize=30&sort=update`,\n      'style':{\n        layout_flexGrow:2,\n        layout_flexBasisPercent:0.25\n      \t}\n    })\n  })\n}\nString(java.ajax(`https://mirror.ghproxy.com/https://raw.githubusercontent.com/FishHawk/auto-novel/main/web/src/pages/list/components/menu.ts, {\n  \"headers\": {\n    \"Authorization\": \"\"\n  }\n}`))\n.match(/menuOption\\(.+\\)/gi).forEach((menu,index)=>{\n  if (index>0) {\n    title=menu.replace(/menuOption\\('(.+)',.?'(.+)'\\)/gi, \"$1\")\n    href=menu.replace(/menuOption\\('(.+)',.?'(.+)'\\)/gi, \"$2\")\n    result.push({\n    'title': `>> ${title} <<`,\n    'url': \"\",\n    'style':{\n      layout_flexGrow:1,\n      layout_flexBasisPercent:1\n    }\n  })\n    html = org.jsoup.Jsoup.parse(String(java.webView(null,source.bookSourceUrl + href.replace(/^\\//i,''),null)))\n    sorts = html.select(\".n-layout-scroll-container .n-flex h1 + div + div.n-flex > .n-flex\")\n    sorts[0].select(\".n-flex > .n-flex > .n-flex > span\").forEach(tag => {\n      result.push({\n        'title': tag.text(),\n        'url': href.replace(/\\/(.+)\\/(.+)\\/(.+)/gi, \"$3\") != \"2\" ? `/api/novel/rank/${href.replace(/\\/(.+)\\/(.+)\\/(.+)/gi, \"$2\")}?type=${title.replace(/(.+)：(.+)/gi,\"$2\").replace(\"异世界转移/转生\", \"异世界转生/转移\")}&genre=${tag.text()}&range=总计&status=全部&page={{page-1}}` : `/api/novel/rank/${href.replace(/\\/(.+)\\/(.+)\\/(.+)/gi, \"$2\")}?type=${title.replace(/(.+)：(.+)/gi,\"$2\")}&range=${tag.text()}&status=全部&page={{page-1}}`,\n        'style':{\n          layout_flexGrow:2,\n          layout_flexBasisPercent:0.4\n        \t}\n      })\n    \t})\n  }\n})\nJSON.stringify(result)",
    "jsLib": "function getConfig() {\n  const { book, source, java } = this\n  const config = {\n  \t  language: \"中日\",\n  \t  translation: \"SGYB\",\n  \t  translationArr: []\n  \t}\n  \tconst languages = [\n  \t  \"日文\",\n    \"中文\",\n    \"中日\",\n    \"日中\"\n  ]\n  const translations = {\n  \t  B: \"baiduParagraphs\",\n  \t  Y: \"youdaoParagraphs\",\n  \t  G: \"gptParagraphs\",\n  \t  S: \"sakuraParagraphs\"\n  \t}\n  \tfunction applyTran(tranStr) {\n  \t  config.translation=tranStr\n  \t  if (tranStr===\"并列\") tranStr=\"SGYB\"\n  \t  let tranArr = []\n  \t  for (let i=0; i<tranStr.length; i++) {\n  \t  \t  tranArr.push(translations[tranStr.charAt(i)])\n  \t  \t}\n  \t  \tconfig.translationArr=tranArr\n  \t}\n  \tfunction applyLanguage(lang) {\n  \t  if (languages.includes(lang))\n  \t  \t  config.language=lang\n  \t}\n  \tapplyTran(config.translation)\n  sVar = String(source.getVariable()).replace(/\\s/gi, '').split('-')\n  if (sVar[0]) applyLanguage(sVar[0])\n  if (sVar[1]) applyTran(sVar[1])\n  bVar = String(book.getVariable(\"custom\")).replace(/\\s/gi, '').split('-')\n  if (bVar[0]) applyLanguage(bVar[0])\n  if (bVar[1]) applyTran(bVar[1])\n  return config\n}",
    "lastUpdateTime": 1732103294101,
    "loginUi": "[\n  {\n    \"name\": \"账号\",\n    \"type\": \"text\"\n  },\n  {\n    \"name\": \"密码\",\n    \"type\": \"password\"\n  }\n]",
    "loginUrl": "@js:\nfunction login() {\n  let une = source.getLoginInfoMap().get(\"账号\")\n  let pwd = source.getLoginInfoMap().get(\"密码\")\n  if (une && pwd) {\n    let body = JSON.stringify({\n      emailOrUsername: une,\n      password: pwd\n    })\n    let url = source.bookSourceUrl + '/api/auth/sign-in'\n    let res = java.post(url, body, {\n      \"Content-Type\": \"application/json\"\n    })\n    if (res.body().match(/错误/gi)) {\n      throw(res.body())\n    }\n    result = JSON.parse(res.body())\n    \n    let header = JSON.stringify({\n      \"Authorization\": \"Bearer \" + result.token\n    })\n    source.putLoginHeader(header)\n  }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "$.authors.*.name",
      "init": "@js:\nresult=JSON.parse(result)\nresult.points+=' PT'\nresult.visited+=' 浏览'\nJSON.stringify(result)",
      "intro": "当前规则：语言展现形式-{{getConfig().language}}，翻译优先级-{{getConfig().translation}}（可在源变量或书籍变量中修改，详情参考变量说明）\n\n{{$.titleJp}}\n总计：{{$.total}} 百度：{{$.baidu}} 有道：{{$.youdao}} GPT：{{$.gpt}} Sakura：{{$.sakura}}\n\n{{$.introductionZh}}\n\n{{$.introductionJp}}",
      "kind": "$.attentions&&$.type&&$.points&&$.visited&&$.keywords",
      "lastChapter": "{{$.toc[-1].chapterId}} - {{$.toc[-1].titleZh}}",
      "name": "$.titleZh",
      "wordCount": "$.totalCharacters"
    },
    "ruleContent": {
      "content": "@js:\nresult=JSON.parse(result)\nconfig=getConfig()\nresult.paragraphs.map((p, i) => {\n  function generateTran(i) {\n    const chars = {\n  \t    baiduParagraphs: \"ᵇ\",\n  \t    youdaoParagraphs: \"ʸ\",\n  \t    gptParagraphs: \"ᵍ\",\n  \t    sakuraParagraphs: \"ˢ\"\n    }\n    if (config.translation===\"并列\") {\n      return config.translationArr.map(\n        t => result[t] ? (result[t][i]!=\"\" ? chars[t] : \"\") + result[t][i] : \"\"\n      ).join(\"\\n\")\n    } else {\n      for (let tt=0; tt<config.translationArr.length; tt++) {\n        const t=config.translationArr[tt]\n        if (result[t]) return (result[t][i]!=\"\" ? chars[t] : \"\") + result[t][i]\n      }\n    }\n  \t}\n  switch (String(config.language)) {\n  \t  case \"日文\":\n  \t    return p\n  \t  case \"中文\":\n  \t    return generateTran(i)\n  \t  case \"中日\":\n  \t    return [generateTran(i), p].join(\"\\n\")\n  \t  case \"日中\":\n  \t    return [p, generateTran(i)].join(\"\\n\")\n  \t}\n}).join('\\n')"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "bookList": "$.items",
      "bookUrl": "https://books.fishhawk.top/api/novel/{{$.providerId}}/{{$.novelId}}",
      "checkKeyWord": "转生第七王子",
      "intro": "{{$.titleJp}}\n总计：{{$.total}} 百度：{{$.baidu}} 有道：{{$.youdao}} GPT：{{$.gpt}} Sakura：{{$.sakura}}",
      "kind": "$.attentions&&$.type&&$.keywords",
      "lastChapter": "@js:\n`{{$.total}} - ` + new Date(parseInt({{$.updateAt}}) * 1000).toJSON().replace(/T|\\.\\d+Z/gi, ' ')",
      "name": "$.titleZh"
    },
    "ruleToc": {
      "chapterList": "$.toc",
      "chapterName": "@js:\n`{{$.chapterId}}` ? `{{$.chapterId}} - {{$.titleZh}}` : `{{$.titleZh}} - {{$.titleJp}}`",
      "chapterUrl": "@js:\n`{{$.chapterId}}` ? `{{baseUrl}}/chapter/{{$.chapterId}}` : ''",
      "isVolume": "@js:\n!`{{$.chapterId}}`",
      "updateTime": "@js:\n`{{$.chapterId}}` ? (`{{$.titleJp}} - ` + (`{{$.createAt}}` ? new Date(parseInt({{$.createAt}}) * 1000).toJSON().replace(/T|\\.\\d+Z/gi, ' ') : '暂无')) : ''"
    },
    "searchUrl": "https://books.fishhawk.top/api/novel?page={{page-1}}&pageSize=20&query={{key}}&provider=kakuyomu%2Csyosetu%2Cnovelup%2Chameln%2Cpixiv%2Calphapolis&type=0&level=1&translate=0&sort=0",
    "variableComment": "设置正文语言展现形式及翻译优先级\n！错误的设置可能导致书源工作不正常\n格式：语言展现形式 - 翻译优先级\n\n语言展现形式：\n- 日文\n- 中文\n- 中日\n- 日中\n翻译优先级：\n- 并列（展示所有存在的翻译）\n- 优先级序列，写在前面的优先采用，B-百度、Y-有道、G-GPT、S-Sakura，如 `SGYB`\n\n示例（默认值）：中日 - SGYB\n示例：中文 - 并列",
    "weight": 0
  },
  {
    "bookSourceComment": "登录后才可搜索\n整理修改：GitHub@ZWolken",
    "bookSourceGroup": "🌸轻文",
    "bookSourceName": "有度轻小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.yodu.org/qingxiaoshuo",
    "bookUrlPattern": "",
    "customOrder": 39,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "[\r\n{\"title\":\"电击文库\",\"url\":\"https://www.yoduzw.com/dianjiwenku/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"富士见文库\",\"url\":\"https://www.yoduzw.com/fushijianwenku/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"角川文库\",\"url\":\"https://www.yoduzw.com/jiaochuanwenku/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"MF文库J\",\"url\":\"https://www.yoduzw.com/MFwenkuJ/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"Fami通文库\",\"url\":\"https://www.yoduzw.com/Famitongwenku/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"GA文库\",\"url\":\"https://www.yoduzw.com/GAwenku/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"HJ文库\",\"url\":\"https://www.yoduzw.com/HJwenku/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"一迅社\",\"url\":\"https://www.yoduzw.com/yixunshe/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"集英社\",\"url\":\"https://www.yoduzw.com/jiyingshe/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"小学馆\",\"url\":\"https://www.yoduzw.com/xiaoxueguan/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"讲谈社\",\"url\":\"https://www.yoduzw.com/jiangtanshe/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"少女文库\",\"url\":\"https://www.yoduzw.com/shaonvwenku/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"其他文库\",\"url\":\"https://www.yoduzw.com/qitawenku/{{page}}.html\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}}\r\n]",
    "lastUpdateTime": 1732621379199,
    "loginUrl": "https://www.yodu.org/login.php",
    "respondTime": 5110,
    "ruleBookInfo": {
      "author": "class.mr15 ttl@a@text",
      "coverUrl": "class.g_thumb@img@src",
      "intro": "class.h112 mb15 det-abt lh1d8 c_strong fs16 hm-scroll@html",
      "kind": "class.mr15 ttc hisp@text",
      "lastChapter": "class.ell lst-chapter dib vam@text",
      "name": "class.mb15 lh1d2 oh@text"
    },
    "ruleContent": {
      "content": "#TextContent@html\n<js>\n//字体替换，以下勿动。\nvar ys = [\"\\ue800\",\"\\ue801\",\"\\ue802\",\"\\ue803\",\"\\ue804\",\"\\ue805\",\"\\ue806\",\"\\ue807\",\"\\ue808\",\"\\ue809\",\"\\ue80A\",\"\\ue80B\",\"\\ue80C\",\"\\ue80D\",\"\\ue80E\",\"\\ue80F\",\"\\ue810\",\"\\ue811\",\"\\ue812\",\"\\ue813\",\"\\ue814\",\"\\ue815\",\"\\ue816\",\"\\ue817\",\"\\ue818\",\"\\ue819\",\"\\ue81A\",\"\\ue81B\",\"\\ue81C\",\"\\ue81D\",\"\\ue81E\",\"\\ue81F\",\"\\ue820\",\"\\ue821\",\"\\ue822\",\"\\ue823\",\"\\ue824\",\"\\ue825\",\"\\ue826\",\"\\ue827\",\"\\ue828\",\"\\ue829\",\"\\ue82A\",\"\\ue82B\",\"\\ue82C\",\"\\ue82D\",\"\\ue82E\",\"\\ue82F\",\"\\ue830\",\"\\ue831\",\"\\ue832\",\"\\ue833\",\"\\ue834\",\"\\ue835\",\"\\ue836\",\"\\ue837\",\"\\ue838\",\"\\ue839\",\"\\ue83A\",\"\\ue83B\",\"\\ue83C\",\"\\ue83D\",\"\\ue83E\",\"\\ue83F\",\"\\ue840\",\"\\ue841\",\"\\ue842\",\"\\ue843\",\"\\ue844\",\"\\ue845\",\"\\ue846\",\"\\ue847\",\"\\ue848\",\"\\ue849\",\"\\ue84A\",\"\\ue84B\",\"\\ue84C\",\"\\ue84D\",\"\\ue84E\",\"\\ue84F\",\"\\ue850\",\"\\ue851\",\"\\ue852\",\"\\ue853\",\"\\ue854\",\"\\ue855\",\"\\ue856\",\"\\ue857\",\"\\ue858\",\"\\ue859\",\"\\ue85A\",\"\\ue85B\",\"\\ue85C\",\"\\ue85D\",\"\\ue85E\",\"\\ue85F\",\"\\ue860\",\"\\ue861\",\"\\ue862\",\"\\ue863\"];\nvar th = [\"的\",\"一\",\"是\",\"了\",\"我\",\"不\",\"人\",\"在\",\"他\",\"有\",\"这\",\"个\",\"上\",\"们\",\"来\",\"到\",\"时\",\"大\",\"地\",\"为\",\"子\",\"中\",\"你\",\"说\",\"生\",\"国\",\"年\",\"着\",\"就\",\"那\",\"和\",\"要\",\"她\",\"出\",\"也\",\"得\",\"里\",\"后\",\"自\",\"以\",\"会\",\"家\",\"可\",\"下\",\"而\",\"过\",\"天\",\"去\",\"能\",\"对\",\"小\",\"多\",\"然\",\"于\",\"心\",\"学\",\"么\",\"之\",\"都\",\"好\",\"看\",\"起\",\"发\",\"当\",\"没\",\"成\",\"只\",\"如\",\"事\",\"把\",\"还\",\"用\",\"第\",\"样\",\"道\",\"想\",\"作\",\"种\",\"开\",\"美\",\"乳\",\"阴\",\"液\",\"茎\",\"欲\",\"呻\",\"肉\",\"交\",\"性\",\"胸\",\"私\",\"穴\",\"淫\",\"臀\",\"舔\",\"射\",\"脱\",\"裸\",\"骚\",\"唇\"];\n\nif (ys.length === th.length) {\n    for (var i = 0; i < ys.length; i++) {\n        result = result.replace(new RegExp(ys[i], 'g'), th[i]);\n       }\n  } else {\n  \tjava.toast(\"让你不要乱动了😡\");\n  \tresult = result;\n  \t}\n  \tresult;\n</js>",
      "nextContentUrl": "text.下一章@href"
    },
    "ruleExplore": {},
    "ruleSearch": {
      "author": "class.vam mr10.1@text||class.c_small mb5 mr15 ell ttc fs16.0@text",
      "bookList": "class.ser-ret@li||class.j_bookList@li",
      "bookUrl": "a@href",
      "coverUrl": "img@_src",
      "kind": "class.vam mr10.0@text&&tag.span.2@text&&class.c_small mb5 mr15 ell ttc fs16.1@text",
      "lastChapter": "class.vam@a@text",
      "name": "h3@text||h2@text"
    },
    "ruleToc": {
      "chapterList": "id.chapterList@li@a",
      "chapterName": "text",
      "chapterUrl": "href"
    },
    "searchUrl": "https://www.yodu.org/sa/all-{{key}}-{{page}}.html",
    "weight": 0
  },
  {
    "bookSourceComment": "科学上网使用\n整理修改：GitHub@ZWolken\n原作者：酷安户山香澄Official",
    "bookSourceGroup": "🌸轻文",
    "bookSourceName": "ESJ轻小说",
    "bookSourceType": 0,
    "bookSourceUrl": "http://www.esjzone.cc",
    "bookUrlPattern": "https?://www.esjzone.cc/detail/.*",
    "customOrder": 40,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "[\r\n{'title':'首页推荐','url':'/&&','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'全部轻小说','url':'/list-01/{{page}}.html','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'日轻小说','url':'/list-11/{{page}}.html','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'原创小说','url':'/list-21/{{page}}.html','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'韩轻小说','url':'/list-31/{{page}}.html','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'R15','url':'/tags/R15/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'残酷描写','url':'/tags/殘酷描寫/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'喜剧','url':'/tags/喜劇/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'异世界','url':'/tags/异世界/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'勇者','url':'/tags/勇者/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'龙','url':'/tags/龙/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'技能','url':'/tags/技能/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'冒险','url':'/tags/冒险/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'转生','url':'/tags/转生/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'黑暗','url':'/tags/黑暗/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'萝莉','url':'/tags/萝莉/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'后宫','url':'/tags/后宫/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'魔法','url':'/tags/魔法/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'少女','url':'/tags/少女/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'病娇','url':'/tags/病娇/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'魔王','url':'/tags/魔王/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'战争','url':'/tags/战争/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'死亡','url':'/tags/死亡/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'穿越','url':'/tags/穿越/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'奴隶','url':'/tags/奴隶/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'主角','url':'/tags/主角/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'R18','url':'/tags/R18/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'恋爱','url':'/tags/恋爱/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'恶意千金','url':'/tags/惡役千金/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'主角（女）','url':'/tags/主角(女)/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'青梅竹马','url':'/tags/青梅竹馬/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'NTR','url':'/tags/NTR/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{'title':'战斗','url':'/tags/戰鬥/','style':{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"公告\",\"url\":\"/tags/公告/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"催坑区\",\"url\":\"/tags/推坑區/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}},\r\n{\"title\":\"吧台（聊天）\",\"url\":\"/tags/吧台（聊天）/\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":0.25}}\r\n]",
    "lastUpdateTime": 1732105155089,
    "loginUrl": "https://www.esjzone.cc/login.html",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "@css:ul[class=list-unstyled mb-2 book-detail]> li:nth-child(1) > a@text",
      "coverUrl": "@css:div.col-md-3 > div > a > img@src",
      "init": "",
      "intro": "@css:div.description@text",
      "kind": "@css:section.widget.widget-tags.hidden-lg-up.mt-30 > a@text",
      "lastChapter": "@css:div[id = chapterList] >a:last-child@text",
      "name": "@css:div.col-md-9.book-detail > h2@text",
      "tocUrl": ""
    },
    "ruleContent": {
      "content": "@css:div.forum-content.mt-3,div[class =d_post_content j_d_post_content]@all"
    },
    "ruleExplore": {
      "bookList": ""
    },
    "ruleSearch": {
      "author": "",
      "bookList": "@css: div.col-xl-9.col-lg-8.p-r-30 > div.row > div ",
      "bookUrl": "@css:div> div > div > h5 > a@href",
      "coverUrl": "@css:div > div > a > div > div > img@data-src",
      "kind": "{{@css:.column:has(.icon-star-s)@text}},关注：{{@css:.column:has(.icon-eye)@text}},喜欢：{{@css:.column:has(.icon-heart)@text}},羽毛：{{@css:.column:has(.icon-feather)@text}},评论：{{@css:.column:has(.icon-message-square)@text}}##(\\([^()]+)##星$1人",
      "lastChapter": "@css:div>div>div[class=card-ep mt-2]@text",
      "name": "@css:div@title"
    },
    "ruleToc": {
      "chapterList": "<js>r=org.jsoup.Jsoup.parse(result).select(\"#chapterList>*\");r.select(\"p:has(br)\").remove();\nm=r.select(\"p.non\").eachText();\nl=String(r).split(/<p class=\"non\">[\\S\\s]+?<\\/p>/);\nfor(i=1,j=0;i<l.length;i+=2,j++)l[i]=l[i].replace(/>(\\d+(?:-[^<>]+| *))(?=<)/g,\">\"+m[j]+\" $1\");l.join(\"\")</js>a",
      "chapterName": "text##{{book.name}}[:：\\d\\s]+|\\d+-",
      "chapterUrl": "a@href"
    },
    "searchUrl": "https://www.esjzone.cc/tags/{{key}}/",
    "weight": 0
  },
  {
    "bookSourceComment": "建议登录\n酷安 @吉王义昊\nGitHub：https://github.com/jiwangyihao/source-j-legado\n# 关于许可的额外声明（在线版本参见 GitHub，以在线版本为准）\n- 当许可证与本声明冲突时，以本声明为准；\n- 对于本仓库中的任意代码片段：按照 `MPL 2.0` 中有关约定执行；\n- 对于本仓库中的某一完整书源的转载或二次开发，需满足以下全部条件：\n  - 在[本仓库](https://github.com/jiwangyihao/source-j-legado)的 `issue` 中提出请求并具体说明转载地址、二次开发后的书源开源地址以及其他必要信息；\n  - 等待原作者（即本仓库的初始所有者和初始代码贡献者 [@jiwangyihao](https://github.com/jiwangyihao)）查看并通过 `issue` 或依据原作者要求更改转载方式或补充更详细的信息。\n  - 考虑到本项目弃坑的可能，新 `issue` 开启后超过 20 个工作日原作者没有回复或者原作者回复要求更改的 `issue` 在更改后超过 20 个工作日原作者没有回复即视为原作者通过该 `issue`：\n    - 此处的 `issue` 仅包括在[本仓库](https://github.com/jiwangyihao/source-j-legado)开启的，处于「开启状态」的 issue。（也就是说，请不要在已经关闭的 issue 中回复）。\n    - 对于此种方式通过的 issue，转载/二次开发者仍应当遵守本声明中已经写明的相关约定。\n  - 不得上传至源仓库或整理至`非轻小说专用`的书源合集中并应当避免其他人将转载/二次开发版本上传至源仓库或整理至`非轻小说专用`的书源合集中：\n    - 关于轻小说的定义的额外说明：不包括国内的原创网络文学作品（如 `SF 轻小说` 中的原创轻小说以及`起点中文网`中标签包含轻小说的作品）。\n    - 轻小说专用的定义：有且仅有想看轻小说的人可能会添加。\n  - 必须在转载/二次开发地址的明显位置完整包含本声明的全部内容。\n  - 必须保留源注释中原有的更改记录。",
    "bookSourceGroup": "🌸轻文",
    "bookSourceName": "三七轻小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.37yq.com",
    "bookUrlPattern": "",
    "concurrentRate": "",
    "coverDecodeJs": "",
    "customOrder": 41,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nres = []\n\n//筛选链接生成\nfunction generateFilterUrl(new_values) {\n  values = {\n    order: 'lastupdate',\n    anime: '0',\n    sortid: '0',\n    typeid: '0',\n    words: '0',\n    rgroupid: '0',\n    update: '0',\n    isfull: '0',\n    page: '{{page}}',\n  }\n  for (key in new_values) {\n  \t  values[key]=new_values[key]\n  \t}\n  return source.bookSourceUrl + '/wenku/' + values.order + '_' + values.anime + '_' + values.sortid + '_' + values.typeid + '_' + values.words + '_' + values.rgroupid + '_' + values.update + '_' + values.isfull + '_' + values.page + '.html';\n}\n\n//书架\nuser = ajax(source.bookSourceUrl + \"/user.php\")\n//java.toast(user)\ntry {\nif (user.match(/<h2 class=\"aui-center-title\">(登录|错误).*三七轻小说<\\/h2>/gi)) {\n  //未登录\n  res.push(\n    {\n      title: `>> 我的书架 | 未登录 <<`,\n      url: '',\n      style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n    })\n} else {\n  //已登录\n  res.push(\n    {\n      title: `>> 我的书架 | ${user.match(/<span class=\"user-name\">.+<\\/span>/gi)[0].replace(/<\\/?span.*?>/gi,'')} <<`,\n      url: '',\n      style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n    })\n  bookcase = ajax(source.bookSourceUrl + \"/bookcase.php\")\n  bookcase.match(/<select[\\s\\S]+?<\\/select>/gi)[0].match(/<option.+<\\/option>/gi).forEach(option => {\n    res.push(\n      {\n        title: option.match(/>.+(?=<)/gi)[0].replace('>', ''),\n        url: source.bookSourceUrl + \"/bookcase.php?classid=\" + option.match(/value=\\\".+?(?=\\\")/gi)[0].replace(/(value=\\\")/gi, ''),\n        style: { layout_flexGrow: 1 }\n      })\n  })\n}\n} catch (e) {\n  throw(\"书架加载失败：\\n\"+e+\"\\n登录页源码：\\n\"+user)\n}\n\ncontent = ajax(source.bookSourceUrl + \"/wenku/\")\ncontent.match(/排序[\\s\\S]+?<\\/div>/gi)[0].match(/<a.+<\\/a>/gi).forEach(a => {\n  let filter = {}\n  let sortTitle = a.match(/>.+(?=<)/gi)[0].replace('>', '')\n  let type = \"order\"\n  let value = a.match(/\\/[^_/]+(?=_)/gi)[0].replace('/', '')\n  filter[type]=value;\n  content.match(/作品分类[\\s\\S]+?<\\/div>/gi)[0].match(/<a.+<\\/a>/gi).forEach((v, i) => {\n    let v_type = \"anime\"\n    let v_value = v.match(/\\/[^_/]+_\\d+(?=_)/gi)[0].replace(/\\/[^_/]+_/gi, '')\n    filter[v_type]=v_value;\n    if (i == 0) {\n      res.push(\n        {\n          title: `>> 作品分类 | ${sortTitle} <<`,\n          url: generateFilterUrl(filter),\n          style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n        })\n    } else {\n      res.push(\n        {\n          title: v.match(/>.+(?=<)/gi)[0].replace('>', ''),\n          url: generateFilterUrl(filter),\n          style: { layout_flexGrow: 1 }\n        })\n    }\n  })\n})\n\ncontent.match(/排序[\\s\\S]+?重置/gi)[0].match(/<li[\\s\\S]+?<\\/li>/gi).forEach(li => {\n  let sortTitle = li.match(/>.+(?=<\\/h3>)/gi)[0].replace('>', '')\n  res.push(\n    {\n      title: `>> ${sortTitle} <<`,\n      url: '',\n      style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n    })\n  li.match(/<a.+<\\/a>/gi).forEach((v, i) => {\n    if (i != 0) {\n      res.push(\n        {\n          title: v.match(/>.+(?=<)/gi)[0].replace('>', ''),\n          url: v.match(/href=\"[^\"]+(?=\")/gi)[0].replace('href=\"',\"\").replace(\"1.html\",\"{{page}}.html\"),\n          style: { layout_flexGrow: 1 }\n        })\n    }\n  })\n})\ntagContent = ajax(source.bookSourceUrl + \"/taglist/1.html\")\nres.push(\n  {\n    title: '>> 标签分类 <<',\n    url: '',\n    style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n  })\ntry {\ntagContent.match(/标签分类<\\/h3>[\\s\\S]+?重置/gi)[0].match(/<a.+<\\/a>/gi).forEach((v, i) => {\n  res.push(\n    {\n      title: v.match(/>.+(?=<)/gi)[0].replace('>', ''),\n      url: v.match(/href=\"[^\"]+(?=\")/gi)[0].replace('href=\"',\"\").replace(\"1.html\",\"{{page}}.html\"),\n      style: { layout_flexGrow: 1 }\n    })\n})\n} catch (e) {\n  throw(\"标签页解析错误：\"+e+\"\\n标签页源码：\\n\"+tagContent)\n}\nJSON.stringify(res)\n//throw(JSON.stringify(res))",
    "header": "{\n\"Referer\": \"https://m.37yq.com\",\n\"User-Agent\":\"\",\n}",
    "jsLib": "function errorReg() {\n  return /(java.net.+Exception)|(okhttp.+Exception)|(error code: 1015)|(503 Service Temporarily Unavailable)|(Parse error.+in.+wwwroot.+php)|(_cf_chl_opt|challenges.css)|(<center.+>.+不支持)|(章节内容不支持该浏览器显示)/gi\n}\nfunction ajax(url) {\n  const { java, cookie } = this;\n  let content = \"\";\n  let time=1;\n  \tcontent = java.ajax(url);\n  \twhile (String(content).match(errorReg())) {\n    if (time>10) {\n  \t    java.toast(\"重试10次后仍请求失败：\"+url)\n  \t    throw(\"重试10次后仍请求失败：\"+url+content)\n  \t    break;\n    \t}\n    \tif(!!String(content).match(/不支持/gi)) {\n      //java.log(cookie.getCookie(url));\n      cookie.replaceCookie(url,java.webView(null,url,\"document.cookie\"));\n    \t}\n    \tif (!!String(content).match(/_cf_chl_opt|challenges.css/gi)) {\n    \t\t i = 1;\n      \twhile (!!String(content).match(/_cf_chl_opt|challenges.css/gi)) {\n\t       java.log('盾');\n\t       java.log(content);\n        if (i <= 1) {\n          java.toast(\"哦呼，五秒盾，正在尝试静默破盾ing……\");\n          content = java.webView(null,url,null);\n        } else {\n          java.toast(\"啊哦，静默破盾好像不管用，试试手动过校验吧！\");\n          content = java.startBrowserAwait(url,\"加载完毕后点完成，此页面可能会弹出多次\").body();\n        }\n        i++;\n      }\n      continue;\n    }\n  \t\t java.log(\"请求失败：\"+url)\n  \t\t java.log(\"重试\"+time+\"次\")\n  \t\t let t=new Date().getTime()\n    while (new Date().getTime() - t < 500) { }\n    if (String(content).match(/1015|503|php/gi)) {\n    \t  while (new Date().getTime() - t < 5000) { }\n    \t}\n  \t\t content = java.ajax(url);\n  \t\t time++;\n  \t}\n  \treturn String(content);\n}",
    "lastUpdateTime": 1731770349269,
    "loginUi": "[\n  {\n    \"name\": \"账号\",\n    \"type\": \"text\"\n  },\n  {\n    \"name\": \"密码\",\n    \"type\": \"password\"\n  }\n]",
    "loginUrl": "@js:\nfunction login() {\n  let une = source.getLoginInfoMap().get(\"账号\")\n  let pwd = source.getLoginInfoMap().get(\"密码\")\n  if (une && pwd) {\n    let body = String('username=' + une + '&password=' + pwd + '&usecookie=86400&act=login')\n    let url = source.bookSourceUrl + '/login.php?do=submit'\n    let res = java.post(url, body, {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    })\n    let ck = res.cookies()\n    if (res.body().match(/错误/gi)) {\n      throw(res.body().match(/<div class=\"aui-ver-form\">[\\s\\S]+<br>/gi)[0].replace(/<.+>\\s*/gi,\"\"))\n    }\n    let header = JSON.stringify({\n      \"Cookie\": String(ck).match(/\\{(.*?)\\}/)[1].replace(/,/g, ';')\n    })\n    source.putLoginHeader(header)\n  }\n}",
    "respondTime": 6723,
    "ruleBookInfo": {
      "author": "[property=\"og:novel:author\"]@content",
      "canReName": "1",
      "coverUrl": "[property=\"og:image\"]@content",
      "intro": "标签：{{@@class.tag-small red@text##\\s## - }}\n{{@@id.bookSummary@tag.content@textNodes}}",
      "kind": "class.book-cell@tag.p.1@ownText&&class.tag-small red@text\n##.*万字|·.*",
      "lastChapter": "class.gray ell@text##(\\d+-\\d+-\\d+\\s\\d+:\\d+)·(.*)##$2 • $1",
      "name": "[property=\"og:novel:book_name\"]@content",
      "tocUrl": "class.btn-normal red@href",
      "wordCount": "class.book-cell@tag.p.1@ownText##连载|完结"
    },
    "ruleContent": {
      "content": "id.acontent@html",
      "imageDecode": "",
      "imageStyle": "FULL",
      "nextContentUrl": "##url_next:'([^']*)'##$1###\n@js:\n//121_2.html这样的是下一页，纯数字则是下一章\n//带有catalog是详情页\njava.log(\"url: \"+result)\nif (result==\"\") java.log(src)\nvar isNew=/(\\/(\\d+).html)|catalog/.test(result);\nvar out=isNew?'':result;\nout",
      "payAction": "",
      "replaceRegex": "##((?<=[\\u4e00-\\u9fa5“‘「（，])\\s+)?<!--\\s*\\（继续下一页\\）\\s*-->\\s*|((?<=[\\u4e00-\\u9fa5“‘「（，])\\s+)?\\（本章未完\\）\\s*|.+tmygod.+\\n",
      "title": "id.atitle@text"
    },
    "ruleExplore": {
      "author": "class.book-author@ownText",
      "bookList": "@js:\ni = 1;\n\nif (String(src).match(errorReg())) {\n  src=ajax(baseUrl);\n}\njava.setContent(src)\nresult = java.getElement(\"class.book-ol@tag.li\");\nresult;",
      "bookUrl": "a@href\n@js:\nresult.replace(/&cid=\\d+/gi, \"\")",
      "coverUrl": "img@data-src",
      "intro": "class.book-desc@text&&class.ell@text",
      "kind": "class.tag-small-group origin-right@tag.em.0@text&&\nclass.tag-small-group origin-right@tag.em.1@text&&\ntag.time@text\n@js:\nres=[]\nresult.forEach(item=>{\n    item.split(new RegExp(\"[ \\/]\",\"gi\")).forEach(i=>res.push(i))\n})\nres",
      "name": "class.book-li@tag.img@alt",
      "wordCount": "class.tag-small blue@text"
    },
    "ruleSearch": {
      "author": "class.book-author@textNodes",
      "bookList": "@js:\nif (String(result).match(errorReg())&&!result.includes(\"somework\")) {\n  result=ajax(baseUrl);\n}\nif (result.includes(\"no-js\")) {\n  java.log(result)\n  jsContent = java.cacheFile(java.getString(\"tag.script@src\").match(/http.+somework.+\\?v.+/gi)[0])\n  window = {\n    a: result.match(/window.a=\\'.+\\'/gi)[0].replace(/window.a=|\\'/gi, ''),\n    b: result.match(/window.b=\\'.+\\'/gi)[0].replace(/window.b=|\\'/gi, ''),\n    c: result.match(/window.c=\\'.+\\'/gi)[0].replace(/window.c=|\\'/gi, ''),\n    crypto: {\n      subtle: {\n        importKey(format, keyData, algorithm, extractable, keyUsages) {\n          return {\n            then(func) { func(keyData) }\n          }\n        },\n        decrypt(algorithm, key, data) {\n          cipher = java.createSymmetricCrypto(\"AES/CTR/NoPadding\", key, algorithm.counter)\n          return {\n            then: (func) => { func(cipher.decryptStr(data)) }\n          }\n        }\n      }\n    }\n  }\n  setTimeout = () => { }\n  function TextDecoder() { }\n  TextDecoder.prototype.decode = bytes => bytes\n  document = { cookie: \"\" }\n  java.log(jsContent)\n  funcName=String(jsContent).match(/^function.+\\(/gi)[0].replace(/function| |\\(/gi,'')\n  \tjava.log(funcName)\n  eval(funcName + ' = str => java.base64DecodeToByteArray(str)')\n  eval(String(jsContent)\n    .replace(/^function.+\\(/gi, 'function ('))\n  java.log(document.cookie)\n  cookie.replaceCookie(baseUrl, document.cookie)\n  do {\n    t = new Date().getTime()\n    while (new Date().getTime() - t < 5000) { }\n    java.setContent(result = ajax(baseUrl + \",\"\n      + JSON.stringify({\n        headers: {\n          Cookie: cookie.getCookie(baseUrl)\n        }\n      })))\n    java.log(result)\n  } while (result.includes(\"no-js\"))\n}\njava.getElement(\"class.book-ol book-ol-normal@tag.li\")",
      "bookUrl": "tag.a.0@href",
      "checkKeyWord": "我的青春恋爱喜剧",
      "coverUrl": "a@href@js:\nvar id = result.match(/\\/(\\d+)\\.html/)[1];\n'https://m.37yq.com/files/article/image/'+parseInt(id/1000)+'/'+id+'/'+id+'s.jpg';",
      "intro": "class.book-desc@text",
      "kind": "class.tag-small-group origin-right@tag.em@text\n@js:\nres=[]\nresult.forEach(item=>{\n    item.split(new RegExp(\"[ \\/]\",\"gi\")).forEach(i=>res.push(i))\n})\nres",
      "name": "class.book-title-x@class.book-title@text"
    },
    "ruleToc": {
      "chapterList": "id.catelogX@class.chapter-li\n@js:\n    //现实debug(尝试修复正文链接问题，和目录不全)\n    //《好友角色的我怎么可能大受欢迎》第三卷12\n    //《我的青春恋爱喜剧》\n    //2022-8-19\n    //原来的代码在源注释（已移除）\n    //2022-8-20修复https://w.linovelib.com/novel/2765.html目录加载失败\n    //2023-9-30使用易于理解的变量命名\n    //2023-10-7处理cid(1)以及连续多个cid(0)\n    //2023-11-11解决了一个原来手滑写出的bug\n    //2023-11-16处理连续多个卷名\n    //2023-12-12适配新版卷名\n    //2024-2-6处理《谁说从妥协开始的恋爱一定没结果》\n\nres = result\n//java.log(res)\n\nfor (i = 0; i < res.length; i++) {\n    java.setContent(res[i])\n    if (java.getString(\"tag.a@href\").match(/javascript:cid\\(.+\\)/gi)) {\n        if (String(res[(i == res.length - 1?i:i+1)]).match(/javascript:cid\\(.+\\)/gi)) {\n            java.setContent(res[i - 1])\n            prevLink = java.getString(\"tag.a@href\")\n            if (prevLink == \"\") {\n                java.setContent(res[i - 2])\n                prevLink = java.getString(\"tag.a@href\")\n            }\n            content = ajax(source.bookSourceUrl + prevLink)\n            java.setContent(content)\n            foot = java.getElements(\"id.footlink\")\n            path = prevLink\n\n            //java.log(foot)\n            while (String(foot).match(/下一页|下一頁/gi)) {\n            \t    //java.log(foot)\n                str = content.match(/<script type\\=\\\"text\\/javascript\\\">var ReadParams.*/)\n                path = String(str).match(/url_next\\:'.*?html/)[0].replace(\"url_next:'\", \"\")\n                content = java.ajax(\"https://w.linovelib.com\" + path)\n                java.setContent(content)\n                foot = java.getElements(\"id.footlink\")\n            }\n\n            next = ajax(source.bookSourceUrl + path)\n            str = next.match(/<script type\\=\\\"text\\/javascript\\\">var ReadParams.*/)\n            path = String(str).match(/url_next\\:'.*?html/)[0].replace(\"url_next:'\", \"\")\n            java.log('l:'+path)\n            res[i] = String(res[i]).replace(/javascript:cid\\(.+\\)/gi, path)\n        } else {\n            nextLink = \"\"\n            for (var j=1;nextLink==\"\";j++) {\n                java.setContent(res[i + j])\n                nextLink = java.getString(\"tag.a@href\")\n            }\n            next = ajax(source.bookSourceUrl + nextLink)\n            str = next.match(/<script type\\=\\\"text\\/javascript\\\">var ReadParams.*/)\n            try {\n              path = String(str).match(/url_previous\\:'.*?html/)[0].replace(\"url_previous:'\", \"\")\n            } catch(e) {\n            \t  java.toast(String(next)+\"\\n\")\n            \t  java.log(next)\n            \t  throw(\"目录解析报错开始：\\n\"+String(next)+\"\\n结束\")\n            \t}\n            //java.log(path)\n\n            res[i] = String(res[i]).replace(/javascript:cid\\(.+\\)/gi, path)\n        }\n    }\n\n    //java.log(res[i])\n}\nres",
      "chapterName": "text",
      "chapterUrl": "@js:\n//只有不为卷名时返回URL，避免阅读自动合并\njava.getString(\"class.chapter-bar@text\")!=java.getString(\"text\") ? java.getString(\"tag.a@href\") : \"\"",
      "isVolume": "@js:\njava.getString(\"class.chapter-bar@text\")==java.getString(\"text\")",
      "updateTime": ""
    },
    "searchUrl": "<js>\npage == 1 ?\n  \"/so.html?searchkey={{key}}&searchtype=all\"\n  :\n  '/so/{{key}}/{{page}}.html'\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "建议登录\n酷安 @吉王义昊\nGitHub：https://github.com/jiwangyihao/source-j-legado\n# 关于许可的额外声明（在线版本参见 GitHub，以在线版本为准）\n- 当许可证与本声明冲突时，以本声明为准；\n- 对于本仓库中的任意代码片段：按照 `MPL 2.0` 中有关约定执行；\n- 对于本仓库中的某一完整书源的转载或二次开发，需满足以下全部条件：\n  - 在[本仓库](https://github.com/jiwangyihao/source-j-legado)的 `issue` 中提出请求并具体说明转载地址、二次开发后的书源开源地址以及其他必要信息；\n  - 等待原作者（即本仓库的初始所有者和初始代码贡献者 [@jiwangyihao](https://github.com/jiwangyihao)）查看并通过 `issue` 或依据原作者要求更改转载方式或补充更详细的信息。\n  - 考虑到本项目弃坑的可能，新 `issue` 开启后超过 20 个工作日原作者没有回复或者原作者回复要求更改的 `issue` 在更改后超过 20 个工作日原作者没有回复即视为原作者通过该 `issue`：\n    - 此处的 `issue` 仅包括在[本仓库](https://github.com/jiwangyihao/source-j-legado)开启的，处于「开启状态」的 issue。（也就是说，请不要在已经关闭的 issue 中回复）。\n    - 对于此种方式通过的 issue，转载/二次开发者仍应当遵守本声明中已经写明的相关约定。\n  - 不得上传至源仓库或整理至`非轻小说专用`的书源合集中并应当避免其他人将转载/二次开发版本上传至源仓库或整理至`非轻小说专用`的书源合集中：\n    - 关于轻小说的定义的额外说明：不包括国内的原创网络文学作品（如 `SF 轻小说` 中的原创轻小说以及`起点中文网`中标签包含轻小说的作品）。\n    - 轻小说专用的定义：有且仅有想看轻小说的人可能会添加。\n  - 必须在转载/二次开发地址的明显位置完整包含本声明的全部内容。\n  - 必须保留源注释中原有的更改记录。",
    "bookSourceGroup": "🌸轻文",
    "bookSourceName": "哔哩类似物",
    "bookSourceType": 0,
    "bookSourceUrl": "https://m.wenkuchina.com",
    "bookUrlPattern": "",
    "concurrentRate": "",
    "coverDecodeJs": "",
    "customOrder": 42,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nres = []\n\n//筛选链接生成\nfunction generateFilterUrl(new_values) {\n  values = {\n    order: 'lastupdate',\n    anime: '0',\n    sortid: '0',\n    typeid: '0',\n    words: '0',\n    rgroupid: '0',\n    update: '0',\n    isfull: '0',\n    page: '{{page}}',\n  }\n  for (key in new_values) {\n  \t  values[key]=new_values[key]\n  \t}\n  return source.bookSourceUrl + '/wenku/' + values.order + '_' + values.anime + '_' + values.sortid + '_' + values.typeid + '_' + values.words + '_' + values.rgroupid + '_' + values.update + '_' + values.isfull + '_' + values.page + '.html';\n}\n\n//书架\nuser = ajax(source.bookSourceUrl + \"/user.php\")\n//java.toast(user)\ntry {\nif (user.match(/<h2 class=\"aui-center-title\">(登录|错误).*轻之文库轻小说.+<\\/h2>/gi)) {\n  //未登录\n  res.push(\n    {\n      title: `>> 我的书架 | 未登录 <<`,\n      url: '',\n      style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n    })\n} else {\n  //已登录\n  res.push(\n    {\n      title: `>> 我的书架 | ${user.match(/<span class=\"user-name\">.+<\\/span>/gi)[0].replace(/<\\/?span.*?>/gi,'')} <<`,\n      url: '',\n      style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n    })\n  bookcase = ajax(source.bookSourceUrl + \"/bookcase.php\")\n  bookcase.match(/<select[\\s\\S]+?<\\/select>/gi)[0].match(/<option.+<\\/option>/gi).forEach(option => {\n    res.push(\n      {\n        title: option.match(/>.*(?=<)/gi)[0].replace('>', ''),\n        url: source.bookSourceUrl + \"/bookcase.php?classid=\" + option.match(/value=\\\".+?(?=\\\")/gi)[0].replace(/(value=\\\")/gi, ''),\n        style: { layout_flexGrow: 1 }\n      })\n  })\n}\n} catch (e) {\n  throw(\"书架加载失败：\\n\"+e+\"\\n登录页源码：\\n\"+user)\n}\n\ncontent = ajax(source.bookSourceUrl + \"/wenku/\")\ncontent.match(/排序[\\s\\S]+?<\\/div>/gi)[0].match(/<a.+<\\/a>/gi).forEach(a => {\n  let filter = {}\n  let sortTitle = a.match(/>.+(?=<)/gi)[0].replace('>', '')\n  let type = \"order\"\n  let value = a.match(/\\/[^_/]+(?=_)/gi)[0].replace('/', '')\n  filter[type]=value;\n  content.match(/作品分类[\\s\\S]+?<\\/div>/gi)[0].match(/<a.+<\\/a>/gi).forEach((v, i) => {\n    let v_type = \"anime\"\n    let v_value = v.match(/\\/[^_/]+_\\d+(?=_)/gi)[0].replace(/\\/[^_/]+_/gi, '')\n    filter[v_type]=v_value;\n    if (i == 0) {\n      res.push(\n        {\n          title: `>> 作品分类 | ${sortTitle} <<`,\n          url: generateFilterUrl(filter),\n          style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n        })\n    } else {\n      res.push(\n        {\n          title: v.match(/>.+(?=<)/gi)[0].replace('>', ''),\n          url: generateFilterUrl(filter),\n          style: { layout_flexGrow: 1 }\n        })\n    }\n  })\n})\n\ncontent.match(/排序[\\s\\S]+?重置/gi)[0].match(/<li[\\s\\S]+?<\\/li>/gi).forEach(li => {\n  let sortTitle = li.match(/>.+(?=<\\/h3>)/gi)[0].replace('>', '')\n  res.push(\n    {\n      title: `>> ${sortTitle} <<`,\n      url: '',\n      style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n    })\n  li.match(/<a.+<\\/a>/gi).forEach((v, i) => {\n    if (i != 0) {\n      res.push(\n        {\n          title: v.match(/>.+(?=<)/gi)[0].replace('>', ''),\n          url: v.match(/href=\"[^\"]+(?=\")/gi)[0].replace('href=\"',\"\").replace(\"1.html\",\"{{page}}.html\"),\n          style: { layout_flexGrow: 1 }\n        })\n    }\n  })\n})\ntagContent = ajax(source.bookSourceUrl + \"/taglist/1.html\")\nres.push(\n  {\n    title: '>> 标签分类 <<',\n    url: '',\n    style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n  })\ntry {\ntagContent.match(/标签分类<\\/h3>[\\s\\S]+?重置/gi)[0].match(/<a.+<\\/a>/gi).forEach((v, i) => {\n  res.push(\n    {\n      title: v.match(/>.+(?=<)/gi)[0].replace('>', '').replace(\"&nbsp\",\"\"),\n      url: v.match(/href=\"[^\"]+(?=\")/gi)[0].replace('href=\"',\"\").replace(\"1.html\",\"{{page}}.html\"),\n      style: { layout_flexGrow: 1 }\n    })\n})\n} catch (e) {\n  throw(\"标签页解析错误：\"+e+\"\\n标签页源码：\\n\"+tagContent)\n}\nJSON.stringify(res)\n//throw(JSON.stringify(res))",
    "header": "{\n\"Referer\": \"https://m.wenkuchina.com/\",\n\"User-Agent\":\"\",\n\"Accept-Language\":\"zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\",\n\"Accept\":\"*/*\"\n}",
    "jsLib": "function errorReg() {\n  return /(java.net.+Exception)|(okhttp.+Exception)|(error code: 1015)|(503 Service Temporarily Unavailable)|(Parse error.+in.+wwwroot.+php)|(_cf_chl_opt|challenges.css)|(<center.+>.+不支持)|(章节内容不支持该浏览器显示)/gi\n}\nfunction ajax(url) {\n  const { java, cookie } = this;\n  let content = \"\";\n  let time=1;\n  \tcontent = java.ajax(url);\n  \twhile (String(content).match(errorReg())) {\n    if (time>10) {\n  \t    java.toast(\"重试10次后仍请求失败：\"+url)\n  \t    throw(\"重试10次后仍请求失败：\"+url+content)\n  \t    break;\n    \t}\n    \tif(!!String(content).match(/不支持/gi)) {\n      //java.log(cookie.getCookie(url));\n      cookie.replaceCookie(url,java.webView(null,url,\"document.cookie\"));\n    \t}\n    \tif (!!String(content).match(/_cf_chl_opt|challenges.css/gi)) {\n    \t\t i = 1;\n      \twhile (!!String(content).match(/_cf_chl_opt|challenges.css/gi)) {\n\t       java.log('盾');\n\t       java.log(content);\n        if (i <= 1) {\n          java.toast(\"哦呼，五秒盾，正在尝试静默破盾ing……\");\n          content = java.webView(null,url,null);\n        } else {\n          java.toast(\"啊哦，静默破盾好像不管用，试试手动过校验吧！\");\n          content = java.startBrowserAwait(url,\"加载完毕后点完成，此页面可能会弹出多次\").body();\n        }\n        i++;\n      }\n      continue;\n    }\n  \t\t java.log(\"请求失败：\"+url)\n  \t\t java.log(\"重试\"+time+\"次\")\n  \t\t let t=new Date().getTime()\n    while (new Date().getTime() - t < 500) { }\n    if (String(content).match(/1015|503|php/gi)) {\n    \t  while (new Date().getTime() - t < 5000) { }\n    \t}\n  \t\t content = java.ajax(url);\n  \t\t time++;\n  \t}\n  \treturn String(content);\n}",
    "lastUpdateTime": 1732544835199,
    "loginUi": "[\n  {\n    \"name\": \"账号\",\n    \"type\": \"text\"\n  },\n  {\n    \"name\": \"密码\",\n    \"type\": \"password\"\n  }\n]",
    "loginUrl": "@js:\nfunction login() {\n  let une = source.getLoginInfoMap().get(\"账号\")\n  let pwd = source.getLoginInfoMap().get(\"密码\")\n  if (une && pwd) {\n    let body = String('username=' + une + '&password=' + pwd + '&usecookie=86400&act=login')\n    let url = source.bookSourceUrl + '/login.php?do=submit'\n    let res = java.post(url, body, {\n      \"Content-Type\": \"application/x-www-form-urlencoded\"\n    })\n    let ck = res.cookies()\n    if (res.body().match(/错误/gi)) {\n      throw(res.body().match(/<div class=\"aui-ver-form\">[\\s\\S]+<br>/gi)[0].replace(/<.+>\\s*/gi,\"\"))\n    }\n    let header = JSON.stringify({\n      \"Cookie\": String(ck).match(/\\{(.*?)\\}/)[1].replace(/,/g, ';')\n    })\n    source.putLoginHeader(header)\n  }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property=\"og:novel:author\"]@content",
      "canReName": "1",
      "coverUrl": "[property=\"og:image\"]@content",
      "intro": "标签：{{@@class.tag-small red@text##\\s## - }}\n{{@@id.bookSummary@tag.content@textNodes}}",
      "kind": "class.book-cell@tag.p.1@ownText&&class.tag-small red@text\n##.*万字|·.*",
      "lastChapter": "class.gray ell@text##(\\d+-\\d+-\\d+\\s\\d+:\\d+)·(.*)##$2 • $1",
      "name": "[property=\"og:novel:book_name\"]@content",
      "tocUrl": "class.btn-normal red@href",
      "wordCount": "class.book-cell@tag.p.1@ownText##连载|完结"
    },
    "ruleContent": {
      "content": "id.acontent@html",
      "imageDecode": "",
      "imageStyle": "FULL",
      "nextContentUrl": "id.footlink@tag.a.-1@href\n@js:\n//121_2.html这样的是下一页，纯数字则是下一章\n//带有catalog是详情页\njava.log(\"url: \"+result)\nif (result==\"\") java.log(src)\nvar isNew=/(\\/(\\d+).html)|catalog/.test(result);\nvar out=isNew?'':result;\nout",
      "payAction": "",
      "replaceRegex": "##((?<=[\\u4e00-\\u9fa5“‘「（，])\\s+)?<!--\\s*\\（继续下一页\\）\\s*-->\\s*|((?<=[\\u4e00-\\u9fa5“‘「（，])\\s+)?\\（本章未完\\）\\s*|.+tmygod.+\\n|轻之国度.*|图源：.*|录入：.*|台版 转自 .*",
      "title": "id.atitle@text"
    },
    "ruleExplore": {
      "author": "class.book-author@ownText",
      "bookList": "@js:\ni = 1;\n\nif (String(src).match(errorReg())) {\n  src=ajax(baseUrl);\n}\njava.setContent(src)\nresult = java.getElement(\"class.book-ol@tag.li\");\nresult;",
      "bookUrl": "a@href\n@js:\nresult.replace(/&cid=\\d+/gi, \"\")",
      "coverUrl": "img@data-src",
      "intro": "class.book-desc@text&&class.ell@text",
      "kind": "class.tag-small-group origin-right@tag.em.0@text&&\nclass.tag-small-group origin-right@tag.em.1@text&&\ntag.time@text\n@js:\nres=[]\nresult.forEach(item=>{\n    item.split(new RegExp(\"[ \\/]\",\"gi\")).forEach(i=>res.push(i))\n})\nres",
      "name": "class.book-li@tag.img@alt",
      "wordCount": "class.tag-small blue@text"
    },
    "ruleSearch": {
      "author": "class.book-author@textNodes",
      "bookList": "@js:\nif (String(result).match(errorReg())&&!result.includes(\"somework\")) {\n  result=ajax(baseUrl);\n}\nif (result.includes(\"no-js\")) {\n  java.log(result)\n  jsContent = java.cacheFile(java.getString(\"tag.script@src\").match(/http.+somework.+\\?v.+/gi)[0])\n  window = {\n    a: result.match(/window.a=\\'.+\\'/gi)[0].replace(/window.a=|\\'/gi, ''),\n    b: result.match(/window.b=\\'.+\\'/gi)[0].replace(/window.b=|\\'/gi, ''),\n    c: result.match(/window.c=\\'.+\\'/gi)[0].replace(/window.c=|\\'/gi, ''),\n    crypto: {\n      subtle: {\n        importKey(format, keyData, algorithm, extractable, keyUsages) {\n          return {\n            then(func) { func(keyData) }\n          }\n        },\n        decrypt(algorithm, key, data) {\n          cipher = java.createSymmetricCrypto(\"AES/CTR/NoPadding\", key, algorithm.counter)\n          return {\n            then: (func) => { func(cipher.decryptStr(data)) }\n          }\n        }\n      }\n    }\n  }\n  setTimeout = () => { }\n  function TextDecoder() { }\n  TextDecoder.prototype.decode = bytes => bytes\n  document = { cookie: \"\" }\n  java.log(jsContent)\n  funcName=String(jsContent).match(/^function.+\\(/gi)[0].replace(/function| |\\(/gi,'')\n  \tjava.log(funcName)\n  eval(funcName + ' = str => java.base64DecodeToByteArray(str)')\n  eval(String(jsContent)\n    .replace(/^function.+\\(/gi, 'function ('))\n  java.log(document.cookie)\n  cookie.replaceCookie(baseUrl, document.cookie)\n  do {\n    t = new Date().getTime()\n    while (new Date().getTime() - t < 5000) { }\n    java.setContent(result = ajax(baseUrl + \",\"\n      + JSON.stringify({\n        headers: {\n          Cookie: cookie.getCookie(baseUrl)\n        }\n      })))\n    java.log(result)\n  } while (result.includes(\"no-js\"))\n}\njava.getElement(\"class.book-ol book-ol-normal@tag.li\")",
      "bookUrl": "tag.a.0@href",
      "checkKeyWord": "我的青春恋爱喜剧",
      "coverUrl": "img@data-src",
      "intro": "class.book-desc@text",
      "kind": "class.tag-small-group origin-right@tag.em@text\n@js:\nres=[]\nresult.forEach(item=>{\n    item.split(new RegExp(\"[ \\/]\",\"gi\")).forEach(i=>res.push(i))\n})\nres",
      "name": "class.book-title-x@class.book-title@text"
    },
    "ruleToc": {
      "chapterList": "id.catelogX@class.chapter-li\n@js:\n    //现实debug(尝试修复正文链接问题，和目录不全)\n    //《好友角色的我怎么可能大受欢迎》第三卷12\n    //《我的青春恋爱喜剧》\n    //2022-8-19\n    //原来的代码在源注释（已移除）\n    //2022-8-20修复https://w.linovelib.com/novel/2765.html目录加载失败\n    //2023-9-30使用易于理解的变量命名\n    //2023-10-7处理cid(1)以及连续多个cid(0)\n    //2023-11-11解决了一个原来手滑写出的bug\n    //2023-11-16处理连续多个卷名\n    //2023-12-12适配新版卷名\n    //2024-2-6处理《谁说从妥协开始的恋爱一定没结果》\n\nres = result\n//java.log(res)\n\nfor (i = 0; i < res.length; i++) {\n    java.setContent(res)\n    if (java.getString(\"tag.a@href\").match(/javascript:cid\\(.+\\)/gi)) {\n        if (String(res[(i == res.length - 1?i:i+1)]).match(/javascript:cid\\(.+\\)/gi)) {\n            java.setContent(res[i - 1])\n            prevLink = java.getString(\"tag.a@href\")\n            if (prevLink == \"\") {\n                java.setContent(res[i - 2])\n                prevLink = java.getString(\"tag.a@href\")\n            }\n            content = ajax(source.bookSourceUrl + prevLink)\n            java.setContent(content)\n            foot = java.getElements(\"id.footlink\")\n            path = prevLink\n\n            //java.log(foot)\n            while (String(foot).match(/下一页|下一頁/gi)) {\n            \t    //java.log(foot)\n                str = content.match(/<script type\\=\\\"text\\/javascript\\\">var ReadParams.*/)\n                path = String(str).match(/url_next\\:'.*?html/)[0].replace(\"url_next:'\", \"\")\n                content = java.ajax(\"https://w.linovelib.com\" + path)\n                java.setContent(content)\n                foot = java.getElements(\"id.footlink\")\n            }\n\n            next = ajax(source.bookSourceUrl + path)\n            str = next.match(/<script type\\=\\\"text\\/javascript\\\">var ReadParams.*/)\n            path = String(str).match(/url_next\\:'.*?html/)[0].replace(\"url_next:'\", \"\")\n            java.log('l:'+path)\n            res = String(res).replace(/javascript:cid\\(.+\\)/gi, path)\n        } else {\n            nextLink = \"\"\n            for (var j=1;nextLink==\"\";j++) {\n                java.setContent(res[i + j])\n                nextLink = java.getString(\"tag.a@href\")\n            }\n            next = ajax(source.bookSourceUrl + nextLink)\n            str = next.match(/<script type\\=\\\"text\\/javascript\\\">var ReadParams.*/)\n            try {\n              path = String(str).match(/url_previous\\:'.*?html/)[0].replace(\"url_previous:'\", \"\")\n            } catch(e) {\n            \t  java.toast(String(next)+\"\\n\")\n            \t  java.log(next)\n            \t  throw(\"目录解析报错开始：\\n\"+String(next)+\"\\n结束\")\n            \t}\n            //java.log(path)\n\n            res = String(res).replace(/javascript:cid\\(.+\\)/gi, path)\n        }\n    }\n\n    //java.log(res)\n}\nres",
      "chapterName": "text",
      "chapterUrl": "@js:\n//只有不为卷名时返回URL，避免阅读自动合并\njava.getString(\"class.chapter-bar@text\")!=java.getString(\"text\") ? java.getString(\"tag.a@href\") : \"\"",
      "isVolume": "@js:\njava.getString(\"class.chapter-bar@text\")==java.getString(\"text\")",
      "updateTime": ""
    },
    "searchUrl": "<js>\npage == 1 ?\n  \"/search.html?searchkey={{key}}&searchtype=all\"\n  :\n  '/search/{{key}}/{{page}}.html'\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "// Error: 发现目录失效\n\n建议登录\n酷安 @吉王义昊\nGitHub：https://github.com/jiwangyihao/source-j-legado\n# 关于许可的额外声明（在线版本参见 GitHub，以在线版本为准）\n- 当许可证与本声明冲突时，以本声明为准；\n- 对于本仓库中的任意代码片段：按照 `MPL 2.0` 中有关约定执行；\n- 对于本仓库中的某一完整书源的转载或二次开发，需满足以下全部条件：\n  - 在[本仓库](https://github.com/jiwangyihao/source-j-legado)的 `issue` 中提出请求并具体说明转载地址、二次开发后的书源开源地址以及其他必要信息；\n  - 等待原作者（即本仓库的初始所有者和初始代码贡献者 [@jiwangyihao](https://github.com/jiwangyihao)）查看并通过 `issue` 或依据原作者要求更改转载方式或补充更详细的信息。\n  - 考虑到本项目弃坑的可能，新 `issue` 开启后超过 20 个工作日原作者没有回复或者原作者回复要求更改的 `issue` 在更改后超过 20 个工作日原作者没有回复即视为原作者通过该 `issue`：\n    - 此处的 `issue` 仅包括在[本仓库](https://github.com/jiwangyihao/source-j-legado)开启的，处于「开启状态」的 issue。（也就是说，请不要在已经关闭的 issue 中回复）。\n    - 对于此种方式通过的 issue，转载/二次开发者仍应当遵守本声明中已经写明的相关约定。\n  - 不得上传至源仓库或整理至`非轻小说专用`的书源合集中并应当避免其他人将转载/二次开发版本上传至源仓库或整理至`非轻小说专用`的书源合集中：\n    - 关于轻小说的定义的额外说明：不包括国内的原创网络文学作品（如 `SF 轻小说` 中的原创轻小说以及`起点中文网`中标签包含轻小说的作品）。\n    - 轻小说专用的定义：有且仅有想看轻小说的人可能会添加。\n  - 必须在转载/二次开发地址的明显位置完整包含本声明的全部内容。\n  - 必须保留源注释中原有的更改记录。\n整理修改缝合：酷安 Wolken\n灰色章节修复目录部分By叶落岚起+关耳/乃星改\n2021.8.3\n补丁 : 神秘人\n修复搜索问题\n修复发现榜单没图的问题\n修复章节内图片问题\n新補丁: 神秘人\n抓取源码中的关键字替换\n更新补丁\n更新补丁17/9\n2023.9.27\n新补丁：酷安 @吉王义昊\n重新抓取源码中的关键字替换\n2023.9.27\n新补丁2nd：酷安 @吉王义昊\n修复插图不能正常加载的问题\n2023.9.30\n酷安 @吉王义昊\n添加登录URL\n清理了无用代码\n使用更易读的变量名\n2023.10.1\n酷安 @吉王义昊\n重新抓取源码中的关键字替换\n2023.10.1\n酷安 @吉王义昊\n在获取正文时自动拉取源码并解密进行关键字替换，一劳永逸（大概）解决问题\n注意：此版本会使网络请求次数增加一倍，并一定程度上减慢加载速度\n2023.10.1\n酷安 @吉王义昊\n增加登录URL和登录UI\n启用CookieJar\n去除章节名下方的URL\n修正了下一页获取导致的正文加载错误\n补全发现中的文库\n修正部分小说目录获取错误的问题\n2023.10.4\n酷安 @吉王义昊\n跟进源码新的加密方式\n2023.10.5\n酷安 @吉王义昊\n跟进源码新的加密方式\n2023.10.6\n酷安 @吉王义昊\n跟进源站网站结构改动\n2023.10.7\n酷安 @吉王义昊\n改进了目录获取方式，现在能够处理更多意外情况\n2023.10.7\n酷安 @吉王义昊 @是樱椛不是樱花\n发现新增标签\n2023.10.9\n酷安 @吉王义昊\n改进了发现\n2023.10.13\n酷安 @吉王义昊\n跟进源站结构改动\n2023.10.15\n酷安 @吉王义昊\n修正部分小说目录获取错误的问题\n2023.10.22\n酷安 @吉王义昊\n发现页更改为动态获取，为大家带来更多排列组合（乐\n同样由于动态获取，现在可以查看标签对应的书籍数量了\n小幅优化正文的获取速度\n正文页可显示正确的章节名称（在加载对应正文页后目录里的错误名称会自动更正）\n2023.10.23\n酷安 @吉王义昊\n加载详情页后会自动更改错误的书名\n2023.10.25\n酷安 @吉王义昊\n发现页新增书架\n2023.11.7\n酷安 @吉王义昊\n使用Cache小幅度加快连续加载时正文的加载速度\n2023.11.11\n酷安 @吉王义昊\n解决了部分书籍目录最后一章获取链接错误的问题\n2023.11.12\n酷安 @吉王义昊\n移除了站长的喊话\n2023.11.14\n酷安 @吉王义昊\n修复了图片加载错误的问题\n2023.11.16\n酷安 @吉王义昊\n解决了部分书籍获取目录失败的问题\n2023.11.23\n酷安 @吉王义昊\n解决了未登录时无法正确加载发现页的问题\n2023.11.28\n酷安 @吉王义昊\nwrap了一份WebCrypto API，现在搜索不用等待内置浏览器跳转了\n2023.12.12\n酷安 @吉王义昊\n适配新版卷名\n2023.12.13\n酷安 @吉王义昊\n适配新版卷名\n2024.1.13\n酷安 @吉王义昊\n自动调用内置浏览器过cf盾\n移除了并发率\n将UA置空强制阅读使用WebView默认UA\n目录下一页识别改为简繁通用\n2024.1.20\n酷安 @吉王义昊\n实验性加入自动重试机制，大幅提高目录及多页正文加载成功率\n2024.1.24\n酷安 @吉王义昊\n适配最新正文检测\n2024.2.6\n酷安 @吉王义昊\n处理cf扩大化问题\n解决部分小说目录加载失败的问题（《谁说从妥协开始的恋爱一定没结果》）\n2024.2.14\n酷安 @吉王义昊\n正文重试优化\n2024.3.11\n酷安 @吉王义昊\n适配最新正文检测\n处理登录失败问题\n2024.3.25\n酷安 @吉王义昊\n适配最新文库筛选\n2024.4.8\n酷安 @吉王义昊\n回退更改以解决乱码问题\n适配最新标签筛选\n调整发现样式\n2024.4.12\n酷安 @吉王义昊\n在简介中增加标签信息\n2024.5.2\n酷安 @吉王义昊\n解决换字体导致的乱码问题\n2024.6.11\n酷安 @吉王义昊\n处理源站最新更改\n2024.7.6\n酷安 @吉王义昊\n跟进源站发现更改",
    "bookSourceGroup": "🌸轻文",
    "bookSourceName": "哔哩轻小说",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.bilinovel.com",
    "bookUrlPattern": "",
    "concurrentRate": "",
    "coverDecodeJs": "",
    "customOrder": 43,
    "enabled": true,
    "enabledCookieJar": true,
    "enabledExplore": true,
    "exploreUrl": "@js:\nres = []\n\n//筛选链接生成\nfunction generateFilterUrl(new_values) {\n  values = {\n    order: 'lastupdate',\n    anime: '0',\n    tagid: '0',\n    sortid: '0',\n    typeid: '0',\n    words: '0',\n    rgroupid: '0',\n    update: '0',\n    isfull: '0',\n    page: '{{page}}',\n    initial: '0'\n  }\n  for (key in new_values) {\n  \t  values[key]=new_values[key]\n  \t}\n  return source.bookSourceUrl + '/wenku/' + values.order + '_' + values.tagid + '_' + values.isfull + '_' + values.anime + '_' + values.rgroupid + '_' + values.sortid + '_' + values.typeid + '_' + values.words + '_' + values.page + '_' + values.update + '.html';\n}\n\n//书架\nuser = ajax(source.bookSourceUrl + \"/user.php\")\n//java.toast(user)\ntry {\nif (user.match(/<title>(登录|错误).+哔哩轻小说<\\/title>/gi)) {\n  //未登录\n  res.push(\n    {\n      title: `>> 我的书架 | 未登录 <<`,\n      url: '',\n      style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n    })\n} else {\n  //已登录\n  res.push(\n    {\n      title: `>> 我的书架 | ${user.match(/<span class=\"user-name\">.+<\\/span>/gi)[0].replace(/<\\/?span.*?>/gi,'')} <<`,\n      url: '',\n      style: { layout_flexGrow: 1, layout_flexBasisPercent: 1 }\n    })\n  bookcase = ajax(source.bookSourceUrl + \"/bookcase.php\")\n  bookcase.match(/<select[\\s\\S]+?<\\/select>/gi)[0].match(/<option.+<\\/option>/gi).forEach(option => {\n    res.push(\n      {\n        title: option.match(/>.+(?=<)/gi)[0].replace('>', ''),\n        url: source.bookSourceUrl + \"/bookcase.php?classid=\" + option.match(/value=\\\".+?(?=\\\")/gi)[0].replace(/(value=\\\")/gi, ''),\n        style: { layout_flexGrow: 1 }\n      })\n  })\n}\n} catch (e) {\n  throw(\"书架加载失败：\\n\"+e+\"\\n登录页源码：\\n\"+user)\n}\n\ncontent = org.jsoup.Jsoup.parse(ajax(source.bookSourceUrl + \"/wenku/\"))\ntry {\ncontent.select(\"ul#filters li.sort-li\").forEach(li => {\n  res.push({\n    title: `>> ${li.select(\"h3\").textNodes()[0].text()} <<`,\n    url: \"\",\n    style: {\n      layout_flexGrow: 1,\n      layout_flexBasisPercent: 1\n    }\n  })\n  li.select(\"a\").forEach(a => {\n    let filter = {}\n    let type = a.attr(\"data-filter-type\")\n    let value = a.attr(\"data-filter-value\")\n    filter[type]=value\n    res.push({\n      title: a.text(),\n      url: generateFilterUrl(filter),\n      style: { layout_flexGrow: 1 }\n    })\n  })\n})\n} catch (e) {\n  throw(\"文库加载失败：\\n\"+e+\"\\n文库页源码：\\n\"+content)\n}\n\nJSON.stringify(res)\n//throw(JSON.stringify(res)) ",
    "header": "{\n\"Referer\": \"https://www.bilinovel.com\",\n\"User-Agent\":\"Mozilla/5.0 (Linux; Android 14; 23113RKC6C Build/UKQ1.230804.001) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/127.0.6533.64 Mobile Safari/537.36\",\n\"Accept-Language\":\"zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6\",\n\"Accept\":\"*/*\"\n}",
    "jsLib": "function errorReg() {\n  return /(java.net.+Exception)|(okhttp.+Exception)|(error code: 1015)|(cf-error[\\s\\S]*1015)|(503 Service Temporarily Unavailable)|(Parse error.+in.+wwwroot.+php)|(_cf_chl_opt|challenges.css)|(<center.+>.+不支持)|(章节内容不支持该浏览器显示)|(内容加载失败！)/gi\n}\nfunction ajax(url) {\n  const { java, cookie } = this;\n  let content = \"\";\n  let time=1;\n  \tcontent = java.ajax(url);\n  \twhile (String(content).match(errorReg())) {\n    if (time>10) {\n  \t    java.toast(\"重试10次后仍请求失败：\"+url)\n  \t    throw(\"重试10次后仍请求失败：\"+url+content)\n  \t    break;\n    \t}\n    \tif(!!String(content).match(/不支持/gi)) {\n      //java.log(cookie.getCookie(url));\n      cookie.replaceCookie(url,java.webView(null,url,\"document.cookie\"));\n    \t}\n    \tif (!!String(content).match(/_cf_chl_opt|challenges.css/gi)) {\n    \t\t i = 1;\n      \twhile (!!String(content).match(/_cf_chl_opt|challenges.css/gi)) {\n\t       java.log('盾');\n\t       java.log(content);\n        if (i <= 1) {\n          java.toast(\"哦呼，五秒盾，正在尝试静默破盾ing……\");\n          content = java.webView(null,url,null);\n        } else {\n          java.toast(\"啊哦，静默破盾好像不管用，试试手动过校验吧！\");\n          content = java.startBrowserAwait(url,\"加载完毕后点完成，此页面可能会弹出多次\").body();\n        }\n        i++;\n      }\n      continue;\n    }\n  \t\t java.log(\"请求失败：\"+url)\n  \t\t java.log(\"重试\"+time+\"次\")\n  \t\t let t=new Date().getTime()\n    while (new Date().getTime() - t < 500) { }\n    if (String(content).match(/1015|503|php/gi)) {\n    \t  while (new Date().getTime() - t < 5000) { }\n    \t}\n  \t\t content = java.ajax(url);\n  \t\t time++;\n  \t}\n  \treturn String(content);\n}",
    "lastUpdateTime": 1732103948164,
    "loginUi": "[\n  {\n    \"name\": \"账号\",\n    \"type\": \"text\"\n  },\n  {\n    \"name\": \"密码\",\n    \"type\": \"password\"\n  }\n]",
    "loginUrl": "@js:\nfunction login() {\n  let une = source.getLoginInfoMap().get(\"账号\")\n  let pwd = source.getLoginInfoMap().get(\"密码\")\n  if (une && pwd) {\n    let body = String('username=' + une + '&password=' + pwd + '&usecookie=86400&act=login')\n    let url = source.bookSourceUrl + '/login.php?do=submit'\n    let res = java.post(url, body, {\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\n      \"Cookie\": java.webView(null,url,\"document.cookie\")\n    })\n    let ck = res.cookies()\n    if (res.body().match(/错误/gi)) {\n      throw(res.body().match(/<div class=\"aui-ver-form\">[\\s\\S]+<br>/gi)[0].replace(/<.+>\\s*/gi,\"\"))\n    }\n    let header = JSON.stringify({\n      \"Cookie\": String(ck).match(/\\{(.*?)\\}/)[1].replace(/,/g, ';')\n    })\n    source.putLoginHeader(header)\n  }\n}",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "[property=\"og:novel:author\"]@content",
      "canReName": "1",
      "coverUrl": "[property=\"og:image\"]@content",
      "intro": "标签：{{@@class.tag-small red@text##\\s## - }}\n{{@@id.bookSummary@tag.content@textNodes}}",
      "kind": "class.book-cell@tag.p.1@ownText&&class.tag-small red@text\n##.*万字|·.*",
      "lastChapter": "class.gray ell@text##(\\d+-\\d+-\\d+\\s\\d+:\\d+)·(.*)##$2 • $1",
      "name": "[property=\"og:novel:book_name\"]@content",
      "tocUrl": "{{@@class.btn-normal red@href}}",
      "wordCount": "class.book-cell@tag.p.1@ownText##连载|完结"
    },
    "ruleContent": {
      "content": "@js:\nif (String(src).match(errorReg())) {\n  java.log(src)\n  src=ajax(baseUrl);\n}\njava.setContent(src)\nif (java.get('jsContent') == '' || java.get('id') == '') {\n  jsLink = java.getString(\"tag.script@src\").match(/http.+zhmb.+readtool.+\\?v.+/gi)\n  try {\n    jsLink.forEach(link => {\n      jsRaw = java.cacheFile(link)\n      jsContent = jsRaw.match(/eval.+/gi)\n      if (jsContent) {\n        java.put('id', jsRaw.match(/contentid: '.+(?=',)/gi)[0].replace(\"contentid: '\", ''))\n        java.put('jsContent', jsContent[0])\n      } else if (jsContent=jsRaw.match(/.+\\\\x.+/gi)) {\n        java.put('id', jsRaw.match(/contentid: '.+(?=',)/gi)[0].replace(\"contentid: '\", ''))\n        java.put('jsContent', jsContent[0])\n      }\n    \t})\n  \t} catch(e) {\n  \t\t throw(\"正文获取js错误：\\n\"+e+\"\\n正文源码：\\n\"+src)\n  \t}\n  //java.ajaxAll(jsLink).forEach(res => {\n  //  jsRaw = res.body()\n  //})\n}\ntry {\n  h = String(java.getString(\"id.\" + java.get('id') + \"@html\"))\n  h = h.replace(\"&nbsp;&nbsp;\", \"&emsp;\")\n  el = { innerHTML: String(h) }\n  document = { getElementById: () => { return el } }\n  window = { document: document, RegExp: RegExp }\n  eval(String(java.get('jsContent')))\n} catch(e) {\n  java.log(src)\n  throw(\"js 执行错误：\"+e+\"\\njs 内容；\\n\"+jsContent)\n}\nh = el.innerHTML\nsrc.match(/<style>.+<\\/style>/gi).forEach(style => {\n  style=style.replace(/<.?style>/gi,'')\n  if (style.match(/[^{}]*@font-face[^{}]*{[^{}]+}/gi)) {\n    fontRules={}\n    style\n      .match(/[^{}]*@font-face[^{}]*{[^{}]+}/gi)[0]\n      .replace(/[^{}]*@font-face[^{}]*{([^{}]+)}/gi, \"$1\").split(\";\").forEach(rule => {\n        if(rule.split(':')[0].trim())\n          fontRules[rule.split(':')[0].trim()]=rule.split(':')[1].trim()\n      })\n    java.log(JSON.stringify(fontRules))\n    //TODO: 懒得写了，解析字体地址\n    \n    style.replace(/[^{}]*@font-face[^{}]*{([^{}]+)}/gi, \"\").match(/[^{}]+{[^{}]+}/gi).forEach(set => {\n      selector = set.replace(/([^{}]+){([^{}]+)}/gi, \"$1\").trim()\n      rules = {}\n      set.replace(/([^{}]+){([^{}]+)}/gi, \"$2\").split(\";\").forEach(rule => {\n        if(rule.split(':')[0].trim())\n          rules[rule.split(':')[0].trim()]=rule.split(':')[1].trim()\n      })\n      if (rules[\"font-family\"]) {\n        if(rules[\"font-family\"]\n        \t.match(fontRules[\"font-family\"])) {\n          doc=org.jsoup.Jsoup.parse(h);\n          originText = doc.select(selector).text()\n          replaceText = java.replaceFont(originText, java.queryTTF(\"https://www.bilinovel.com/public/font/read.ttf\"), java.queryTTF(\"https://github.moeyy.xyz/https://raw.githubusercontent.com/jiwangyihao/source-j-legado/main/utils/MI%20LANTING.ttf\"), true)\n          h = h.replace(/<\\/?\\w+>/g,\"\").replace(originText, replaceText)\n        }\n      }\n    })\n  \t}\n})\nh",
      "imageDecode": "",
      "imageStyle": "FULL",
      "nextContentUrl": "##url_next:'([^']*)'##$1###\n@js:\n//121_2.html这样的是下一页，纯数字则是下一章\n//带有catalog是详情页\njava.log(\"url: \"+result)\nif (result==\"\") java.log(src)\nvar isNew=/(\\/(\\d+).html)|catalog/.test(result);\nvar out=isNew?'':result;\nout",
      "payAction": "@js:\nbaseUrl",
      "replaceRegex": "##((?<=[\\u4e00-\\u9fa5“‘「（，])\\s+)?<!--\\s*\\（继续下一页\\）\\s*-->\\s*|((?<=[\\u4e00-\\u9fa5“‘「（，])\\s+)?\\（本章未完\\）\\s*|.+tmygod.+\\n",
      "title": "id.atitle@text"
    },
    "ruleExplore": {
      "author": "class.book-author@ownText",
      "bookList": "@js:\ni = 1;\n\nif (String(src).match(errorReg())) {\n  src=ajax(baseUrl);\n}\njava.setContent(src)\nresult = java.getElement(\"class.book-ol@tag.li\");\nresult;",
      "bookUrl": "a@href",
      "coverUrl": "img@data-src",
      "intro": "class.book-desc@text&&class.ell@text",
      "kind": "class.tag-small-group origin-right@tag.em.0@text&&\nclass.tag-small-group origin-right@tag.em.1@text&&\ntag.time@text\n@js:\nres=[]\nresult.forEach(item=>{\n    item.split(new RegExp(\"[ \\/]\",\"gi\")).forEach(i=>res.push(i))\n})\nres",
      "name": "class.book-li@tag.img@alt",
      "wordCount": "class.tag-small blue@text"
    },
    "ruleSearch": {
      "author": "class.book-author@textNodes",
      "bookList": "@js:\njava.log(cookie.getCookie(baseUrl))\nif (String(result).match(errorReg())&&!result.includes(\"somework\")) {\n  result=ajax(baseUrl);\n}\nif (result.includes(\"no-js\")) {\n  java.log(result)\n  jsContent = java.cacheFile(java.getString(\"tag.script@src\").match(/http.+somework.+\\?v.+/gi)[0])\n  window = {\n    a: result.match(/window.a=\\'.+\\'/gi)[0].replace(/window.a=|\\'/gi, ''),\n    b: result.match(/window.b=\\'.+\\'/gi)[0].replace(/window.b=|\\'/gi, ''),\n    c: result.match(/window.c=\\'.+\\'/gi)[0].replace(/window.c=|\\'/gi, ''),\n    crypto: {\n      subtle: {\n        importKey(format, keyData, algorithm, extractable, keyUsages) {\n          return {\n            then(func) { func(keyData) }\n          }\n        },\n        decrypt(algorithm, key, data) {\n          cipher = java.createSymmetricCrypto(\"AES/CTR/NoPadding\", key, algorithm.counter)\n          return {\n            then: (func) => { func(cipher.decryptStr(data)) }\n          }\n        }\n      }\n    }\n  }\n  setTimeout = () => { }\n  function TextDecoder() { }\n  TextDecoder.prototype.decode = bytes => bytes\n  document = { cookie: \"\" }\n  java.log(jsContent)\n  funcName=String(jsContent).match(/^function.+\\(/gi)[0].replace(/function| |\\(/gi,'')\n  \tjava.log(funcName)\n  eval(funcName + ' = str => java.base64DecodeToByteArray(str)')\n  eval(String(jsContent)\n    .replace(/^function.+\\(/gi, 'function ('))\n  java.log(document.cookie)\n  cookie.replaceCookie(baseUrl, document.cookie)\n  do {\n    t = new Date().getTime()\n    while (new Date().getTime() - t < 5000) { }\n    java.setContent(result = ajax(baseUrl + \",\"\n      + JSON.stringify({\n        headers: {\n          Cookie: cookie.getCookie(baseUrl)\n        }\n      })))\n    java.log(result)\n  } while (result.includes(\"no-js\"))\n}\njava.getElement(\"class.book-ol book-ol-normal@tag.li\")",
      "bookUrl": "tag.a.0@href",
      "checkKeyWord": "我的青春恋爱喜剧",
      "coverUrl": "a@href@js:\nvar id = result.match(/\\/(\\d+)\\.html/)[1];\n'https://www.linovelib.com/files/article/image/'+parseInt(id/1000)+'/'+id+'/'+id+'s.jpg';",
      "intro": "class.book-desc@text",
      "kind": "class.tag-small-group origin-right@tag.em@text\n@js:\nres=[]\nresult.forEach(item=>{\n    item.split(new RegExp(\"[ \\/]\",\"gi\")).forEach(i=>res.push(i))\n})\nres",
      "name": "class.book-title-x@class.book-title@text"
    },
    "ruleToc": {
      "chapterList": "id.catelogX@class.chapter-li\n@js:\n    //现实debug(尝试修复正文链接问题，和目录不全)\n    //《好友角色的我怎么可能大受欢迎》第三卷12\n    //《我的青春恋爱喜剧》\n    //2022-8-19\n    //原来的代码在源注释（已移除）\n    //2022-8-20修复https://w.linovelib.com/novel/2765.html目录加载失败\n    //2023-9-30使用易于理解的变量命名\n    //2023-10-7处理cid(1)以及连续多个cid(0)\n    //2023-11-11解决了一个原来手滑写出的bug\n    //2023-11-16处理连续多个卷名\n    //2023-12-12适配新版卷名\n    //2024-2-6处理《谁说从妥协开始的恋爱一定没结果》\n\nres = result\n//java.log(res)\n\nfor (i = 0; i < res.length; i++) {\n    java.setContent(res[i])\n    if (java.getString(\"tag.a@href\").match(/javascript:cid\\(.+\\)/gi)) {\n        if (String(res[(i == res.length - 1?i:i+1)]).match(/javascript:cid\\(.+\\)/gi)) {\n            java.setContent(res[i - 1])\n            prevLink = java.getString(\"tag.a@href\")\n            if (prevLink == \"\") {\n                java.setContent(res[i - 2])\n                prevLink = java.getString(\"tag.a@href\")\n            }\n            content = ajax(source.bookSourceUrl + prevLink)\n            java.setContent(content)\n            foot = java.getElements(\"id.footlink\")\n            path = prevLink\n\n            //java.log(foot)\n            while (String(foot).match(/下一页|下一頁/gi)) {\n            \t    //java.log(foot)\n                str = content.match(/<script type\\=\\\"text\\/javascript\\\">var ReadParams.*/)\n                path = String(str).match(/url_next\\:'.*?html/)[0].replace(\"url_next:'\", \"\")\n                content = java.ajax(\"https://w.linovelib.com\" + path)\n                java.setContent(content)\n                foot = java.getElements(\"id.footlink\")\n            }\n\n            next = ajax(source.bookSourceUrl + path)\n            str = next.match(/<script type\\=\\\"text\\/javascript\\\">var ReadParams.*/)\n            path = String(str).match(/url_next\\:'.*?html/)[0].replace(\"url_next:'\", \"\")\n            java.log('l:'+path)\n            res[i] = String(res[i]).replace(/javascript:cid\\(.+\\)/gi, path)\n        } else {\n            nextLink = \"\"\n            for (var j=1;nextLink==\"\";j++) {\n                java.setContent(res[i + j])\n                nextLink = java.getString(\"tag.a@href\")\n            }\n            next = ajax(source.bookSourceUrl + nextLink)\n            str = next.match(/<script type\\=\\\"text\\/javascript\\\">var ReadParams.*/)\n            try {\n              path = String(str).match(/url_previous\\:'.*?html/)[0].replace(\"url_previous:'\", \"\")\n            } catch(e) {\n            \t  java.toast(String(next)+\"\\n\")\n            \t  java.log(next)\n            \t  throw(\"目录解析报错开始：\\n\"+String(next)+\"\\n结束\")\n            \t}\n            //java.log(path)\n\n            res[i] = String(res[i]).replace(/javascript:cid\\(.+\\)/gi, path)\n        }\n    }\n\n    //java.log(res[i])\n}\nres",
      "chapterName": "text",
      "chapterUrl": "@js:\n//只有不为卷名时返回URL，避免阅读自动合并\njava.getString(\"class.chapter-bar@text\")!=java.getString(\"text\") ? java.getString(\"tag.a@href\") : \"\"",
      "isVolume": "@js:\njava.getString(\"class.chapter-bar@text\")==java.getString(\"text\")",
      "updateTime": ""
    },
    "searchUrl": "<js>\npage == 1 ?\n  \"/search.html?searchkey={{key}}&searchtype=all\"\n  :\n  '/search/{{key}}_{{page}}.html'\n</js>",
    "weight": 0
  },
  {
    "bookSourceComment": "禁用VPN\n\n需要登录\n整理：GitHub@ZWolken",
    "bookSourceGroup": "🌸轻文",
    "bookSourceName": "轻小说文库",
    "bookSourceType": 0,
    "bookSourceUrl": "https://www.wenku8.cc/index.php",
    "bookUrlPattern": "https://www.wenku8.cc/book/.*",
    "customOrder": 44,
    "enabled": true,
    "enabledCookieJar": false,
    "enabledExplore": true,
    "exploreUrl": "[{'title':'文库分类','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:1}},\n{'title':'电击文库','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=1&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'富士见文库','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=2&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'角川文库','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=3&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'MF文库J','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=4&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'Fami通文库','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=5&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'GA文库','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=6&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'HJ文库','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=7&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'一迅社','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=8&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'集英社','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=9&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'小学馆','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=10&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'讲谈社','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=11&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'少女文库','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=12&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'其他文库','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=13&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'游戏剧本','url':'https://www.wenku8.cc/modules/article/articlelist.php?class=14&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'全部轻小说','url':'https://www.wenku8.cc/modules/article/articlelist.php?page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:1}},\n{'title':'动画化作品','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=anime&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'完结全本','url':'https://www.wenku8.cc/modules/article/articlelist.php?fullflag=1&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'排行榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=allvisit&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:1}},\n{'title':'总收藏榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=goodnum&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'总排行榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=allvisit&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'月排行榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=monthvisit&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'周排行榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=weekvisit&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'日排行榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=dayvisit&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'总推荐榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=allvote&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'月推荐榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=monthvote&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'周推荐榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=weekvote&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'日推荐榜','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=dayvote&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'最新入库','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=postdate&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'最近更新','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=lastupdate&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'字数排行','url':'https://www.wenku8.cc/modules/article/toplist.php?sort=size&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'日常系属性','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:1}},\n{'title':'校园','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D0%A3%D4%B0&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'青春','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C7%E0%B4%BA&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'恋爱','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C1%B5%B0%AE&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'治愈','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D6%CE%D3%FA&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'群像','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C8%BA%CF%F1&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'竞技','url':'https://www.wenku8.cc/modules/article/tags.php?t=%BE%BA%BC%BC&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'音乐','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D2%F4%C0%D6&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'美食','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C3%C0%CA%B3&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'旅行','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C2%C3%D0%D0&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'欢乐向','url':'https://www.wenku8.cc/modules/article/tags.php?t=%BB%B6%C0%D6%CF%F2&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'经营','url':'https://www.wenku8.cc/modules/article/tags.php?t=%BE%AD%D3%AA&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'职场','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D6%B0%B3%A1&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'斗智','url':'https://www.wenku8.cc/modules/article/tags.php?t=%B6%B7%D6%C7&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'脑洞','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C4%D4%B6%B4&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'宅文化','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D5%AC%CE%C4%BB%AF&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'幻想系属性','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:1}},\n{'title':'穿越','url':'https://www.wenku8.cc/modules/article/tags.php?t=%B4%A9%D4%BD&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'奇幻','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C6%E6%BB%C3&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'魔法','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C4%A7%B7%A8&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'异能','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D2%EC%C4%DC&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'战斗','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D5%BD%B6%B7&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'科幻','url':'https://www.wenku8.cc/modules/article/tags.php?t=%BF%C6%BB%C3&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'机战','url':'https://www.wenku8.cc/modules/article/tags.php?t=%BB%FA%D5%BD&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'战争','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D5%BD%D5%F9&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'冒险','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C3%B0%CF%D5&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'龙傲天','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C1%FA%B0%C1%CC%EC&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'黑深残属性','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:1}},\n{'title':'悬疑','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D0%FC%D2%C9&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'犯罪','url':'https://www.wenku8.cc/modules/article/tags.php?t=%B7%B8%D7%EF&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'复仇','url':'https://www.wenku8.cc/modules/article/tags.php?t=%B8%B4%B3%F0&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'黑暗','url':'https://www.wenku8.cc/modules/article/tags.php?t=%BA%DA%B0%B5&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'猎奇','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C1%D4%C6%E6&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'惊悚','url':'https://www.wenku8.cc/modules/article/tags.php?t=%BE%AA%E3%A4&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'间谍','url':'https://www.wenku8.cc/modules/article/tags.php?t=%BC%E4%B5%FD&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'末日','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C4%A9%C8%D5&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'游戏','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D3%CE%CF%B7&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'大逃杀','url':'https://www.wenku8.cc/modules/article/tags.php?t=%B4%F3%CC%D3%C9%B1&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'人物属性类','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:1}},\n{'title':'青梅竹马','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C7%E0%C3%B7%D6%F1%C2%ED&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'妹妹','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C3%C3%C3%C3&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'女儿','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C5%AE%B6%F9&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'JK','url':'https://www.wenku8.cc/modules/article/tags.php?t=JK&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'JC','url':'https://www.wenku8.cc/modules/article/tags.php?t=JC&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'大小姐','url':'https://www.wenku8.cc/modules/article/tags.php?t=%B4%F3%D0%A1%BD%E3&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'性转','url':'https://www.wenku8.cc/modules/article/tags.php?t=%D0%D4%D7%AA&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'伪娘','url':'https://www.wenku8.cc/modules/article/tags.php?t=%CE%B1%C4%EF&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'人外','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C8%CB%CD%E2&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'特殊属性类','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:1}},\n{'title':'后宫','url':'https://www.wenku8.cc/modules/article/tags.php?t=%BA%F3%B9%AC&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'百合','url':'https://www.wenku8.cc/modules/article/tags.php?t=%B0%D9%BA%CF&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'耽美','url':'https://www.wenku8.cc/modules/article/tags.php?t=%B5%A2%C3%C0&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'NTR','url':'https://www.wenku8.cc/modules/article/tags.php?t=NTR&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'女性视角','url':'https://www.wenku8.cc/modules/article/tags.php?t=%C5%AE%D0%D4%CA%D3%BD%C7&page={{page}}','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'这本轻小说真厉害！TOP20 榜单','url':'','style':{layout_flexGrow:1,layout_flexBasisPercent:1}},{'title':'2024','url':'https://www.wenku8.cc/zt/sugoi/2024.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.4}},\n'title':'2023','url':'https: //www.wenku8.cc/zt/sugoi/2023.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.4}},\n{'title':'2022','url':'https://www.wenku8.cc/zt/sugoi/2022.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2021','url':'https://www.wenku8.cc/zt/sugoi/2021.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2020','url':'https://www.wenku8.cc/zt/sugoi/2020.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2019','url':'https://www.wenku8.cc/zt/sugoi/2019.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2018','url':'https://www.wenku8.cc/zt/sugoi/2018.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2017','url':'https://www.wenku8.cc/zt/sugoi/2017.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2016','url':'https://www.wenku8.cc/zt/sugoi/2016.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2015','url':'https://www.wenku8.cc/zt/sugoi/2015.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2014','url':'https://www.wenku8.cc/zt/sugoi/2014.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2013','url':'https://www.wenku8.cc/zt/sugoi/2013.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2012','url':'https://www.wenku8.cc/zt/sugoi/2012.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2011','url':'https://www.wenku8.cc/zt/sugoi/2011.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2010','url':'https://www.wenku8.cc/zt/sugoi/2010.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2009','url':'https://www.wenku8.cc/zt/sugoi/2009.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2008','url':'https://www.wenku8.cc/zt/sugoi/2008.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2007','url':'https://www.wenku8.cc/zt/sugoi/2007.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2006','url':'https://www.wenku8.cc/zt/sugoi/2006.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}},\n{'title':'2005','url':'https://www.wenku8.cc/zt/sugoi/2005.php','style':{layout_flexGrow:1,layout_flexBasisPercent:0.25}}]",
    "header": "",
    "lastUpdateTime": 1732103251044,
    "loginUrl": "https://www.wenku8.cc/login.php",
    "respondTime": 180000,
    "ruleBookInfo": {
      "author": "tag.td.4@text##.*作者：",
      "coverUrl": "tag.img.1@src",
      "init": "",
      "intro": "//span[contains(text(), \\\"简介\\\")]/following-sibling::span/text()",
      "kind": "tag.td.3@text&&tag.td.5@text##.*分类：|.*状态：",
      "lastChapter": "@xpath://span[@style=\"font-size:14px;\"][1]/a/text()",
      "name": "tag.b.1@text",
      "tocUrl": "text.小说目录@href",
      "wordCount": ""
    },
    "ruleContent": {
      "content": "id.content@html##本文来自.*|最新.*一网打尽！",
      "nextContentUrl": "",
      "sourceRegex": "",
      "webJs": ""
    },
    "ruleExplore": {
      "author": "",
      "bookList": "",
      "bookUrl": "",
      "coverUrl": "tag.img.1@src",
      "intro": "",
      "kind": "",
      "lastChapter": "",
      "name": "",
      "wordCount": ""
    },
    "ruleSearch": {
      "author": "tag.p.0@text##\\/.*",
      "bookList": "@css:table.grid td>div,th a:nth-child(2n+1)",
      "bookUrl": "tag.a.0@href",
      "coverUrl": "tag.img.0@src",
      "intro": "##简介:([^<]+)<##$1###",
      "kind": "tag.p.0@text##.*分类:|状态:|/##",
      "lastChapter": "text.最后更新@text##最后更新.",
      "name": "@css:b>a,a[href^=http]@text##我要阅读|加入书架|推荐本书",
      "wordCount": "text.字数@text##.*字数."
    },
    "ruleToc": {
      "chapterList": "class.css@tag.td@a",
      "chapterName": "text",
      "chapterUrl": "href",
      "isVip": "",
      "nextTocUrl": "",
      "updateTime": ""
    },
    "searchUrl": "https://www.wenku8.cc/modules/article/search.php?searchtype=articlename&searchkey={{key}}&page={{page}},{\"charset\":\"gbk\"}",
    "weight": 0
  }
]
