[{"bookSourceComment": "// 错误: org.mozilla.javascript.EcmaError: TypeError: 无法从第 49 行 <未知来源> 中的未定义 (<未知来源>#49) 读取属性 \"content\"\n \n 基于 PyFQWeb 鲸落项目开发的 Legado 兼容书源", "bookSourceGroup": "", "bookSourceName": "番茄小说无钥匙版1鲸落", "bookSourceType": 0, "bookSourceUrl": "http://yuefangie.jingluo.love", "bookUrlPattern": "", "customOrder": -46, "enabled": true, "enabledCookieJar": true, "enabledExplore ": true, "exploreUrl": "@js:\nb = [\n {\n \"title\": \"我的书架\",\n \“网址\”： \"https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=56910&update_version_code=56910\",\n \"style\": {\n \"layout_flexBasisPercent\ ": 1,\n \"layout_flexGrow\": 1\n }\n }\n]\n\nsort0=[];//女频\nsort1=[];//男频\npush=(title, url, type1, type2)=>{\n\t\tjson = {\n\t\t\t\ttitle: 标题,\n\t\t\t\turl: url?url:\"\", \n\t\t\t\t样式：{\n\t\t\t\t\t\tlayout_flexGrow： 1，\n\t\t\t\t\t\tlayout_flexBasisPercent：type1\n\t\t\t\t\t}\n\t\t\t};\n\t\treturn eval(' sort'+type2+'.push(json)');\n\t};\n$$=(性别, 标签, 状态, 排序)=>{\n\t\t返回`https://tsearch.toutiaoapi.com/2/wap/search/extra/novel_operator?tab_name=%25E5%2585%25A8%25E9%2583%25A8%25E5%2588%2586%25E7%25B 1%25BB&ala_src=novel_tag&gender=${gender}&is_finish=0&iid=2008145514494631&aid=13&app_name=news_article&version_code=692&version_n ame=6.9.2&abflag=3&partner=novel_tag&offset={{(page-1)*10}}&limit=10&tags=%5B%22${tags}%22%5D&creation_status=${status}&word_num= 0&sort=${sort}`\n\t};\n\nstatus=\"ALL\",sort=0;\n[\n\t\t\t\t[\"女\",[[ \"无敌\",384],[\"种田\",23],[\"萌宝\",28],[\"美食\",78],[\"游戏动漫\",57] ,[\"娱乐圈\",43],[\"直播\",69],[\"女扮男装\",388],[\"二次元\",39],[\"团宠\",94 ],[\"无cp\",392],[\"青梅竹马\",387],[\"病娇\",380],[\"科幻\",8],[\"武侠\" ,16 ],[\"年代\",79],[\"重生\",36],[\"灵异\",100],[\"公主\",83],[\"甜宠\", 96]，[\ "盗墓\",81],[\"系统\",19],[\"女强\",86],[\"皇后\",84],[\"推理\",61],[ \"文化史\",62],[\"生活\",48],[\"反派\",369],[\"末世\",68],[\"悬疑\",10],[\"穿越\",3 7],[\"学霸\",82],[\"行走猪吃虎\",93],[\"清穿\",76],[\"穿书\",382],[ \"快穿\",24] ,[\"皇叔\",87],[\"空间\",44],[\"宠妻\",30],[\"豪门总裁\",29],[\"影视小说\ “，45]， [\"成功励志\",56],[\"职场\",127],[\"国民\",390],[\"都市生活\",2],[\"腹黑\", 92]，[\"星际\",77],[\"天才\",90],[\"古代言情\",5],[\"家庭\",125],[\"兽世\",72 ],[\"校园\",4],[\"诗歌散文\",46],[\"虐文\",95],[\"嫡女\",88],[\"王妃\",85],[\"精灵\",89],[\"幻想言情\",32], [\"现代言情\",3],[\"现言甜宠\",395],[\"现言脑洞\",267],[\"先婚后爱\",265],[\"都市日常\",261],[\"古言脑洞\",253],[\"古言萌宝\",249],[\"古言甜宠\",394],[\"现言日常\",269],[\"现言复仇\",268],[\"玄幻言情\",248],[\"医术\",247],[\"马甲\",266 ]]],\n\t\t[\"男\",[[\"玄幻\ ",7],[\"神豪\",20],[\"鉴宝\",17],[\"三国\",67],[\"二次元\",39],[\ "历史\",12],[\"美食\",78],[\"奶爸\",42], [\"娱乐圈\",43],[\"洪荒\",66],[\"大唐\",73],[\"外卖\",75],[\"末世\",68 ],[\"都市\",1],[\"宠物\",74],[\"学霸\ ",82],[\"游戏动漫\",57],[\"科幻\",8],[\"体育\",15],[\"直播\",69],[\"年代\",79],[\"文化历史\",62],[\"诸天万界\" ,71],[\"海岛\",40],[\"神医\",26],[\"明朝\",126],[\"武侠\",16],[\"灵异\ ",100],[\"星际\",77],[\"穿越\",37] ,[\"剑道\",80],[\"都市修真\",124],[\"赘婿\",25],[\"盗墓\",81],[\"推理\", 61],[\"无限流\",70],[\"种田\",23],[ \"战争\",97],[\"天才\",90],[\"职场\",127],[\"悬疑\",10],[\"励志成功\",56], [\"重生\",36],[\"系统\",19],[\"空间\",44],[\"腹黑\",92],[\"诗歌散文\",46],[\"家庭\",125],[\"影视小说\",45], [\"生活\",48],[\"都市生活\",2],[\"静止猪吃虎\",93],[\"大秦\",377],[\"无敌\",384],[\"漫威\",374],[\"火影\",368], [\"西游\",373],[\"龙珠\",376],[\ "聊天群\",381],[\"海贼\",370],[\"奥特同人\",367],[\"特种兵\",375],[\"反派\",369 ],[\"校花\",385],[\"女帝\",37 8],[\"单女主\",389],[\"神奇宝贝\",371],[\"九叔\",383],[\"求生\",379],[\"无女主\",391],[\"武魂\",386],[\"网游\",372],[\"战神\",27],[\"都市脑洞\",262],[\"都市种田\",263],[\"都市日常\",261], [\"历史脑洞\",272],[\玄"幻脑洞\", 257],[\"奇幻仙侠\",259],[\"都市青春\",396],[\"传统玄幻\",258],[\"历史古代\",273]]]\ n\t].map(([标题,列表],性别)=>{\n\t\tpush('༺ˇ»`ʚ'+title+'生频道ɞ´«ˇ༻',null,1,性别);\n\t\tlist.map([标题,标签]=>{\n\t\t\t\tpush('༺ '+title+' ༻',(性别、标签、状态、排序), 1,性别);\n\t\t\t\t[\"推荐\",\"评分\",\"热门\"].map((标题,排序)=>{\n\t\ t\t\t\t\t[ [\"[\"+标题+\"]\",\"全部\"],[\"完结\",\"完成\"],[\"连载\ “，\“加载中\”] ].地图([标题,status]=>{\n\t\t\t\t\t\t\t\t\treturn push(title, $$(gender, tags, status, sort), 0.25,gender);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t});\nJSON.stringify(\n\tb.concat(sort1).concat(sort0)\n);", "jsLib": "let replaceCover = (u) => {\n if (u.startsWith(\"https://\")) u = u.substring(8)\n else u = u.substring(7)\n let uArr = u.split(\"/\")\n uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n let uArr2 = []\n uArr.forEach((x) => {\n if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n else uArr2.push(x.split(\"~\")[0])\n })\nu = uArr2.join(\"/\")\n return u\n}", "lastUpdateTime": 1723537285517, "loginUrl": "https://fanqienovel.com", "respondTime": 182871, "ruleBookInfo": {"author": "author", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", "init": "$.data", "intro": "  \n📕 来源名：{{$.original_book_name}}\n📖 别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🏷️ 标签：{{$.tags}}\n👤主角：{{$.roles##\\[|\\\"|\\]}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​\"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n@js:result.replace(/.+：(人在读)?\\n/g,\"\")", "kind": "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完成结\n{{$.score}}分\n{{java.timeFormatUTC(java.getString(\"last_chapter_update_time\") *1000,'yyyy-MM-dd',8)}}\n##连载0|1完结|男生0|1女生\n@js:结果\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完成结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}", "name": "book_name", “tocUrl”：“{{source.bookSourceUrl}}/catalog?book_id={{$.book_id}}”，“wordCount”：“word_number”}，“ruleContent”：{“content”：“<js>\nlet res = JSON.parse(result).data.content\nfunction getComic(result) {\n let mat = result.match(/<article>([\\s\\S]*?)<\\/article>/);\n try {\n let cnt = JSON.parse(\n mat\n ? mat[1].replace(/\\&/g, '\"').replace(/\\;/g, \"\").replace(/\\#34/g, \"\")\n : result\n );\n return (mat ? cnt.skeleton.data : cnt.picInfos)\n .map((i) => {\n let path = mat\n ? cnt.materials[i.element_name].data.web_uri\n : \"novel-pic/\" + i.md5;\n return `<img src=\"https://p3-novel.byteimg.com/origin/${path}\">`;\n })\n .join(\"<br>\");\n } catch (e) { // 不是漫画内容\n mat = result.match(/<body>([\\s\\S]*?)<\\/body>/)\n // java.log(result)\n return (mat ? mat[1] : result).toString().replace(/\\<\\!DOCTYPE html.*/g, \"\").replace(/\\<tt_keyword_ad.*\\<\\/tt_keyword_ad\\>/, \"\").replace(/\\<a epub.*\\>\\<\\/a\\>/g, \"\")\n }\n}\nresult = getComic(String(res));\nresult.replace(/\\{\\!\\-\\- PGC_VOICE\\:.*\\-\\-\\}/g, \"\")\n</js>"}, "ruleExplore": {"author": "$.author", "bookList": "<js>\nlet replaceCover = (u) => {\n// java.log(u)\nif (u.startsWith(\"https://\")) u = u.substring(8)\nelse u = u.substring(7)\nlet uArr = u.split(\"/\")\nuArr[0] = \"https://p6-novel.byteimg.com/origin\"\nlet uArr2 = []\nuArr.forEach((x) => {\n if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n else uArr2.push(x.split(\"~\")[0])\n\t})\nu = uArr2.join(\"/\")\nreturn u\n\t}\n let list = [];\n let resultData = JSON.parse(result).data;\n // java.log(resultData)\n let data;\n if (resultData != null && resultData.book_shelf_info) {\n data = resultData.book_shelf_info;\n if (data != null) {\n let requestData = { books: [] };\n for (let i in data) {\n requestData[\"books\"].push({\n book_id: data[i][\"book_id\"],\n item_id: \"0\",\n });\n }\n // java.log(JSON.stringify(resultData.book_shelf_info))\n let booksData = java.ajax(\n 'https://fanqienovel.com/api/bookshelf/multidetail,{method:\"post\",body: ' +\n JSON.stringify(requestData) +\n \"}\"\n );\n // java.log(booksData)\n let books = JSON.parse(booksData).data.detail_list;\n for (let i in books) {\n let d = books[i];\n list.push({\n src: d,\n book_name: d.book_name,\n thumb_url: replaceCover(d.thumb_url),\n abstract: d.abstract,\n book_id: d.book_id,\n });\n }\n }\n } else list = JSON.parse(result)[0].content\n JSON.stringify(list)\n</js>$[*]", "bookUrl": "{{source.bookSourceUrl}}/detail?book_id={{$.book_id}}", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", "intro": "$.abstract##\\n", "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完成结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完成结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "lastChapter": "", "name": "$.book_name", "wordCount": "$.word_number"}, "ruleSearch": {"author":"author", "bookList": "<js>\nlet res = JSON.parse(result)\nlet books\n\nif (res.search_tabs) {\n res.search_tabs.forEach((i) => {\ n if (i.tab_type == 3) books = i.data\n })\n} else books = res.data\n\nlet results = []\n\nbooks.forEach(w => {\n results.push(w.book_data[0])\n})\n\nJSON.stringify(results)\n</js>$[*]", "bookUrl": "{{source. bookSourceUrl}}/detail?book_id={{$.book_id}}", "checkKeyWord": "转生三无猫娘，成神圣我正义摸鱼", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", “简介”：“抽象##\\n”，“种类”： "男生{{$.gender}}女生\n连载{{$.creation_status}}结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}} \n##连载0|1完成结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "name": "book_name", "wordCount": "word_number"}, "ruleToc": {"chapterList": "data.item_data_list[*]", "chapterName": "title", "chapterUrl": "{{source.bookSourceUrl}}/content?item_id={{$.item_id}}", "updateTime": "{{$.volume_name}} | {{$.chapter_word_number}}字 | {{java.timeFormatUTC(java.getString(\"first_pass_time\") * 1000, 'yyyy-MM-dd HH:mm:ss', 12)}}##第一卷：默认\n@js:\nif (result.startsWith(\" |\")) result = result.slice(2)\nresult"}, "searchUrl": "/search?query={{key}}&offset={{ ( page - 1 ) * 10 }}", "weight": 0}, {"bookSourceComment": " 基于 PyFQWeb 鲸落项目开发的 Legado 兼容书源", "bookSourceGroup": "鲸落", "bookSourceName": "番茄小说无匙版1鲸落", "bookSourceType": 0, "bookSourceUrl": "http://yuefanqie.jingluo.love", "bookUrlPattern": "", "customOrder": 0, "enabled": true, "enabledCookieJar": true, "enabledExplore": true, "exploreUrl": "@js:\nb = [\n {\n \"title\": \"我的书架\",\n \"url\" : \"https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=56910&update_version_code=56910\",\n \"style\": {\n \"layout_flexBasisPercent\ ": 1,\n \"layout_flexGrow\": 1\n }\n }\n]\n\nsort0=[];//女频\nsort1=[];//男频\npush=(title, url, type1, type2)=>{\n\t\tjson = {\ n\t\t\t\t标题：标题，\n\t\t\t\turl：url？url:\"\",\n\t\t\t\tstyle：{\n\t\t\t\t\t\tlayout_flexGrow：1 ,\n\t\t\t\t\t\tlayout_flexBasisPercent: type1\n\t\t\t\t\t}\n\t\t\t};\n\t\treturn eval('sort '+type2+'.push(json)');\n\t};\n$$=(性别, 标签, 状态, 排序)=>{\n\t\treturn `https://tsearch.toutiaoapi.com/2/wap/search/extra/novel_operator?tab_name=%25E5%2585%25A8%25E9%2583%25A8%25E5%2588%2586%25E7%25B1%25BB&ala_src=novel_tag&gender=${gender}&is_finish=0&iid=2008145514494631&aid=13&app_name=news_article&version_code=692&versi on_name=6.9.2&abflag=3&partner=novel_tag&offset={{(page-1)*10}}&limit=10&tags=%5B%22${tags}%22%5D&creation_status =${status}&word_num=0&sort=${sort}`\n\t};\n\nstatus=\"ALL\",sort=0;\n[\n\t\t\t\t[\"女\",[[\"无敌\",384],[\"种田\",23],[ \"萌宝\",28],[\"美食\",78],[\"动漫\",57],[\"娱乐圈\",43],[\"直播\",69],[\"女扮男装\",388],[\"二次元\",39],[\"团宠\",94],[\"无cp\",39 2],[\"青梅竹马\",387],[\"病娇\",380],[\"科幻\",8],[\"武侠\",16],[\"年代\",79],[\"重生\",36],[\"灵异\",100],[\"公主\",83],[\"甜宠\",96] ,[\"盗墓\",81],[\"系统\",19],[\"女强\",86],[\"皇后\",84],[\"推理\",61],[\"文化历史\",62],[\"生活\",48],[\"反派\",369],[\"末世\",68],[\ "悬疑\",10],[\"穿越\",37],[\"学霸\",82],[\"走猪吃虎\",93],[\"清穿\",76],[\"书\",382],[\"快\",24],[\"皇叔\",87],[\"空间\",44],[\"携妻\",30],[\"豪门总裁\",29],[\"影视小说\",45],[\"成功励志\",56],[\"职场\",127],[\"民国\",390],[\"都市生活\",2],[\"腹黑\",92],[\"星际\",77],[ \"天才\",90],[\"古代言情\",5],[\"家庭\",125],[\"兽世\",72],[\"校园\",4],[\"诗歌散文\",46],[\"虐文\",95],[\"嫡女\",88],[\"王妃\",85],[\"精灵\",89],[\"幻想言情\",32],[\"现代言情\",3],[\"现言甜宠\",395],[\"现言脑洞\",267],[\"先婚后爱\",265],[\"都市日常\",261],[\"古言脑洞\",253],[\"古言萌宝\",249],[\"古言甜宠\",394],[\"现言日常\",269],[\"现言复仇\",268],[\"玄幻言情\",248],[\"医术\",247],[\"马甲\",266]]],\n\t\t[\"男\",[ [\"玄幻\",7],[\"神豪\",20],[\"鉴宝\",17],[\"三国\",67],[\"二次元\",39],[\"历史\",12],[\"美食\",78],[\"奶爸\",42],[\"娱乐圈\",43],[\"洪荒\",66],[\"大唐\",73],[\"动漫外卖\",75],[\"末世\",68],[\"都市\",1],[\"宠物\",74],[\"学霸\",82],[\"游戏\",57],[\"科幻\",8],[\"体育\",15 ],[\"直播\",69],[\"年代\",79],[\"文化历史\",62],[\"诸天万界\",71],[\"海岛\",40],[\"神医\",26],[\"明朝\",126],[\"武侠\",16],[\"灵异\",100 ],[\"星际\",77],[\"穿越\",37],[\"剑道\",80],[\"都市修真\",124],[\"赘夫\",25],[\"盗墓\",81],[\"推理\",61],[\"无限流\",70],[\"种田\",23],[\"战争\",97],[\"天才\",90],[\"职场\",127],[\"悬疑\",10],[\"成功励志\",56] ,[\"重生\",36],[\"系统\",19],[\"空间\",44],[\"腹黑\",92],[\"诗歌散文\",46],[\"家庭\",125],[ \"影视小说\",45],[\"生活\",48],[\"都市生活\",2],[\"僵尸猪吃虎\",93],[\"大秦\",377],[\"无敌\",384], [\"漫威\",374],[\"火影\ ",368],[\"西游\",373],[\"龙珠\",376],[\"聊天群\",381],[\"海贼\",370],[\"奥特同人\",367],[\"特种兵\",375],[\"反派\",369],[\"校花\",385],[\"女帝\",378],[\"单女主\",389], [\"神奇宝贝\",371],[ \"九叔\",383],[\"求生\",379],[\"无女主\",391],[\"武魂\",386],[\"网游\", 372],[\"战神\",27],[\ "都市脑洞\",262],[\"都市种田\",263],[\"都市日常\",261],[\"历史脑洞\",272],[\"幻玄脑洞\",257],[\"奇幻仙侠侠\",259],[\"都市青春\",396],[\"传统玄幻\",258],[\"历史古代\",273]]]\n\t].map(( [标题、列表],性别)=>{\n\t\tpush('༺ˇ»`ʚ'+title+'生频道ɞ´«ˇ༻',null,1,性别);\n\t\tlist.map([标题,标签]=>{\n\t\t\t\tpush('༺ '+title+' ༻',(性别、标签、状态、排序), 1,性别);\n\t\t\t\t[\"推荐\",\"评分\",\"热门\"].map((标题,排序)=>{\n\t\ t\t\t\t\t[ [\"[\"+标题+\"]\",\"ALL\"],[\"完结\",\"完成\"],[\"连载\ “，\“加载中\”] ].map([title,status]=>{\n\t\t\t\t\t\t\t\treturn push(title, $$(性别, 标签, 状态, 排序), 0.25,性别) ;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t });\nJSON.stringify(\n\tb.concat(sort1).concat(sort0)\n);", "jsLib": "let replaceCover = (u) => {\n if (u.startsWith( \"https://\")) u = u.substring(8)\n else u = u.substring(7)\n let uArr = u.split(\"/\")\n uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n 让uArr2 = []\n uArr.forEach((x) => {\n 如果 (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x) \n else uArr2.push(x.split(\"~\")[0])\n })\nu = uArr2.join(\"/\")\n return u\n}", "lastUpdateTime" ：1731919611123，“loginUrl”：“https://fanqienovel.com”，“respondTime”：180000，“ruleBookInfo”：{“author”：“author”，“coverUrl”：“@js：replaceCover（java.getString（ \"thumb_url\"))", "init": "$.data", "intro": "  \n📕 来源名：{{$.original_book_name}}\n📖 别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🏷️ 标签：{{$.tags}}\n👤主角：{{$.roles##\\[|\\\"|\\]}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​ \"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n@js:result.replace(/.+：(人在读)?\\n/g,\"\")", "kind": "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完成结\n{{$.score}}分\n{{java.timeFormatUTC(java. getString(\"最后一章更新时间\") *1000,'yyyy-MM-dd',8)}}\n##连载0|1女生完结|男生0|1\n@js:result\n.replace(\"男生2女生\",\ "出版\")\n.replace(\"连载4完成结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}", "name": "book_name", "tocUrl": "{{source.bookSourceUrl}}/catalog?book_id={{ $.book_id}}", "wordCount": "word_number"}, "ruleContent": {"content": "<js>\nlet res = JSON.parse(result).data.content\nfunction getComic(result) { \n 让 mat = result.match(/<article>([\\s\\S]*?)<\\/article>/);\n 尝试 {\n 让 cnt = JSON.parse(\n mat \n ? mat[1].replace(/\\&/g, '\"').replace(/\\;/g, \"\").replace(/\\#34/g, \" \”）\n : 结果\n );\n 返回(mat ? cnt.skeleton.data : cnt.picInfos)\n .map((i) => {\n 让路径 = mat\n ? cnt.materials[i.element_name].data.web_uri\n :\" novel-pic/\" + i.md5;\n return `<img src=\"https://p3-novel.byteimg.com/origin/${path}\">`;\n })\n .join(\"<br>\");\n } catch (e) { // 不是漫画内容\n mat = result.match(/<body>([\\s\\S]*?)< \\/body>/)\n // java.log(result)\n 返回 (mat？ mat[1] : result).toString().replace(/\\<\\!DOCTYPE html.*/g, \"\").replace(/\\<tt_keyword_ad.*\\<\\/tt_keyword_ad \\>/, \"\").replace(/\\<a epub.*\\>\\<\\/a\\>/g, \"\")\n }\n}\n结果= getComic(String(res));\nresult.replace(/\\{\\!\\-\\- PGC_VOICE\\:.*\\-\\-\\}/g, \"\") \n</js>"}, "ruleExplore": {"author": "$.author", "bookList": "<js>\nlet replaceCover = (u) => {\n// java.log( u)\nif （u.startsWith（\"https://\"））u = u.substring（8）\nelse u = u.substring（7）\nlet uArr = u.split（\"/\"）\nuArr[ 0] = \"https://p6-novel.byteimg.com/origin\"\nlet uArr2 = []\nuArr.forEach((x) => {\n if (!x.includes(\"?\ ") && !x.includes(\"~\")) uArr2.push(x)\n else uArr2.push(x.split(\"~\")[0])\n\t})\nu = uArr2.join(\"/\")\n返回 u\n\t}\n let list = [];\n let resultData = JSON.parse(result).data;\n // java.log(resultData)\n let data;\n if (resultData != null && resultData.book_shelf_info) {\n data = resultData.book_shelf_info;\n if (data != null) {\n let requestData = { books : [] };\n for (let i in data) {\n requestData[\"books\"].push({\n book_id: data[i][\"book_id\"],\n item_id：\"0\",\n });\n }\n // java.log(JSON.stringify(resultData.book_shelf_info))\n let booksData = java.ajax(\n 'https://fanqienovel.com/api/bookshelf/multidetail,{method：\"post\",body: ' +\n JSON.stringify(requestData) +\n \"}\"\n );\n // java.log(booksData)\n let books = JSON.parse(booksData).data.detail_list;\n for (let i in books) {\n let d = books[i];\n list.push({\n src: d,\n book_name: d.book_name,\n thumb_url: replaceCover(d.thumb_url),\n abstract: d.abstract,\n book_id: d.book_id,\n });\n }\n }\n } else list = JSON.parse(result)[0].content\n JSON.stringify(list)\n</js>$[*]", "bookUrl": "{{source.bookSourceUrl}}/detail?book_id={{$.book_id}}", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", "intro": "$.abstract##\\n", "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完成结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完成结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "lastChapter": "", "name": "$.book_name", "wordCount": "$.word_number"}, "ruleSearch": {"author": "author", "bookList": "<js>\nlet res = JSON.parse(result)\nlet books\n\nif (res.search_tabs) {\n res.search_tabs.forEach((i) => {\n if (i.tab_type == 3) books = i.data\n })\n} else books = res.data\n\nlet results = []\n\nbooks.forEach(w => {\n results.push(w.book_data[0])\n})\n\nJSON.stringify(results)\n</js>$[*]", "bookUrl": "{{source.bookSourceUrl}}/detail?book_id={{$.book_id}}", "checkKeyWord": "转生三无猫娘，成智力我变形摸鱼", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", "intro": "abstract##\\n", "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完成结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完成结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "name": "book_name", "wordCount": "word_number"}, "ruleToc": {"chapterList": "data.item_data_list[*]", "chapterName": "title", "chapterUrl": "{{source.bookSourceUrl}}/content?item_id={{$.item_id}}", "updateTime": "{{$.volume_name}} | {{$.chapter_word_number}}字 | {{java.timeFormatUTC(java.getString(\"first_pass_time\") * 1000, 'yyyy-MM-dd HH:mm:ss', 12)}}##第一卷：默认\n@js:\nif (结果.startsWith(\" |\")) result = result.slice(2)\nresult"}, "searchUrl": "/search?query={{key}}&offset={{ ( 页 - 1 ) * 10 }} ", "weight": 0}, {"bookSourceComment": "基于 PyFQWeb 鲸落项目开发的 Legado 兼容书源", "bookSourceGroup": "鲸落", "bookSourceName": "番茄小说无匙版2鲸落", "bookSourceType": 0, "bookSourceUrl": "http://apifanqie.jingluo.love", "bookUrlPattern": "", "customOrder": 0 , "enabled": true, "enabledCookieJar": true, "enabledExplore": true, "exploreUrl": "@js:\nb = [\n {\n \"title\": \"我的书架\",\n \"url\": \"https://fanqienovel.com/reading/bookapi/bookshelf/info/v:version/?aid=1967&iid=0&version_code=56910&update_version_code=56910\",\n \"style\": {\n \"layout_flexBasisPercent\ ": 1,\n \"layout_flexGrow\": 1\n }\n }\n]\n\nsort0=[];//女频\nsort1=[];//男频\npush=(title, url, type1, type2)=>{\n\t\tjson = {\n\t\t\t\ttitle: 标题,\n\t\t\t\turl: url?url:\"\", \n\t\t\t\t样式：{\n\t\t\t\t\t\tlayout_flexGrow： 1，\n\t\t\t\t\t\tlayout_flexBasisPercent：type1\n\t\t\t\t\t}\n\t\t\t};\n\t\treturn eval(' sort'+type2+'.push(json)');\n\t};\n$$=(性别, 标签, 状态, 排序)=>{\n\t\t返回`https://tsearch.toutiaoapi.com/2/wap/search/extra/novel_operator?tab_name=%25E5%2585%25A8%25E9%2583%25A8%25E5%2588%2586%25E7%25B 1%25BB&ala_src=novel_tag&gender=${gender}&is_finish=0&iid=2008145514494631&aid=13&app_name=news_article&version_code=692&version_n ame=6.9.2&abflag=3&partner=novel_tag&offset={{(page-1)*10}}&limit=10&tags=%5B%22${tags}%22%5D&creation_status=${status}&word_num= 0&sort=${sort}`\n\t};\n\nstatus=\"ALL\",sort=0;\n[\n\t\t\t\t[\"女\",[[ \"无敌\",384],[\"种田\",23],[\"萌宝\",28],[\"美食\",78],[\"游戏动漫\",57] ,[\"娱乐圈\",43],[\"直播\",69],[\"女扮男装\",388],[\"二次元\",39],[\"团宠\",94 ],[\"无cp\",392],[\"青梅竹马\",387],[\"病娇\",380],[\"科幻\",8],[\"武侠\" ,16 ],[\"年代\",79],[\"重生\",36],[\"灵异\",100],[\"公主\",83],[\"甜宠\", 96]，[\ "盗墓\",81],[\"系统\",19],[\"女强\",86],[\"皇后\",84],[\"推理\",61],[ \"文化史\",62],[\"生活\",48],[\"反派\",369],[\"末世\",68],[\"悬疑\",10],[\"穿越\",3 7],[\"学霸\",82],[\"行走猪吃虎\",93],[\"清穿\",76],[\"穿书\",382],[ \"快穿\",24] ,[\"皇叔\",87],[\"空间\",44],[\"宠妻\",30],[\"豪门总裁\",29],[\"影视小说\ “，45]， [\"成功励志\",56],[\"职场\",127],[\"国民\",390],[\"都市生活\",2],[\"腹黑\", 92]，[\"星际\",77],[\"天才\",90],[\"古代言情\",5],[\"家庭\",125],[\"兽世\",72 ],[\"校园\",4],[\"诗歌散文\",46],[\"虐文\",95],[\"嫡女\",88],[\"王妃\",85],[\"精灵\",89],[\"幻想言情\",32], [\"现代言情\",3],[\"现言甜宠\",395],[\"现言脑洞\",267],[\"先婚后爱\",265],[\"都市日常\",261],[\"古言脑洞\",253],[\"古言萌宝\",249],[\"古言甜宠\",394],[\"现言日常\",269],[\"现言复仇\",268],[\"玄幻言情\",248],[\"医术\",247],[\"马甲\",266 ]]],\n\t\t[\"男\",[[\"玄幻\ ",7],[\"神豪\",20],[\"鉴宝\",17],[\"三国\",67],[\"二次元\",39],[\ "历史\",12],[\"美食\",78],[\"奶爸\",42], [\"娱乐圈\",43],[\"洪荒\",66],[\"大唐\",73],[\"外卖\",75],[\"末世\",68 ],[\"都市\",1],[\"宠物\",74],[\"学霸\ ",82],[\"游戏动漫\",57],[\"科幻\",8],[\"体育\",15],[\"直播\",69],[\"年代\",79],[\"文化历史\",62],[\"诸天万界\" ,71],[\"海岛\",40],[\"神医\",26],[\"明朝\",126],[\"武侠\",16],[\"灵异\ ",100],[\"星际\",77],[\"穿越\",37] ,[\"剑道\",80],[\"都市修真\",124],[\"赘婿\",25],[\"盗墓\",81],[\"推理\", 61],[\"无限流\",70],[\"种田\",23],[ \"战争\",97],[\"天才\",90],[\"职场\",127],[\"悬疑\",10],[\"励志成功\",56], [\"重生\",36],[\"系统\",19],[\"空间\",44],[\"腹黑\",92],[\"诗歌散文\",46],[\"家庭\",125],[\"影视小说\",45], [\"生活\",48],[\"都市生活\",2],[\"静止猪吃虎\",93],[\"大秦\",377],[\"无敌\",384],[\"漫威\",374],[\"火影\",368], [\"西游\",373],[\"龙珠\",376],[\ "聊天群\",381],[\"海贼\",370],[\"奥特同人\",367],[\"特种兵\",375],[\"反派\",369 ],[\"校花\",385],[\"女帝\",37 8],[\"单女主\",389],[\"神奇宝贝\",371],[\"九叔\",383],[\"求生\",379],[\"无女主\",391],[\"武魂\",386],[\"网游\",372],[\"战神\",27],[\"都市脑洞\",262],[\"都市种田\",263],[\"都市日常\",261], [\"历史脑洞\",272],[\玄"幻脑洞\", 257],[\"奇幻仙侠\",259],[\"都市青春\",396],[\"传统玄幻\",258],[\"历史古代\",273]]]\ n\t].map(([标题,列表],性别)=>{\n\t\tpush('༺ˇ»`ʚ'+title+'生频道ɞ´«ˇ༻',null,1,性别);\n\t\tlist.map([标题,标签]=>{\n\t\t\t\tpush('༺ '+title+' ༻',(性别、标签、状态、排序), 1,性别);\n\t\t\t\t[\"推荐\",\"评分\",\"热门\"].map((标题,排序)=>{\n\t\ t\t\t\t\t[ [\"[\"+标题+\"]\",\"ALL\"],[\"完结\",\"完成\"],[\"连载\ “，\“加载中\”] ].地图([标题,status]=>{\n\t\t\t\t\t\t\t\t\treturn push(title, $$(gender, tags, status, sort), 0.25,gender);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t});\nJSON.stringify(\n\tb.concat(sort1).concat(sort0)\n);", "jsLib": "let replaceCover = (u) => {\n if (u.startsWith(\"https://\")) u = u.substring(8)\n else u = u.substring(7)\n let uArr = u.split(\"/\")\n uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n let uArr2 = []\n uArr.forEach((x) => {\n if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n else uArr2.push(x.split(\"~\")[0])\n })\nu = uArr2.join(\"/\")\n return u\n}", "lastUpdateTime": 1731920276970, "loginUrl": "https://fanqienovel.com", "respondTime": 180000, "ruleBookInfo": {"author": "author", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", "init": "$.data", "intro": "  \n📕 来源名：{{$.original_book_name}}\n📖 别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🏷️ 标签：{{$.tags}}\n👤主角：{{$.roles##\\[|\\\"|\\]}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​\"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n@js:result.replace(/.+：(人在读)?\\n/g,\"\")", "kind": "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完成结\n{{$.score}}分\n{{java.timeFormatUTC(java.getString(\"last_chapter_update_time\") *1000,'yyyy-MM-dd',8)}}\n##连载0|1完结|男生0|1女生\n@js:结果\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完成结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}", "name": "book_name", “tocUrl”：“{{source.bookSourceUrl}}/catalog?book_id={{$.book_id}}”，“wordCount”：“word_number”}，“ruleContent”：{“content”：“<js>\nlet res = JSON.parse(result).data.content\nfunction getComic(result) {\n let mat = result.match(/<article>([\\s\\S]*?)<\\/article>/);\n try {\n let cnt = JSON.parse(\n mat\n ? mat[1].replace(/\\&/g, '\"').replace(/\\;/g, \"\").replace(/\\#34/g, \"\")\n : result\n );\n return (mat ? cnt.skeleton.data : cnt.picInfos)\n .map((i) => {\n let path = mat\n ? cnt.materials[i.element_name].data.web_uri\n : \"novel-pic/\" + i.md5;\n return `<img src=\"https://p3-novel.byteimg.com/origin/${path}\">`;\n })\n .join(\"<br>\");\n } catch (e) { // 不是漫画内容\n mat = result.match(/<body>([\\s\\S]*?)<\\/body>/)\n // java.log(result)\n return (mat ? mat[1] : result).toString().replace(/\\<\\!DOCTYPE html.*/g, \"\").replace(/\\<tt_keyword_ad.*\\<\\/tt_keyword_ad\\>/, \"\").replace(/\\<a epub.*\\>\\<\\/a\\>/g, \"\")\n }\n}\nresult = getComic(String(res));\nresult.replace(/\\{\\!\\-\\- PGC_VOICE\\:.*\\-\\-\\}/g, \"\")\n</js>"}, "ruleExplore": {"author": "$.author", "bookList": "<js>\nlet replaceCover = (u) => {\n// java.log(u)\nif (u.startsWith(\"https://\")) u = u.substring(8)\nelse u = u.substring(7)\nlet uArr = u.split(\"/\")\nuArr[0] = \"https://p6-novel.byteimg.com/origin\"\nlet uArr2 = []\nuArr.forEach((x) => {\n if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n else uArr2.push(x.split(\"~\")[0])\n\t})\nu = uArr2.join(\"/\")\nreturn u\n\t}\n let list = [];\n let resultData = JSON.parse(result).data;\n // java.log(resultData)\n let data;\n if (resultData != null && resultData.book_shelf_info) {\n data = resultData.book_shelf_info;\n if (data != null) {\n let requestData = { books: [] };\n for (let i in data) {\n requestData[\"books\"].push({\n book_id: data[i][\"book_id\"],\n item_id: \"0\",\n });\n }\n // java.log(JSON.stringify(resultData.book_shelf_info))\n let booksData = java.ajax(\n 'https://fanqienovel.com/api/bookshelf/multidetail,{method:\"post\",body: ' +\n JSON.stringify(requestData) +\n \"}\"\n );\n // java.log(booksData)\n let books = JSON.parse(booksData).data.detail_list;\n for (let i in books) {\n let d = books[i];\n list.push({\n src: d,\n book_name: d.book_name,\n thumb_url: replaceCover(d.thumb_url),\n abstract: d.abstract,\n book_id: d.book_id,\n });\n }\n }\n } else list = JSON.parse(result)[0].content\n JSON.stringify(list)\n</js>$[*]", "bookUrl": "{{source.bookSourceUrl}}/detail?book_id={{$.book_id}}", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", "intro": "$.abstract##\\n", "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}完结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}}\n##连载0|1完成结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完成结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "lastChapter": "", "name": "$.book_name", "wordCount": "$.word_number"}, "ruleSearch": {"author":"author", "bookList": "<js>\nlet res = JSON.parse(result)\nlet books\n\nif (res.search_tabs) {\n res.search_tabs.forEach((i) => {\ n if (i.tab_type == 3) books = i.data\n })\n} else books = res.data\n\nlet results = []\n\nbooks.forEach(w => {\n results.push(w.book_data[0])\n})\n\nJSON.stringify(results)\n</js>$[*]", "bookUrl": "{{source. bookSourceUrl}}/detail?book_id={{$.book_id}}", "checkKeyWord": "转生三无猫娘，成神圣我正义摸鱼", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", “简介”：“抽象##\\n”，“种类”： "男生{{$.gender}}女生\n连载{{$.creation_status}}结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}} \n##连载0|1完成结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "name": "book_name", "wordCount": "word_number"}, "ruleToc": {"chapterList": "data.item_data_list[*]", "chapterName": "title", "chapterUrl": "{{source.bookSourceUrl}}/content?item_id={{$.item_id}}", "updateTime": "{{$.volume_name}} | {{$.chapter_word_number}}字 | {{java.timeFormatUTC(java.getString(\"first_pass_time\") * 1000, 'yyyy-MM-dd HH:mm:ss', 12)}}##第一卷：默认\n@js:\nif (result.startsWith(\" |\")) result = result.slice(2)\nresult"}, "searchUrl": "/search?query={{key}}&offset={{ ( page - 1 ) * 10 }}", "weight": 0}, {"bookSourceComment": "// 错误：无法从 /192.168.124.5（端口 57524）连接到 novel.cloudepays.cn/103.229.124.4（端口 80） 15000ms\n\n支持番茄小说，QQ免费小说，熊猫小说，得间小说，七猫小说，起点69小说\n更新说明：\n登录页手动新增切换书籍来源选项按钮\n20241126修复bug\n20241129更新秘钥填写方式", "bookSourceGroup": "晴天", "bookSourceName": "晴天小说<晴天>", "bookSourceType": 0, “bookSourceUrl”：“http://novel.cloudepays.cn”，“bookUrlPattern”：“”，“customOrder”：0，“enabled”：true，“enabledCookieJar”：true，“enabledExplore”：true，“exploreUrl” : "<js>\nlet data = {\n \"男\": {\n \"玄幻\": 7,\n \"都市\": 1,\n \"洪荒\": 66,\n \"无敌\": 384,\n 《末世》: 68,\n《诸天万界》: 71,\n《科幻》: 8,\n《星际》: 77,\n《重生》: 36 ,\n《系统》: 19,\n《神豪》: 20,\n《鉴宝》: 17,\n《三国》: 67,\n \《二次元》: 39,\n《历史》: 12,\n《美食》: 78,\n《奶爸》: 42,\n《娱乐圈》: 43 ,\n\n\"大唐\": 73,\n《外卖》: 75,\n《宠物》: 74,\n《学霸》: 82,\n《游戏动漫》: 57,\n《体育》: 15,\n\n\"直播\": 69,\n\"年代\": 79,\n\n\"文化史\": 62,\n\n\"海岛\": 40,\n \《神医》:26,\n《明朝》:126,\n《武侠》:16,\n《灵异》:100,\n《穿越》:37,\ 《剑道》: 80,\n《都市修真》: 124,\n《赘婿》: 25,\n《盗墓》: 81、\n\"推理\"： 61、\n\"无限流\": 70、\n\"种田\": 23、\n\"战争\": 97、\n\"天才\": 90、\n\"职场\" : 127,\n\"悬疑\": 10,\n\"成功励志\": 56,\n\"空间\": 44,\n\"腹黑\": 92、《诗歌散文》: 46、《家庭》: 125、《影视小说》: 45、《生活》: 48、《都市生活》 \": 2,\n \"旋转猪吃虎\": 93,\n \"大秦\": 377,\n \"漫威\": 374,\n \"火影\": 368,\n 《西游》: 373,\n《龙珠》: 376,\n《聊天群》: 381,\n《海贼》: 370,\n《奥特同人》: 367,\n \"特种兵\": 375,\n \"反派\": 369,\n \"校花\": 385,\n \"女帝\": 378,\n \"单女主\": 389,\n \"神奇宝贝\": 371,\n \"九叔\": 383,\n \"求生\": 379、\n《无女主》：391、\n《武魂》：386、\n《网游》：372、\n \"战神\": 27,\n \《都市脑洞》: 262,\n \n \《都市种田》: 263,\n \《都市日常》: 261,\n \《历史脑洞》: 272,\n \《玄幻脑》洞》：257、《奇幻仙侠》：259、《都市青春》：396、《传统玄幻》： 258、\n《历史古代》: 273\n}、\n《女》: {\n《幻想言情》: 32、\n《现代言情》: 3、\n\ 《现言甜宠》: 395,《现言脑洞》: 267,《先婚后爱》: 265,《都市日常》: 261、\n\"古言脑洞\"： 253、《古言萌宝》: 249、《古言甜宠》: 394、《现言日常》: 269、《现言复仇》: 268、\n《玄幻言情》: 248、\n《医术》: 247、\n《无敌》: 384、\n 《种田》: 23,\n《萌宝》: 28,\n《美食》: 78,\n《游戏动漫》: 57,\n《娱乐圈》: 43 ,\n\n\"直播\": 69,\n\n\"女扮男装\": 388,\n\n\"二次元\": 39,\n\n\"团宠\": 94,\n \"无cp\": 392,\n 《青梅竹马》: 387,\n《病娇》: 380,\n《科幻》: 8,\n《武侠》: 16,\n\"年代\": 79,\n\n\"重生\": 36,\n\n\"灵异\": 100,\n\n\"公主\": 83,\n\n\"甜宠\": 96 ,\n\"盗墓\": 81,\n\"系统\": 19,\n\"女强\": 86,\n\"皇后\": 84,\n \《推理》: 61,\n《文化史》: 62,\n《生活》: 48,\n《反派》: 369,\n《末世》: 68,\ \n\"悬疑\": 10,\n\n\"穿越\": 37,\n\n\"学霸\": 82,\n\n\n\n\n\n\n“行走猪吃虎”: 93,\n 《清穿》： 76、\n\"穿书\": 382、\n\"快穿\": 24、\n\"皇叔\": 87、\n\"空间\": 44、\n\"宠妻\n: 30,\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n、 \《职场》: 127,\n \《国民》: 390,\n \《都市生活》: 2,\n \《腹黑》: 92,\n \《星际》: 77, \n\n\"天才\": 90,\n\n\"古代言情\": 5,\n\n\"家庭\": 125,\n\n\"兽世\": 72,\n \" 校园\": 4,\n \《诗歌散文》: 46,\n《虐文》: 95,\n《嫡女》: 88,\n《王妃》: 85,\n《精灵》: 89 ,\n \"马甲\": 266\n }\n};\n\n\n\nconst groupDatas = [];\n\nfunction groupQuery() {\n const url = \"{{source.bookSourceUrl}}/group_name?cookie={{get_key(String(cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')))}}\" ;\n const res = java.ajax(url);\n const data = JSON.parse(res).data;\n \n data.forEach(group => {\n let key;\n for（组中的键）{\n groupDatas.push({\n \"title\": key,\n \"url\": \"{{source.bookSourceUrl}}/bookshelf2?page={{page}}&book_ids=\" + group[key ].join(\",\"),\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n });\n } \n });\n\n if (groupDatas.length % 2 !== 0) {\n groupDatas.push({\n \"title\": \"--\",\n \"url\ ":\"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n });\n }\n}\n\n//用户信息\nconst userUrl = '{{source.bookSourceUrl}}/fquser?sessionid={{String(cookie.getKey(\"fanqienovel.com\", \"sessionid\"))}}';\nconst userRes = java.ajax(userUrl);\nconst userInfo = JSON.parse(userRes).data.name;\n\n// 合并数据\nlet datas1 = [\n {\n \"title\": \"番茄官方书架\",\n \"url\" : \"{{source.bookSourceUrl}}/bookshelf?page={{page}}&cookie={{cookie.getCookie('fanqienovel.com') || java.getCookie('fanqienovel.com')}}\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n }, \n {\n \"title\": \"晴天阅读记录\",\n \"url\": \"{{source.bookSourceUrl}}/bookshelf?page={{page}}&key={{get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)))}}\ ",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.45\n }\n }\n];\n\nconst infoData = [\n {\n \"标题\": `${userInfo}个人中心`,\n \"url\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1 \n }\n }\n];\n\ngroupQuery();\n\nconst datas2 = [{\n \"title\": \"书籍排行榜 ٩( ˃̶͈̀௰˂̶͈́ )\",\n \"url\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1 \n }\n },\n {\n \"标题\": \"推荐排行榜\",\n \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=10',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n },\n {\n \"title\": \"完结榜单\",\n \"url\": '{{source.bookSourceUrl}}/discover?page={{页}}&side_type=11',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n },\n {\n \" title\": \"热搜榜单\",\n \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=12',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n },\n {\n \"title\": \"黑马榜单\",\n \"url\": '{{source.bookSourceUrl}}/discover?page={{页}}&side_type=13',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n },\n {\n \" title\": \"爆更榜单\",\n \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&side_type=15',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n },\n {\n \"title\": \" 巅峰榜单\",\n \"url\": '{{source.bookSourceUrl}}/discover?page={{页面}}&type=0',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n },\n {\n \"title\": \"男频精选\",\n \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=2',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n },\n {\n \"title\": \"女频精选\",\n \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=3',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n },\n {\n \"title\": \"每周推荐\",\n \"url\": '{{source.bookSourceUrl}}/discover?page={{page}}&type=1',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n }];\nconst datas = datas1.concat(infoData, groupDatas, datas2);\n\n\nfunctiongenerateUrl(k, k1, sort, status) {\n return `{{source.bookSourceUrl}}/discover?offset={{(page - 1) * 10}}&limit=10&tags=${data[k][k1]}&status=${status}&sort=${sort}`;\n}\n\nfor (let k in data) {\n datas.push({\n \"title\": \"❦ \" + k + \"生频道 ❧\",\n \"url\": \"\",\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n });\n for (let k1 in data[k]) {\n datas.push({\n \"title\": '༺༴ '+k1+' ༴༻',\n \"url\": '',\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 1\n }\n });\n datas.push({\n \"title\": \"推荐排行\",\n \"url\": generateUrl(k, k1, 0, 'ALL'),\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n });\n \n datas.push({\n \"title\": \"评分排行\",\n \"url\": generateUrl(k, k1, 1, 'ALL'),\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n });\n \n datas.push({\n \"title\": \"热门排行\",\n \"url\":generateUrl(k, k1, 2, 'ALL'),\n \"style\": {\n \"layout_flexGrow\": 1,\n \"layout_flexBasisPercent\": 0.27\n }\n });\n }\n}\n\n\n\nJSON.stringify(datas);\n</js>", "jsLib": "函数 get_key(cookie){\nlet key;\nkey = cookie.split('secretKey=');\nkey = key[key.length-1];\n返回 key\n}", "lastUpdateTime": 1733157725395, "loginUi": "[\n{\n \"name\": \" 请杯咖啡，破解限制 \",\n \"type\": \"button\",\n \"action\ ": \"vip()\"\n },{\n \"名称\": \"设备管理\",\n \"类型\": \"按钮\",\n \"操作\": \"clear()\"\n },\n{\n \"name\": \"获取钥匙\",\n \"type\": \"button\",\n \"action\": \"hqmy()\"\n },\n { \n \"名称\": \"更新书源\",\n \"类型\": \"按钮\",\n \"操作\": \"api()\​​"\n },{ \n \"名称\": \"查看按键\",\n \"type\": \"button\",\n \"action\": \"qtout()\"\n },\n\n {\n \"名称\": \"♥♥♥♥♥♥填写按键♥♥♥♥♥♥\",\n \"类型\": \"按钮\",\n \"操作\":\"qtlogin( )\"\n },\n\n {\n \"名称\": \"番茄登录(同步书架)\",\n \"type\": \"button\",\n \"action\": \"fq_login()\"\n },\n\n {\ n \"name\": \" 退出番茄登录 \",\n \"type\": \"button\",\n \"action\": \"logout()\"\n },{\ n \“名称”： \"搜索番茄\",\n \"类型\": \"按钮\",\n \"操作\": \"set('番茄')\"\n },{\n \"名称\ ": \"搜索七猫\",\n \"类型\": \"按钮\",\n \"操作\": \"set('七猫')\"\n }\n,{ \n \"名称\": \"搜索起点\",\n \"type\": \"button\",\n \"action\": \"set('起点')\"\n },{\n \"name\": \"搜索得间\" ,\n \"类型\": \"按钮\",\n \"动作\": \"set('得间')\"\n },{\n \"名称\": \"搜索QQ\",\n\"输入\": \"按钮\",\n \"动作\": \"set('QQ')\"\n },{\n \"名称\": \"搜索熊猫\",\n \"类型\ ": \"按钮\",\n \"动作\": \"set('熊猫')\"\n },{\n \"名称\": \"搜索全部\",\n \"类型\": \"按钮\",\n \“行动\”： \"set('搜索全部')\"\n }\n,{\n \"name\": \"当前来源\",\n \"type\": \"button\",\n \"action\": \"getmedia()\"\n }\n\n ]", "loginUrl": "function qtlogin() {\ njava.startBrowserAwait(source.bookSourceUrl+'/check_key','登录晴天小说书源');\nlet key = String(cookie.getCookie(source.bookSourceUrl));\nkey = key.split('secretKey=');\nkey = key[key.length-1];\nif (key){\n\tjava.longToast('成功登录，秘钥：'+key);\n\ treturn true\n\t} else {\n\t\tjava.toast('登录失败！！！');\n\t\treturn false\n\t\t}\n}\n\n函数qtout() {\t\n让密钥;\n密钥= get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)))\n;\njava.toast('当前钥匙:'+key);\n\t\t}\ n\t\t\nfunction api() { \tjava.startBrowserAwait(source.bookSourceUrl+'/','首页');\n }\nfunction hqmy() { \tjava.startBrowserAwait(source.bookSourceUrl+'/key','键');\n }\nfunction vip() { \tjava.startBrowserAwait(source.bookSourceUrl+'/coffee',\"喝咖啡\");\ n }\nfunction clear() { \tjava.startBrowserAwait(source.bookSourceUrl+'/clear',\"清空设备\");\n }\n\n函数 fq_login() { \t\n\tvar cookies = cookie.getCookie(\"fanqienovel.com\")\n java.log(cookies)\n if (cookies && cookies != \"\") {\n java.toast( \"请不要重复登录，请先退出登录！\")\n return false\n }\n try {\n java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n } catch (e) {\n java.toast(e)\n }\n 尝试 {\n cookie.removeCookie(\"snssdk.com\")\n } catch (e) {}\n var cookies = cookie.getCookie(\"fanqienovel.com\")\n if (!cookies || cookies == \"\") {\n java.toast(\"登录失败！\")\n return false\n }\n java.toast(\"登录成功！\")\n return true\n }\n\n\n//退出登录\nfunction logout() {\n cookie.removeCookie(\"fanqienovel.com\");\n cookie.removeCookie(\"snssdk.com\");\n java.toast(\"退出登录成功\");\n}\n\nfunction set(media) {\n\tif (media==='搜索全部'){\n\t\tsource.setVariable('');\n\t\t\n\t\t} else {\n\t\t\tsource.setVariable(media);\n\t\t\t};\n\t java.toast(\"\\n已切换至：\"+media+'\\n请重新搜索书籍！');\n}\n\n\nfunction getmedia() {\n\t \tlet media = source.getVariable();\n\t \tif(media == '') {\n\t \t\tmedia = '全部来源都搜索';\n\t \t\t}\n\t\ t\t java.toast(\"\\n当前搜索范围是：\"+media);\n\t\t\t \n}", "respondTime": 195028, "ruleBookInfo": {"author": "" , "intro": "$..book_id\n<js>\nlet jj;\nlet ms;\nms = String(source.getVariable())\nif (!ms) {\n ms = '搜索全部'\n }\n\nvar tishi = '\\n\\n当前搜索模式：'+ ms +'\\n\\n如需切换，请点击登陆进行切换\\n切换之后需要重新搜索！\\n'\n\n \nlet res = result.split(\"\\n\")[0]\nlet media = res.split(\"_\")[1] || 'fanqie'\nlet bookid = res.split(\"_\")[0];\nlet info;\nif (media == 'fanqie') {\ntry {\n info = JSON.parse(java.ajax(`${source.bookSourceUrl}/ novel_detail?&bookid=${bookid}`));\n } catch (错误) {\n info = {'abstract': \"\"}\n }\n} else {\n info = {'abstract': \"\"}\n }\n\nlet key;\nkey = get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)));\n \nif(!key) {\n jj = '\\n\\n❌️当前用户未填写按键，请先输入按键\\n按键获取，到达书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页'\n }\n else if (!info.abstract) {\n jj = \"\"\n } else {\n jj =tishi + info.abstract\n }\n\n</js>", "kind" : "", "name": "", "tocUrl": ""}, "ruleContent": {"content": "content"}, "ruleExplore": {"author": "author", "bookList": "$.data.data\n@js:\nif (baseUrl.includes('cookie'))\n{\n\tvar cookie = java.getCookie(\"fanqienovel.com\")\n if (!cookie || cookie == \"\") {\n java.toast(\"未登录，请先前往登录！\");\njava.startBrowserAwait(\"https://fanqienovel.com\", \"登录\");\n } \n\t}\n结果", “bookUrl”：“{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}| ==|{{$..thumb_url || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${source.bookSourceUrl}/detail?bookId=${book_id}&book_name=${book_name}&author= ${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>\n", "coverUrl": "thumb_url", "intro": "abstract", "kind": "{{$.category}}\n{{$.score}}\n{{$.status}}\n{{$.source}}\n{{$.tags}}", "lastChapter": "{{$.last_chapter_title}} • {{$.last_update_time}}", "name": "book_name", "wordCount": "word_number"}, "ruleSearch": {"author": "author", "bookList ": "$..book_data[*]", "bookUrl": "{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{ {$..作者 || ''}}|==|{{$..thumb_url || ''}}\n<js>\nlet [book_id, raw_book_name, raw_author, raw_thumb_url] = result.split(\"|==|\");\n\njava.put(\"id\", book_id) ;\n\nlet book_name = java.base64Encode(raw_book_name);\nlet author = java.base64Encode(raw_author);\nlet thumb_url = java.base64Encode(raw_thumb_url);\n\nlet catalogue_url = `${source.bookSourceUrl}/详细信息？bookId=${book_id}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}`;\n\ncatalogue_url\n</js>","checkKeyWord": "我的", "coverUrl": "thumb_url", "intro": "{{$.media}}小说 \n{{$.abstract}}", "kind": "category&&status&&score&&last_chapter_update_time", "lastChapter": "{{$.media}}-{{$..book_id}}\n<js>\n\nfunction lastChapterTitle(media,bookid) {\n \n let url;\n let last;\n if (media == \" 番茄\") {\n \t last=fq_last(bookid);\n return last\n } else if (media == \" 七猫\") {\n \t last=qm_last(bookid);\n return last\n \n } else {\n \treturn null\n \t}\n}\n\n\nfunction fq_last(bookid) {\n\tlet url = `https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=${bookid}`;\n let last =JSON.parse(java.ajax(url)).data[0]; \n return last[\"last_chapter_title\"]+\" · \"+java.timeFormat(last[\"last_chapter_update_time\"]*1000);\n\t\n\t}\n\nfunction qm_last(bookid) {\n\tlet headers={'app-version':'51110','platform':'android','reg':'0','AUTHORIZATION':'','application-id':'com.****.reader','net-env':'1','channel':'unknown','qm-params':''}\n\tsign_key='d3dGiJc651gSQ8w1'\n\nparams={'id':bookid, 'imei_ip':'2937357107','teeny_mode':0}\n\nvar urlEncode = function (param, key, encode) { \n if(param==null) return ''; \n var paramStr = ''; \n var t = typeof (param); \n if (t == 'string' || t == 'number' || t == 'boolean') { \n paramStr += '&' + key + '=' + ((encode==null||encode) ? encodeURIComponent(param) : param); \n } else { \n for (var i in param) { \n var k = key == null ? i : key + (param instanceof Array ? '[' + i + ']' : '.' + i); \n paramStr += urlEncode(param[i], k, encode); \n } \n } \n return paramStr; \n};\nparamSign=String(java.md5Encode(Object.keys(params).sort().reduce((pre,n)=>pre+n+'='+params[n],'')+sign_key));\nheaderSign=String(java.md5Encode(Object.keys(headers).sort().reduce((pre,n)=>pre+n+'='+headers[n],'')+sign_key))\nparams['sign']=paramSign;\nheaders['sign']=headerSign;\nlet url = \"https://api-bc.wtzw.com/api/v4/book/detail?\"+urlEncode(params);\noption = {'headers':headers};\nlet last =JSON.parse(java.ajax(url+','+JSON.stringify(option)))[\"data\"][\"book\"];\nlet last2 = `${last[\"latest_chapter_title\"]} · ${java.timeFormat(last['update_time']*1000)} `\n\treturn last2\n\t}\n//let media = result.split(\"-\")[0];\n//let bookid = result.split(\"-\")[1].split(\"_\")[0];\n//let lasts = lastChapterTitle(media,bookid);\n\n//`${media}: ${lasts}`\n\nnull\n\n</js>", "name": "book_name", "wordCount": "word_number"}, "ruleToc": {"chapterList": "$..chapterListWithVolume[*].*", "chapterName": "title", "chapterUrl": "{{$..itemId}}|==|{{$..book_id || ''}}|==|{{$..book_name || ''}}|==|{{$..author || ''}}|==|{{$..thumb_url || ''}}|==|{{$..media || ''}}\n@js:\n// 设备类型检测\nlet device, devicetype;\ntry {\n devicetype = java.androidId();\n device = 'android';\n} catch (e) {\n devicetype = java.deviceID();\n device = 'ios';\n}\n\n// 数据\nlet [itemId, book_id, book_name,author,thumb_url, media] = result.split(\"|==|\");\n\n//获取密钥并构建URL\nlet key;\nkey = get_key(String(cookie.getCookie(source.bookSourceUrl) || java.getCookie(source.bookSourceUrl)));\n\nif(!key) {\n java.longToast('\\n\\n请先输入钥匙\\n钥匙获取路线，书籍详情页，点击右上角点击登陆，获取后，填写，再次刷新详情页');\n}\n\nlet Catalogue_url = `${source.bookSourceUrl}/reader?item_id=${itemId}&book_id=${book_id}&tone_id=-1&key=${key}&device=${devicetype}&book_name=${book_name}&author=${author}&thumb_url=${thumb_url}&media=${media}`;\n\ncatalogue_url", "updateTime": "firstPassTime"}, "searchUrl": "{{source.bookSourceUrl}}/searchNovel?title={{key}}&media={{source.getVariable();}}", "variableComment": "", "weight": 0}, {"bookSourceComment": "// 错误：预期的 URL 方案为 'http' 或 'https'，但结果为 'com.script.ScriptException'\n\n\n交流群: 971690876\n书源大部分内容取自互联网，感谢各位大佬，正文接口为自建\n/*\n本身免费，建议到官方阅读正版。\n书名搜不到内容用作者名搜索。\n*/\nboy={\"都市\":1、\"玄幻\":7、\"灵异\":100、\"战神\":27、\"神医\":26、\"悬疑\":10、\"悬疑灵异\":751、\"穿越\":37、\"重生\":36 、\"都市脑洞\":262、\"都市修真\":124、\"系统\":19、\"赘腕\":25、\"神豪\":20、\"都市日常\":261、\"种田\":23、\"历史\":12 、《打脸》:522、《都市生活》:2、《古代古代》:273、《西游》:373、《天才》:90、《诸天万界》:71、《鉴宝》:17、《都市种田》:2 63、《推理》:61、《架空》:452、《科幻》:8、《东方玄幻》:511、《武侠》:16、《特种兵》:375、《盗墓》:81、《剑道》:80、\ 《空间\》:44,\《无敌》:384,\《三国》:67,\《外卖》:75,\《奶爸》:42,\《乡村\》:11,\《同人\》:538,\《末世\》:68,\《都市异能\》 :516、\"海岛\":40、\"游戏体育\":746、\"二次元\":39、\"洪荒\":66、\"求生\":379、\"体育\":15、\"大唐\":73、\"明朝\":12 6、《旋转猪吃虎》:93、《历史脑洞》:272、《星际》:77、《校花》:385、《直播》:69、《年代》:79、《家庭》:125、《宠物》:74、\"网游\":372、\"衍生同人\":718、\"娱乐圈\":43、\"开局\":453、\"职场\":127、\"大小姐\":519 、《大秦》：377、《单女主》： 389、《抗战影视战》:504、《聊天群》:381、《美食》:78、《末日求生》:515、《搞笑轻松》:778、《悬疑》脑洞":539,"修仙":517, 《反派》:369、《腹黑》:92、《电竞》:508、《学霸》:82、《影视小说》:45、《都市青春》 :396,\"异世大陆\":512,\"特工\":51 8、《官场》:788、《无限流》:70、《游戏主播》:509、《大佬》:520、《女帝》:378、《灵气复苏》 ”:514,\“神探\”:506,\“武将\” :497、\"火影\":368、\"无女主\":391、\"龙珠\":376、\"宋朝\":501、\"钓鱼\":493、\"皇帝\" :498,\"穿书\":382,\"囤物资\ ":494,\"漫威\":374,\"生活\":48,\"高武世界\":513,\"海贼\":370,\"奥特同人\":367, \“战争”：97，\“神奇宝贝”：371，\“断层\":500,\"惊愕\":322,\"宫廷侯爵\":502,\"九叔\":383,\"综漫\":465,\"文学小说\":47, 《文艺战》：507、《成功励志》：56 、《国运》:496、《双重生》:524、《克苏鲁》:705、《清朝》:503、《四合院》:495、《文化史》 :62};\ngirl={\"现代言情\": 3、《豪门总裁》：29、《古代言情》：5、《宠妻》：30、《甜宠》：96、《穿越》：37、《宫斗》宅斗”: 246、“霸总”: 748、“萌宝”: 28、“王妃”: 85、“重生”: 36、《他》: 484、《幻想言情》: 32、《都市生活》: 2、《腹黑》: 92、《豪门世家》: 473、《种田》 》：23、《豪门爽文》：745、《现言脑洞》：267、《玄幻言情》： 248、《嫡女》：88、《职场婚恋》：750、《医术》： 247、《打脸》: 522、《虐渣》: 457、《空间》: 44、《女强》: 86、《日久生情》: 474、《娱乐》圈\": 43,\"家庭\": 125,\"团宠\": 94,\"今穿古\": 463,\"皇后\": 84、《灵异》: 100、《天才》: 90、《闪婚》: 466、《校园》: 4、《系统》: 19、《公主》: 83、 \"独宠\": 460,\"马甲\": 266,\"虐文\": 95,\"婚恋\": 34、《契约婚姻》：471、《护短》：458、《年代》：79、《悬疑》： 10、《一见钟情》: 477、《悬疑恋爱》: 747、《古言脑洞》: 253、《前世今生》: 523、《青梅竹马》: 387、《大》佬\": 520、\"毒医\": 491、\"快穿\": 24、\"带球跑\": 479、《学霸》: 82、《影视小说》: 45、《冰山》: 468、《病娇》: 380、《精灵》: 89、《大小姐》 》: 519,\"扮猪吃虎\": 93,\"明星\": 486,\"相爱相杀\": 483,\"无敌\": 384、\“乡村”： 11、\“情有独钟”： 456、《推理》: 61、《替身》: 470、《美食》: 78、《强穿强》: 478、《破镜重圆》: 475、《书》: 382、“反派”：369、“将军”：492、\“皇叔\”: 87、\“异世穿越\”: 464、\“医生\”: 487、\“无CP\”: 392、\“二次元\”: 39、\“兽世\” : 72、《民国》: 390、《逃婚》: 480、《双面》: 469、《双面生》: 524、《直播》: 69、《女扮男装》: 388、《搞笑轻松》: 778、《职场》: 127、《盗墓》: 81、《古灵精怪》 \": 459、\"末世\": 68、\"古穿今\": 462、\"暗恋\": 482、“大家奔赴”： 476、“律师”： 488、“隐婚”： 467、《天作之合》: 455、《现言萌宝》: 489、《清穿》: 76、《双洁》: 702、《可盐可甜》: 454 《星际》：77、《作精》：521、《厨娘》：490、《双男主》： 275、《同人》: 538、《悬疑脑洞》: 539、《武侠》: 16、《现言复仇》: 268、《游戏体育》: 746、《科幻》 \": 8、\"衍生同人\": 718、\"囤物资\": 494、\"都市出行\": 261、《群穿》: 461、《电竞》: 508、《游戏主播》: 509、《职场商战》: 485、《双女主》: 704、《文学小说》: 47、《综漫》: 465、《四合院》: 495、《文化》历史\": 62,\"生活\": 48,\"战争\": 97,\"逃荒\": 557、《成功励志》：56、《抗战电视剧》： 504};\nchuban={\"文学小说\":47,\"现代言情\":3,\"现实小说\":400,\"经济管理\":53,\"社会科学\": 50、《诗歌散文》： 46、《文化史》：62、《成功励志》：56、《历史传记》：404、《人文社科》：405、《当代文学》：399、经典国学\":423,\"文学理论\":401,\"个人成长\":410,\"古代言情\":5,\"生活\":48,\"腹黑\":92,\"人际交往\":412,\ 《中国名著》：98、《中国历史》 :402、《宫斗宅斗》:246、《都市》:1、《都市日常》:261、《都市生活》:2、《历史》:12玄幻言情\":248,\"精灵\":89,\ 《家庭》:125,《王妃》:85,《亲子家教》:415,《职场》:127,《职场婚恋》:750,《豪门总裁》:29, 《影视小说》：45、《甜》宠\":96、\"宠妻\":30、\"心理学\":407、\"玄幻\":7、\"悬疑\":10、\"推理\":61、\"文化艺术\":413,\"幻想言情\":32,\"智商思维\":411、\"公主\":83、\"保健养生\":416、\"穿越\":37、\"外国文学\":397、\"人物传记\":409、 \《世界历史》：403，\ 《两性》:274、《武侠》:16、《校园》:4、《外国名著》:99、《美食休闲》:419、《政治军事》:408 《宗教哲学》：406、《风水占》76、《双洁》: 702、《可盐可甜》: 454、《星际》: 77、《作精》: 521、《厨娘》: 490、》双男主》：275、《同人》：538、《悬疑脑洞》：539、《武侠》： 16、《现言复仇》：268、《游戏体育》：746、《科幻》：8、《衍生同人》：718、《囤物资》：494、《都市》日常》: 261,《群穿》: 461,《电竞》: 508,《游戏主播》: 509、《职场商战》：485、《双女主》：704、《文学小说》：47、《综漫》： 465、《四合院》: 495、《文化历史》: 62、《生活》: 48、《战争成功》: 97、《逃荒》: 557、《励志》: 56、《抗战电视剧》： 504};\nchuban={\"文学小说\":47,\"现代言情\":3,\"现实小说\":400,\"经济管理\":53,\"社会科学\": 50、《诗歌散文》： 46、《文化史》：62、《成功励志》：56、《历史传记》：404、《人文社科》：405、《当代文学》：399、经典国学\":423,\"文学理论\":401,\"个人成长\":410,\"古代言情\":5,\"生活\":48,\"腹黑\":92,\"人际交往\":412,\ 《中国名著》：98、《中国历史》 :402、\"宫斗宅斗\":246、\"都市\":1、\"都市日常\":261、\"都市生活\":2、\"历史\":12、\"玄幻言情\":248,\"精灵\":89,\ 《家庭》:125,《王妃》:85,《亲子家教》:415,《职场》:127,《职场婚恋》:750,《豪门总裁》:29, 《影视小说》：45、《甜》宠\":96、\"宠妻\":30、\"心理学\":407、\"玄幻\":7、\"悬疑\":10、\"推理\":61、\"文化艺术\":413,\"幻想言情\":32,\"智商思维\":411、\"公主\":83、\"保健养生\":416、\"穿越\":37、\"外国文学\":397、\"人物传记\":409、 \《世界历史》：403，\ 《两性》:274、《武侠》:16、《校园》:4、《外国名著》:99、《美食休闲》:419、《政治军事》:408 《宗教哲学》：406、《风水占》76、《双洁》: 702、《可盐可甜》: 454、《星际》: 77、《作精》: 521、《厨娘》: 490、》双男主》：275、《同人》：538、《悬疑脑洞》：539、《武侠》： 16、《现言复仇》：268、《游戏体育》：746、《科幻》：8、《衍生同人》：718、《囤物资》：494、《都市》日常》: 261,《群穿》: 461,《电竞》: 508,《游戏主播》: 509、《职场商战》：485、《双女主》：704、《文学小说》：47、《综漫》： 465、《四合院》: 495、《文化历史》: 62、《生活》: 48、《战争成功》: 97、《逃荒》: 557、《励志》: 56、《抗战电视剧》： 504};\nchuban={\"文学小说\":47,\"现代言情\":3,\"现实小说\":400,\"经济管理\":53,\"社会科学\": 50、《诗歌散文》： 46、《文化史》:62、《成功励志》:56、《历史传记》:404、《人文社科》:405、《当代文学》:399经典国学\":423,\"文学理论\":401,\"个人成长\":410,\"古代言情\":5,\"生活\":48,\"腹黑\":92,\"人际交往\":412,\ 《中国名著》：98、《中国历史》 :402、《宫斗宅斗》:246、《都市》:1、《都市日常》:261、《都市生活》:2、《历史》:12玄幻言情\":248,\"精灵\":89,\ 《家庭》:125,《王妃》:85,《亲子家教》:415,《职场》:127,《职场婚恋》:750,《豪门总裁》:29, 《影视小说》：45、《甜》宠\":96、\"宠妻\":30、\"心理学\":407、\"玄幻\":7、\"悬疑\":10、\"推理\":61、\"文化艺术\":413,\"幻想言情\":32,\"智商思维\":411、\"公主\":83、\"保健养生\":416、\"穿越\":37、\"外国文学\":397、\"人物传记\":409、 \《世界历史》：403，\ 《两性》:274、《武侠》:16、《校园》:4、《外国名著》:99、《美食休闲》:419、《政治军事》:408 《宗教哲学》：406、《风水占》《中国历史》:402、《宫斗宅斗》:246、《都市》:1、《都市日常》:261、《都市生活》:2、《历史》 ":12,\"玄幻言情\":248,\"精灵\":89,\"家庭\":125,\"王妃\":85、\"亲子家教\":415、\"职场\":127、\"职场婚恋\":750、\"豪门总裁\":29、\"影视小说\":45、\ 《甜宠》:96,《宠妻》:30,《心理学》:407,《玄幻》:7, 《悬疑》:10、《推理》:61、《文化艺术》:413、《幻想言情》:32、《思维智商》:411、《公主》:83 、\"保健养生\":416、\"穿越\":37、\"外国文学\":397、\"人物《传记》:409、《世界史》:403、《两性》:274、《武侠》:16、《校园》:4、《外国名著》:99美食休闲》：419、《政治军事》：408、《哲学宗教》：406、《风水占》《中国历史》:402、《宫斗宅斗》:246、《都市》:1、《都市日常》:261、《都市生活》:2、《历史》 ":12,\"玄幻言情\":248,\"精灵\":89,\"家庭\":125,\"王妃\":85、\"亲子家教\":415、\"职场\":127、\"职场婚恋\":750、\"豪门总裁\":29、\"影视小说\":45、\ 《甜宠》:96,《宠妻》:30,《心理学》:407,《玄幻》:7, 《悬疑》:10、《推理》:61、《文化艺术》:413、《幻想言情》:32、《思维智商》:411、《公主》:83 、\"保健养生\":416、\"穿越\":37、\"外国文学\":397、\"人物《传记》:409、《世界史》:403、《两性》:274、《武侠》:16、《校园》:4、《外国名著》:99美食休闲》：419、《政治军事》：408、《哲学宗教》：406、《风水占》卜\":421,\"国学\":116,\"科技\":52,\"娱乐圈\":43,\"法律\":142,\"教育\":54,\"成人教育》:722,《古代历史》:273,"种田\":23,\"现言脑洞\":267,\"战争\":97,\"天才\":90,\"灵异\":100,\"家居旅游\":420, \"重生\":36,\"青梅竹马\":387,\"科幻\":8、\"直播\":69、\"悬疑灵异\":751、\"古言脑洞\":253、\"古代文学\":398、\"民国\":390 ,\"盗墓\":81,\"都市脑洞\":262, \"豪门爽文\":745,\"官场\":788,\"霸总\":748,\"年代\":79,\"学霸\":82,\"明朝\" :126,\"时尚美妆\":418};\n函数getUrl(category_n,gender_n,page){\nreturn \"https://novel.snssdk.com/api/novel/channel/homepage/new_category/book_list/v1/?app_version=4.6.0&device_platform=android&aid=1319&app_name=super&parent_enterfrom= novel_channel_category.tab.&channel=ppx_wy_and_gaox_d_5&version_code=460&version_name=4.6.0&word_count=9&genre_type=0&creation_status=9&offset={{(page-1)*100}}&limit=100&category_id=\"+category_n+\"&gender=\"+gender_n;\n \t}\n功能getUrl_(category_n,gender_n,page){\n返回\“https://novel.snssdk.com/api/novel/channel/homepage/new_category/book_list/v1/?app_version=4.6.0&device_platform=android&aid=1319&app_name=super&parent_enterfrom=novel_channel_category.tab。&chan nel=ppx_wy_and_gaox_d_5&version_code=460&version_name=4.6.0&word_count=9&genre_type=0&creation_sta tus=9&offset={{(page-1)*100}}&limit=100&category_id=\"+category_n+\"&genre_type=\"+gender_n;\n\t}", "bookSourceGroup": "", "bookSourceName": "番茄小说", "bookSourceType": 0, "bookSourceUrl": "https://api5-normal-lf.fqnovel.com/8月26日", "bookUrlPattern": "", "concurrentRate": "", "customOrder": 67 , "enabled": true, "enabledCookieJar": false, "enabledExplore": true, "exploreUrl": "@js:\nvar fxlist=[];\nvar no1={\"title\":\"男生\" ,\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}};\nvar no2={\"title\":\"女生\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}};\nvar no3={\"title\":\"出版\",\"url\":\"\",\"style\":{\"layout_flexGrow\":1,\"layout_flexBasisPercent\":1}} ;\n\npush=(title,url,type)=>fxlist.push({\n\t\ttitle: title,\n\t\turl: url,\n\t\tstyle: {\n\t \t\t\tlayout_flexGrow：1，\n\t\t\t\tlayout_flexBasisPercent：类型\n\t\t\t}\n\t});\n\t\neval（String（source.bookSourceComment） );\nfxlist.push(no1);\nfor(i in boy){\npush(i,\"@js:eval(String(source.bookSourceComment));getUrl(boy['\"+i+\"'],1,page)\",0.25);\n\t}\nfxlist.push(no2);\nfor(i in girl){\npush(i,\"@js:eval(String(source.bookSourceComment));getUrl(girl['\"+i+\"'],0,page)\",0.25);\n}\nfxlist.push(no3);\nfor(i in chuban){\npush(i,\"@js:eval(String(source.bookSourceComment));getUrl_(chuban['\"+i+\"'],160,page)\",0.25);\n}\nJSON.stringify(fxlist);", "jsLib": "let replaceCover = (u) => {\n if (u.startsWith(\"https://\")) u = u.substring(8)\n else u = u.substring(7)\n let uArr = u.split(\"/\")\n uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n let uArr2 = []\n uArr.forEach((x) => {\n if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n else uArr2.push(x.split(\"~\")[0])\n })\nu = uArr2.join(\"/\")\n return u\n}", "lastUpdateTime": 1733191330056, "loginUrl": "", "respondTime": 184502, "ruleBookInfo": {"author": "author", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", "init": "$.data[0]", "intro": "   \n📕 来源名：{{$.original_book_name}}\n📖别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🏷️ 分类：{{$.complete_category##/##,}}\n🏷️ 标签：{{$.tags}}\n👤主角：{{$.roles##\\[|\\\"|\\]}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​\"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n@js:result.replace(/🏷️ 分类：\\n/, '');", “种类”： "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完成结\n{{$.score}}分\n{{java.timeFormatUTC(java.getString(\"last_chapter_update_time\") *1000,'yyyy-MM-dd',8)}}\n##连载0|1完结|男生0|1女生\n@js:结果\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完成结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}", "name": "book_name", “tocUrl”：“$.book_id\n@js:\njava.put(\"id\",result);\n\"https://fanqienovel.com/api/reader/directory/detail?bookId=\"+result", “wordCount”：“word_number”}, “ruleContent”：“content”：“$.data.content”}, “ruleExplore”：“author”：“$.author”， “bookList”：“$.data.data”， “bookUrl”：“https://api5-normal-sinfonlineb.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}”， “coverUrl”：“$.thumb_url##(\\d+)-tt##6-novel”， “intro”：“$.摘要##\\s”，“种类”： "{{$.category}},{{$.score}}分\n连载{{$.creation_status}}完成结,{{$.source}}\n@js:result.replace(/连载0完成结/ g,'完成结').replace(/连载1完成结/g,'连载').replace(/连载4完成结/g,'已断更')", "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString('last_chapter_update_time')*1000)}}", "name": "$.book_name", "wordCount": "$.word_number"} , "ruleSearch": {"author": "author", "bookList": "<js>\nlet res = JSON.parse(result)\nlet书籍\n\nif (res.search_tabs) {\n res.search_tabs.forEach((i) => {\n if (i.tab_type == 3) books = i.data\n })\n} else books = res.data\n\nlet results = []\ n\nbooks.forEach(w => {\n results.push(w.book_data[0])\n})\n\nJSON.stringify(results)\n</js>$[*]", "bookUrl ": "https://api5-normal-lf.fqnovel.com/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id={{$.book_id}}", "checkKeyWord": "异兽迷城", "coverUrl": "thumb_url", "intro": "abstract##\\n", "kind": "男生{{$.gender}}女生\n连载{{$.creation_status}}结\n{{$.score}}分\n{{$..text}}\n{{$.sub_info}} \n##连载0|1完成结|男生0|1女生|男生女生[\\s\\S]*\n@js:result\n.replace(\"男生2女生\",\"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完成结\",\"未知\");", "name": "book_name", "wordCount": "word_number"}, "ruleToc": {"chapterList": "@js:function spArr(arr,num){let newArr=[];for(let i=0;i<arr.length;){newArr.push(arr.slice(i,i+=num))}返回 newArr}let res=JSON.parse(result).data;let item_list=spArr(res[ \"allItemIds\"],100);let array=[];for(let i=0;i<item_list.length;i++){let response=java.ajax('https://novel.snssdk.com/ api/novel/book/directory/detail/v1/?item_ids='+item_list[i]);让data=JSON.parse(response).data;data.forEach((x)=>{array.push({name:x.title,url:'https://fqnovel.ceseet.me/content?item_id=' +x.item_id,info:((Number(x.volume_name)==0?\"第一卷：默认\":x.volume_name)+' | '+java.timeFormat(x.first_pass_time*1000)+' | '+x.chapter_word_number+'字')})})}array;", "chapterName": "name", "chapterUrl": "url", "formatJs": "", "isVolume": "", "preUpdateJs ": "", "updateTime": "info"}, "searchUrl": "https://api5-normal-lf.fqnovel.com/reading/bookapi/search/page/v/?query={{key} }&aid=1967&channel=0&os_version=0&device_type=0&device_platform=0&iid=466614321180296&passback={{(page-1)*10}}&version_code=999", "weight": 0}, {"bookSourceComment":"设置变量修改发音人（源变量全局，书籍变量某本书）\n0 - 真人发音（非每本书都支持）\n1 - 发光少女音（默认）\n2 - 清亮青叔音\n4 - 成熟大叔音\n5 - 开朗青年音\n6 - 温柔淑女音\n12 - 清纯少女音\n17 - 较差青叔音\n（不全，欢迎补充）", "bookSourceGroup": "", "bookSourceName": "🍅番茄有声", "bookSourceType": 1, "bookSourceUrl": "https://reading.snssdk.com#listening", "bookUrlPattern": "", "coverDecodeJs": "" 、“customOrder”：76、“enabled”：true、“enabledCookieJar”：false、“enabledExplore”：true、 “exploreUrl”：“”，“标题”：“”，“jsLib”：“getHost =（a，b，c，d）=> [\n [\"https://\"][0],\n [\n \"阅读\",\n \"api\",\n \"api3\",\n \"api5\ ",\n \"小说\",\n \"\",\n ][(a == 4 ? 5 : b) || 0],\n [\n \"\",\n \" -normal\",\n ][c || 0],\n [\n \"\",\n \"-hl\",\n \"-lf\",\n \"-lq\ ",\n \"-sinfonlinea\",\n \"-sinfonlineb\",\n \"-sinfonlinec\",\n ][d || 0],\n [\".\", \" \"][a == 4 ? 1 : 0],\n [\n \"snssdk\",\n \"fqnovel\",\n \"fanqiesdk\",\n \"toutiaoapi\",\n \"fanqienovel\",\n ][a || 0],\n [\".com\"][0],\n].join(\"\");\njavaImport = new JavaImporter()\njavaImport.importPackage(\n Packages.okhttp3,\n Packages.cn.hutool. core.util,\n Packages.cn.hutool.core.codec,\n Packages.cn.hutool.crypto.digest\n)\nwith(javaImport) {\n //手机型号\n prop = SystemPropsUtil.getProps( );\n device = String(prop).split(\" \")[6];\n\n //POST请求\n function post(url, body, map) {\n let json = MediaType.parse(\"application/json\");\n request = new Request.Builder()\n .url(url)\n .post(RequestBody.create(body, json));\n if (map ) {\n request.addHeader(\"Content-Encoding\", \"gzip\");\n for (let n in map) {\n request.addHeader(n, map[n]);\n } \n }\n 让客户端 = new OkHttpClient();\n 让响应 = 客户端.newCall(request.build()).execute();\n 返回 JSON.parse(response.body().string()) ;\n }\n\n 函数 okhttpGet(url, map) {\n const { java } = this\n request = new Request.Builder()\n .url(url)\n .get();\n如果（地图）{\ n request.addHeader（\“Content-Encoding \”， \"gzip\");\n for (let n in map) {\n request.addHeader(n, map[n]);\n }\n }\n java.log(\"okhttp:\" + url + \", 标头=\" + JSON。stringify(map))\n let client = new OkHttpClient();\n let response = client.newCall(request.build()).execute();\n return JSON.parse(response.body().string());\n }\n\n\n //gzip压缩\n gzip = (data) => ZipUtil.gzip(data, \"\");\n\n //gzip解压\n ungz = (data) => ZipUtil.unGzip(data, \"\");\n\n //Base64编码\n b64En = (b64) => Base64.encode(b64);\n\n //Base64解码\n b64De = (b64) => Base64.decode(b64);\n\n //ttEncrypt\n function TT(data) {\n const {\n java\n } = this;\n\n //SHA512加密\n sha = (arr) => DigestUtil.sha512(arr);\n value = RandomUtil.randomBytes(32);\n arr = b64De(\"TdTC5rgxYgkOUrPHpnM7pByyRiuCmrWKGWs521cXdST0m69/COjWjSanLjfBqVovHwWlGJKu8pSXMrYqOKrdWA==\")\n arr = sha(sha(value).concat(arr));\n key = arr.slice(0, 16);\n iv = arr.slice(16, 32);\n\n data = gzip(data);\n data = sha(data).concat(data);\n data = java.createSymmetricCrypto(\"AES/CBC/PKCS5Padding\", key, iv).encrypt(data);\n return [116, 99, 5, 16, 0, 0].concat(value, data);\n }\n\n //X-Gorgon参数\n function xGorgon(path, params, data, ck) {\n const { java, source } = this;\n params = [\n params,\n \"aid=1967\",\n \"channel=0\",\n \"os_version=0\",\n \"app_name=novelapp\",\n \"version_code=99999\",\n \"device_platform=android\",\n source.getLoginHeader() || \"\",\n ].join(\"&\").split(\"&\").sort().join(\"&\").replace(/^&+/,\"\");\n if (!data) {\n path = \"/reading/bookapi/\" + path + \"/v/?\";\n }\n let url = getHost() + path + params;\n\n\n //md5加密\n md5 = (str) => DigestUtil.md5Hex(str);\n\n //生成字符串\n rStr = (str) => StrUtil.reverse(str);\n\n //10转16休息\n Hex = (num) => num.toString(16).padStart(2, \"0\");\n\n //烧烤16轮\n rHex = (num) => parseInt(rStr(Hex(num)), 16);\n\n //消耗2休闲\n function rBin(num) {\n let bin = num.toString(2).padStart(8, \"0\");\n return parseInt(rStr(bin), 2);\n }\n\n\n\n // 救援\n function getHex(ck) {\n let hex = md5(params)\n hex += data ? md5(数据) : \"0\".repeat(8)\n 十六进制 += ck ？ md5(ck) :\"0\".repeat(8)\n 返回 hex\n }\n\n 函数 calculate(hex, ck) {\n 让 len = 0x14;\n 让 key = [0xDF, 0x77, 0xB9, 0x40, 0xB9, 0x9B, 0x84, 0x83, 0xD1, 0xB9, 0xCB, 0xD1, 0xF7, 0xC2, 0xB9, 0x85, 0xC3, 0xD0, 0xFB, 0xC3];\n 让 paramList = [];\n for (让 i = 0; i < 9; i += 4) {\n 让 temp = hex.substring(8 * i, 8 * (i + 1));\n for (let j = 0; j < 4; j++) {\n let h = parseInt(temp.substring(j * 2, (j + 1) * 2), 16);\n paramList.push(h);\n }\n }\n paramList.push(0x0, 0x6, 0xB, 0x1C);\n let T = Math.floor(Date.now() / 1000);\n paramList.push((T >> 24) & 0xFF, (T >> 16) & 0xFF, (T >> 8) & 0xFF, T & 0xFF);\n //异或\n let eorResultList = []\n for (let i = 0; i < paramList.length; i++) {\n eorResultList.push(paramList[i] ^ key[i % len]);\n }\n for (let A, B, C, D, i = 0; i < len; i++) {\n A = rHex(eorResultList[i]);\n B = eorResultList[(i + 1) % len];\n C = rBin(A ^ B);\n D = ((C ^ 0xFFFFFFFF) ^ len) & 0xFF;\n eorResultList[i] = D;\n }\n let result = \"\"\n for (let param of eorResultList) {\n result += Hex(param);\n }\n let option = {\n \"headers\": {\n \"X-Khronos\": String(T),\n \"X-Gorgon\": \"0404b0d30000\" + result,\n \"User-Agent\": \"com.dragon.read\",\n \"Cookie\": ck? ck：\"\"\n }\n }\n 让 b_ = option\n b_[\"body\"] = String(data ? data ：\"\")\n java.log(url + \",\" + JSON.stringify(b_))\n if (data) {\n return post(url, data, option.headers).data;\n } else {\n return url + \",\" + JSON.stringify(option);\n }\n }\n return calculate(getHex(ck), ck);\n }\n}\n\nfunction getBookId(url) {\n\tconst {java} = this\n\t$ = JSON.parse(url).data\n\tif ($.book_shelf_info != 0 && $.book_shelf_info != undefined) {\n\t\tarr = $.book_shelf_info.map($ => $.book_id)\n\t} else if (list = $.data_list != 0 && $.data_list != undefined) {\n\t\tarr = $.data_list.map($ => $.book_id_str)\n\t} else {\n\t\tjava.toast(\"获取 book_id 失败，你可能需要登录！\")\n\t}\n\treturn arr.slice(0, 100)\n}\n\nfunction getBookIdFull(url) {\n\tconst {java} = this\n\t$ = JSON.parse(url).data\n\tif ($.book_shelf_info != 0 && $.book_shelf_info != undefined) {\n\t\tarr = $.book_shelf_info.map($ => $.book_id)\n\t} else if (list = $.data_list != 0 && $.data_list != undefined) {\n\t\tarr = $.data_list.map($ => $.book_id_str)\n\t} else {\n\t\tjava.toast(\"获取 book_id 失败，你可能需要登录！\")\n\t}\n\treturn arr\n}\n\nfunction splitArray(input, size) {\n const output = []\n for (let i = 0; i < input.length; i += size) {\n output.push(input.slice(i,i + size))\n }\n 返回输出\n}\n\nlet replaceCover = (u) => {\n if (u.startsWith(\"https://\")) u = u.substring(8)\n else u = u.substring(7)\n let uArr = u.split(\"/\")\n uArr[0] = \"https://p6-novel.byteimg.com/origin\"\n let uArr2 = []\n uArr.forEach((x) => {\n if (!x.includes(\"?\") && !x.includes(\"~\")) uArr2.push(x)\n else uArr2.push(x.split(\"~\")[0])\n })\nu = uArr2.join(\"/\")\n 返回u\n}", "lastUpdateTime": 1723133518015, "loginUi": "[\n{\n\tname: \" [真机注册] \",\n\ttype: \"button\",\n\taction: \"device_register(false)\"\n},\n{\n\tname: \" [随机注册] \",\n\ttype: \"button\",\n\taction: \"device_register(true)\"\n},\n{\n\tname: \" [账号登录] \",\n\ttype: \"button\",\n\taction: \"browser_login()\"\n},\n{\n\tname: \" [退出登录] \",\n\ttype: \"button\",\n\taction: \"logout()\"\n}\n]", "loginUrl": "// 注册设备\nfunction device_register(is_random) {\n let char, udid, model, url, data, res, header;\n if (is_random) {\n // 随机信息\n char = '0123456789ABCDEF';\n udid = \"\";\n for (let我 = 0; 我 < 16; i++) {\n udid += char.charAt(Math.floor(Math.random() * char.length))\n }\n udid = udid.toLowerCase();\n char += 'GHIJKLMNOPQRSTUVWXYZ';\n model = \"\";\n for (let i = 0; i < 8; i++) {\n if (i == 3) {\n model += '-';\n }\n model += char.charAt(Math.floor(Math.random() * char.length));\n }\n } else {\n // 真机信息\n char = java.md5Encode(java.androidId())\n udid = char.slice(0, 16)// + java.md5Encode(char).slice(0, 8)\n model = device\n }\n\n if (source.getLoginHeader() && !is_random && source.getLoginHeader().includes(device)) {\n java.toast(\"本设备已注册，重复注册\")\n return false;\n }\n java.toast(\"开始进行设备注册: \\n设备型号: \" + model + \"\\n设备id: \" + udid)\n java.log(\"番茄小说: 开始进行设备注册: \\n设备型号: \" + model + \"\\n设备id: \" + udid)\n\n\n // 注册账号\n url = \"https://i.snssdk.com/service/2/device_register/\";\n data = JSON.stringify({\n \"header\": {\n \"package\": \"com.dragon.read\",\n \"openudid\": udid,\n \"device_model\": model\n }\n });\n try {\n res = post(url, TT(data));\n } catch (e) {\n java.toast(\"网络连接错误，请检查你的环境\")\n throw new Error(\"网络错误\")\n }\n header = \"device_id=\" + res.device_id + \"&device_type=\" + 型号 + \"&iid=\" + res.install_id;\n\n source.putLoginHeader(header);\n java.toast(\"设备注册成功！\");\n java.log(\"device_register 成功:\" + header)\n return true; \n}\n\n\n\n// 从网页登录\nfunction browser_login() {\n // java.removeCookie(\"snssdk.com\")\n var cookie = java.getCookie(\"fanqienovel.com\")\n java.log(cookie)\n if (cookie && cookie != \"\") {\n java.toast(\"请不要重复登录，请先退出登录！\")\n return false\n }\n try {\n java.startBrowserAwait(\"https://fanqienovel.com/\", \"登录\")\n } catch (e) { \n java.toast(e)\n }\n // java.log(\"snssdk cookie:\" + java.getCookie(\"snssdk.com\") + \"将被删除\")\n try {\n cookie.removeCookie(\"snssdk.com \”）\n } catch (e) {}\n // java.log(cookie)\n var cookie = java.getCookie(\"fanqienovel.com\")\n let user\n try {\n user = JSON.parse(java.ajax(\"https://fanqienovel.com/api/user/info/v2,\" + JSON.stringify({\n 方法：\"GET\",\n 标头：{ \n \"Cookie\": cookie\n }\n }))).data.name\n } catch (e) {java.log(e)}\n if (!cookie || cookie == \" \" || !用户) {\n java.toast(\"未获取到登录凭据，登录失败\")\n return false\n }\n java.toast(\"欢迎\" + user + \"\\n成功登录！\")\ n return true\n}\n\nfunction login() // 定量编程加上这个函数能够支持更多的版本\n{}\n\n// 取消登录\nfunction logout() {\n cookie.removeCookie(\"fanqienovel.com\");\n cookie.removeCookie(\"snssdk.com\");\n java.toast(\"退出登录成功\");\n}\n\nfunction t() { java.toast(\"这个按钮是用来看的，别点了\") }", "respondTime": 1966, "ruleBookInfo": {"author": "作者", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", "init": "@js:\nvar Regs = [/book_id=(\\d+)/i, /d=(\\d+)/i, /(\\d+)/i];\nvar book_id = \ "\";\nfor (let Reg of Regs) {\n let mat = baseUrl.match(Reg);\n if (mat) {\n book_id = mat[1];\n break;\n }\n }\n\nif (!book_id) throw new Error(\"没有 book_id !\")\njava.put(\"book_id\", book_id)\n\nvar u_Index = 0; // 0-1\nswitch (String(['API', 'TOU'][u_Index])) {\n case 'API':\n result = java.ajax(xGorgon(\n \"detail\", \n \"book_id=\" + book_id\n ));\n if (JSON.parse(result).code == 0) break;\n // java.log(\"接口异常，使用头条接口获取\");\n\n // 这两个接口信息不全\n // result = java.ajax(\"https://fanqienovel.com/page /\"+book_id).match(/__INITIAL_STATE__=([^;]+)/)[1];\n // 结果 = java.ajax(getHost(1,3,1,5)+\"/reading/bookapi/multi-detail/v/?aid=1967&iid=1&version_code=999&book_id=\"+book_id);\n\n // 头条接口\n默认：\n result = java.ajax(\"https://novel.snssdk.com/api/novel/book/directory/list/v1/?device_platform=android&version_code=1207&novel_version=&app_name=gold_browser&version_name=2.0.7&channel=vivo_6589_64&device_type=wldw&os_api=28&os_version=9&book_id=\" + book_id);\n break;\n}\n\ntry {\n xGorgon(\n \"/reading/bookapi/read_history/update/v/?\", \"\",\n gzip(JSON.stringify({\n update_datas: [{\n book_id: book_id,\n read_timestamp_ms: Date.now()\n }]\n }).replace(/\\\"(\\d+)\\\"/g, \"$1\")), java.getCookie(\"fanqienovel.com\")\n)} catch (e) {\n java.toast(\" 无法更新阅读历史: \" + e)\n java.log(\" 无法更新阅读历史: \" + e.stack)\n}\n\nvar Res = JSON.parse(结果);\nvar data = Res.page || Res.data;\ndata = (Array.isArray(data) ? data[0] : data.book_info) || data;\nJSON.stringify(data);", "intro": "  \n📕 来源名：{{$.original_book_name}}\n📖 别名：{{$.book_flight_alias_name}}\n✏️ 开坑：{{$.create_time##T|\\+.*## }}\n🏷️标签：{{$.tags}}\n👤 主角：{{$.roles##\\[|\\\"|\\]}}\n👁️ 在线：{{$.read_count}}人在读{{\"\\n\"+\"​\"}}\n📜 简介：{{$.abstract}}{{\"\\n\"+\"​\"}}\n📍 {{$.copyright_info##，.*##。}}\n@js:\ntones = \"\\n========\\n发音人信息: \"\ninfo = JSON.parse(java.ajax(\"https://reading.snssdk.com/reading/bookapi/audio/toneinfo/?book_id=\" + java.get(\"book_id\") + \"&aid=1967\"))\nfor (let i of (info.data.tts_tones ? info.data.tts_tones : [])) {\n tones += `\\n${i.id} - ${i.title}${i.description ? \"(\" + i.description + \")\" : \"\"}`\n}\nresult.replace(/.+：(人在读)?\\n/g,\"\") +tones", "kind": "男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完成结\n{{$.score}}分\n{{java.timeFormatUTC(java.g) etString(\"last_chapter_update_time\")*1000,'yyyy-MM-dd',8)}}\n##连载0|1完成结\n@js:结果\n.replace(/男生.女生/, String(java.getString(\"$.isbn\")) ? \"Publish\" : `男生${java.getString(\"$.gender\")}女生`)\n.replace(\"男生0\", \"\")\n.replace(\"1女生\", \"\")\n.replace(\"男生2女生\", \"出版\")\n.replace(\"连载4完成\",\"断更结\")\n.replace(\"连载-1完成结\",\"未知\");", "lastChapter": "{{$.last_chapter_title}} • {{java.timeFormat(java.getString(\"last_chapter_update_time\")*1000)}}", "name": "book_name", "tocUrl": "book_id\n<js>java.base64Encode(result)</js>\ndata:book_id;base64,{{result}},{\"type\":\"fqnovel\"}", "wordCount": "word_number"}, "ruleContent": {"content": "<js>\nitem_id = java.hexDecodeToString(result);\njava.log(source.getVariable())\ntone_id = book.getVariable(\"custom\")。修剪（）！= \“\”？ book.getVariable(\"custom\").trim() : (source.getVariable().trim() != \"\" ? source.getVariable().trim() :\"1\")\ninfo = JSON.parse(java.ajax(java.log(\"https://reading.snssdk.com/reading/reader/audio/playinfo/?tone_id=\" + tone_id + \"&item_ids=\" + item_id + \"&pv_player=-1&aid=1967\")))\ninfo.data[0].backup_url\n</js>", "imageStyle": "FULL", "nextContentUrl": "", "replaceRegex": "", "sourceRegex": ""}, "ruleExplore": {"author": "", "bookList": "", "bookUrl": "", "coverUrl": "", "intro": "", "kind": "", "lastChapter": "", "name": "", "wordCount": ""}, "ruleSearch": {"author": "author", "bookList": "$.data.ret_data.*||$..book_data[*]||$..book_info[*]", "bookUrl": "/reading/bookapi/detail/v/?book_id={{$.book_id}}", "checkKeyWord": "", "coverUrl": "@js:replaceCover(java.getString(\"thumb_url\"))", "intro": "abstract##\\n", "kind": " 男生{{$.gender}}女生\n{{$.category}}\n连载{{$.creation_status}}完成结\n{{$.score}}分\n##连载0|1完成结\n@js:result\n.replace(/男生.女生/, String(java.getString(\"$.isbn\")) ？ \"出版\" : `男生${java.getString(\"$.gender\")}女生`)\n.replace(\"男生0\", \"\")\n.replace(\"1女生\", \"\")\n.replace(\"男生2女生\", \"出版\")\n.replace(\"连载4完结\",\"断更\")\n.replace(\"连载-1完结\",\"未知\");", "lastChapter": "", "name": "book_name||title##\\s*<\\/?em>\\s*", "wordCount": "word_number"}, "ruleToc": {"chapterList": “@js:\nvar u_Index = 0; // 0-2\n\nvar u_Types = ['API', 'WEB', 'TOU'];\nvar v_Index = [];\nvar v_Names = [];\nvar c_Array = [];\nvar book_id = java.hexDecodeToString(result);\n\nfunction b64Url(item_id) {\n return `data:item_id;base64,${java.base64Encode(item_id)},{\"type\":\"fqnovel\"}`;\n}\n\nfunction push_a(a, b, c, d) {\n c_Array.push({\n \"ChapterName\": a || \"\",\n \"isVolume\": b || false,\n \"chapterUrl\": c ? b64Url(c) : \"\",\n \"ChapterInfo\": (d || \"\").replace(/第.卷：默认 \\|/g, \"\").trim(),\n });\n}\n\nfunction push_b(list) {\n for (let c of list) {\n let c_name = c.volume_name || \"第一卷：默认\";\n let c_time = java.timeFormatUTC(c.first_pass_time * 1000, 'yyyy-MM-dd HH:mm:ss', 12);\n let c_word = c.chapter_word_number + \"字\";\n let c_info = [c_name, c_time, c_word];\n let v_name = v_Names[v_Names.length - 1];\n if (v_name != c_name) {\n \t // java.log(c_name);\n v_Index.push(c_Array.length);\n v_Names.push(c_name);\n push_a(c_name, true);\n }\n push_a(c.title, false, c.item_id, c_info.join(\" | \"));\n }\n}\n\nfunction tocUrl(utype, params, run) {\n let url = `https://novel.snssdk.com/api/novel/book/directory/${utype}/v1/?${params}`;\n if (run) return url;\n 返回 JSON.parse(java.ajax(url)).data;\n}\n\nfunction push_c(arr) {\n let newArr = [];\n for (let i = 0; i < arr.length;) {\n let item_ids = arr.slice(i, (i += 100));\n newArr.push(tocUrl(\"detail\", \"item_ids=\" + item_ids, true));\n }\n 返回 java.ajaxAll(newArr).map(Get => {\n let response = String(Get.body()).replace(/\\\\/g, \"\\\\\")\n .replace(/\\\\+([\\u4e00-\\u9fa5])/g, \"$1\")\n .replace(/\\\\([^fnrt\"'])/g, \"$1\");\n return Push_b(JSON.parse(response).data);\n });\n}\n\n\n\n// app接口##卷名&时间&字数\nswitch (String(u_Types[u_Index])) {\n case 'API':\n let data = JSON.parse(java.ajax(xGorgon(\n \"目录/all_items\",\n \"book_id=\" + book_id\n )));\n\n if (data.code == 0) {\n push_b(data.data.item_data_list);\n break;\n }\n // java.log(\"下架书籍，使用web接口获取目录\");\n\n\n\n // web接口##卷名&时间\n case 'WEB':\n let Json，Host = \"https://fanqienovel.com\";\n if (false) {\n Json = java.ajax(Host + \"/page/\" + book_id)\n .match(/__INITIAL_STATE__=([^;]+)/)[1];\n } else {\n Json = java.ajax(Host + \"/api/reader/directory/detail?bookId=\" + book_id);\n }\n // java.log(Json)\n let List = JSON.parse(Json).data.chapterListWithVolume;\n if (List) {\n for (let list of List) {\n v_Index.push(c_Array.length);\n list.map((_, i) => {\n let c_name = _.volume_name || \"第一卷：默认\";\n let c_time = java.timeFormat(_.firstPassTime * 1000);\n if (!i) Push_a(c_name, true);\n Push_a(_.title, false, _.itemId, [c_name, c_time].join(\" | \"))\n });\n }\n break;\n }\n\n\n //头条接口 ##无章节信息(需要请求)\n default:\n let item_list = tocUrl(\"list\", \"device_platform=android&version_code=1207&novel_version=&app_name=gold_browser&version_name=2.0.7&channel=vivo_6589_64&device_type=wldw&os_api=28&os_version=9&book_id=\" + book_id).item_list;\n if （假）{\n item_list.map（（t，i) => {\n push_a(\"第\" + (i + 1) + \"章\", false, t);\n });\n } else push_c(item_list);\n break; \n}\n\n\n\n// 返回内存\nlet len = v_Index.length;\n// java.log(JSON.stringify(v_Index))\nif (len < 2) { //分卷太少不显示\n for (; len > 0; len--) {\n c_Array.splice(v_Index[len - 1], 1);\n }\n} else if (false) { //显示效果不好看\n for (let a, b, i = 0; i < len; i++) {\na = v_Index[i];\nb = v_Index[i + 1];\n if (b == 未定义) b = len;\n c_Array[a][\"ChapterInfo\"] = \"共 \" + (b - a - 1) + \" 章\";\n }\n}\n\nc_Array", "chapterName": "ChapterName ", "chapterUrl": "chapterUrl", "isVip": "", "isVolume": "isVolume", "preUpdateJs": "", "updateTime": "ChapterInfo##/##-"}, "searchUrl" : “@js:\nif (source.getLoginHeader() == null) {\n eval(String(source.loginUrl));\n device_register(false);\n}\nxGorgon(\n \”搜索/标签\",\n [\n \"tab_type=2\",\n \"query=\" + encodeURI(java.put(\"key\", key)),\n \"passback=\" + ((java.put(\"page\", page) - 1) * 10),\n \"update_version_code=60135\"\n ].join(\"&\")\ n);", "variableComment": "发音人id，参见来源注释", "weight": 0}, {"bookSourceComment": "//如正文为链接，返回重进自动切换为听书模式\n\n特别说明\n本书源限制了日访问量，每天最多看100章，其余书源只是方便阅读，您只关注在线看也一样！超过访问量的请明天再来！", "bookSourceGroup": "🍅那些网页转书源的番茄", "bookSourceName": "🍎晴天网页<晴天>", "bookSourceType": 0, “书源网址”： "http://api.cloudepays.cn#\n接口来源:晴天的网页版\n制作大佬:河鹅和.~喵\n书源起因:只是方便阅读，否则网页估计用的少！\n整理时间:2024年12月1日10:09", "concurrentRate": "10000", "customOrder": 188, "enabled": true, "enabledCookieJar": true, “enabledExplore”：true，“lastUpdateTime”：1733020253560，“loginCheckJs”：“”，“respondTime”：180000，“ruleBookInfo”：{“author”：“.author@text”，“coverUrl”：“img@src” , "downloadUrls": ".text-center a@href", "简介": “.abstract@text”，“种类”： ".media@text&&.category@text&&.score@text&&.status@text&&.word_number@text##.{2}：", "name": ".book_name@text"}, "ruleContent": {"content" : "<js>\nr=java.getString(\".content@html\")\nresult=r\nif (java.getString(\"text\",r)!=\"\"&&r!=\ "\"){\n\tbook.type=8\n\t}\nelse if (java.getString(\"text\",r)==\"\"&&r!=\"\"){\ n\t书。类型=64\n\t}else if (r==\"\"){\n\t\ttry{\n\t\t\tif (chapter.index==0){java.toast(\"如正文为链接，返回重进自动切换为听书模式\")}\n\t\t\tbook.type=32\n\t\ t\tresult=src.match(/fetch\\('([^']+)'/ )[1]\n\t\t}catch(e){\n\t\t\tjava.log(e)\n\t\t\tresult=\"未找到内容\"\n\t\ t\tjava.toast(结果)\n\t\t\t}\n\t}\n结果\n</js>"}, "ruleExplore": {}, "ruleSearch": {"author": ".author@text", "bookList": "li", "bookUrl": “onclick##'([^']+)'##$1###”, “coverUrl”: “img@src”, “intro”: “.abstract@text”, “kind”: “.media@ text&&.category@text&&.score@text&&.status@text&&.word_number@text##.{2}：", "name": ".book_name@text"}, "ruleToc": {"chapterList": "#itemList a”, “chapterName”: “.title@text”, “chapterUrl”: “href”, “isVolume”: “”, “updateTime”: “.firstPassTime@text”}, “searchUrl”: “online_search?query= {{key}}", "权重": 0}]
